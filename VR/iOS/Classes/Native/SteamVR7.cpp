#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct VirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct VirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct VirtActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1>
struct GenericVirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericVirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
struct GenericVirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericVirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericVirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericVirtActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct InterfaceActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericInterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
struct GenericInterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericInterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericInterfaceActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};

// SteamVR_Utils/RigidTransform[]
struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC;
// System.Action`1<System.Object>
struct Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0;
// System.Action`1<System.String>
struct Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Byte[]
struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo>
struct Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B;
// System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo>
struct Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25;
// System.Collections.Generic.List`1<System.Int32>
struct List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226;
// System.Collections.IDictionary
struct IDictionary_t1BD5C1546718A374EA8122FBD6C6EE45331E8CE7;
// System.Collections.IEnumerator
struct IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196;
// System.Globalization.Calendar
struct Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5;
// System.Globalization.CompareInfo
struct CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1;
// System.Globalization.CultureData
struct CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD;
// System.Globalization.CultureInfo
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F;
// System.Globalization.DateTimeFormatInfo
struct DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F;
// System.Globalization.NumberFormatInfo
struct NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8;
// System.Globalization.TextInfo
struct TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
// System.NotSupportedException
struct NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Reflection.Binder
struct Binder_t4D5CB06963501D32847C057B57157D6DC49CA759;
// System.Reflection.MemberFilter
struct MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770;
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
// System.String
struct String_t;
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
// System.Text.StringBuilder
struct StringBuilder_t;
// System.Type
struct Type_t;
// System.Type[]
struct TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621;
// UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC;
// UnityEngine.Events.InvokableCallList
struct InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F;
// UnityEngine.Events.PersistentCallGroup
struct PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F;
// UnityEngine.Events.UnityAction
struct UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4;
// UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>
struct UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF;
// UnityEngine.Events.UnityEvent`2<System.Object,System.Int32Enum>
struct UnityEvent_2_tCD04AC1BC9C3ABDC6DB6482B553FABA50231BF26;
// UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>
struct UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Boolean>
struct UnityEvent_3_tC10A55EF4A513BB7F34ECD3783FCCD6CBD41E2F2;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32>
struct UnityEvent_3_t26033F10C623A8B4593B2474D360FE554E09E5B8;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32Enum>
struct UnityEvent_3_tB967FE6E76ED69407EEAC01619C1EC8B20C01C79;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct UnityEvent_3_t40081F2EF697F552E8C4A377AC5C3B4C2E7A2A5A;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct UnityEvent_3_t71F1FA1B2F643E879720744F46B639680D8085B7;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>
struct UnityEvent_3_t41E2F467D883C365FE208841F67E87C4295808B5;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>
struct UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE;
// UnityEngine.Events.UnityEvent`4<System.Object,System.Int32Enum,System.Single,System.Single>
struct UnityEvent_4_t983F7AB7F1666BF509BC5D8984BA74878BBB8CD8;
// UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single>
struct UnityEvent_4_t27B5A01BBE9C4FCF8B974D92F4D411CFC467A294;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.Quaternion[]
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;
// UnityEngine.WaitForEndOfFrame
struct WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA;
// Valve.VR.CVRInput
struct CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B;
// Valve.VR.EVRInputStringBits[]
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511;
// Valve.VR.EVRScreenshotType[]
struct EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E;
// Valve.VR.IVRInput/_DecompressSkeletalBoneData
struct _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277;
// Valve.VR.IVRInput/_GetActionBindingInfo
struct _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5;
// Valve.VR.IVRInput/_GetActionHandle
struct _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988;
// Valve.VR.IVRInput/_GetActionOrigins
struct _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69;
// Valve.VR.IVRInput/_GetActionSetHandle
struct _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56;
// Valve.VR.IVRInput/_GetAnalogActionData
struct _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB;
// Valve.VR.IVRInput/_GetBoneCount
struct _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1;
// Valve.VR.IVRInput/_GetBoneHierarchy
struct _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876;
// Valve.VR.IVRInput/_GetBoneName
struct _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF;
// Valve.VR.IVRInput/_GetDigitalActionData
struct _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8;
// Valve.VR.IVRInput/_GetInputSourceHandle
struct _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF;
// Valve.VR.IVRInput/_GetOriginLocalizedName
struct _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F;
// Valve.VR.IVRInput/_GetOriginTrackedDeviceInfo
struct _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B;
// Valve.VR.IVRInput/_GetPoseActionDataForNextFrame
struct _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E;
// Valve.VR.IVRInput/_GetPoseActionDataRelativeToNow
struct _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8;
// Valve.VR.IVRInput/_GetSkeletalActionData
struct _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A;
// Valve.VR.IVRInput/_GetSkeletalBoneData
struct _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A;
// Valve.VR.IVRInput/_GetSkeletalBoneDataCompressed
struct _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B;
// Valve.VR.IVRInput/_GetSkeletalReferenceTransforms
struct _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5;
// Valve.VR.IVRInput/_GetSkeletalSummaryData
struct _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822;
// Valve.VR.IVRInput/_GetSkeletalTrackingLevel
struct _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93;
// Valve.VR.IVRInput/_IsUsingLegacyInput
struct _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7;
// Valve.VR.IVRInput/_OpenBindingUI
struct _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F;
// Valve.VR.IVRInput/_SetActionManifestPath
struct _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE;
// Valve.VR.IVRInput/_ShowActionOrigins
struct _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71;
// Valve.VR.IVRInput/_ShowBindingsForActionSet
struct _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A;
// Valve.VR.IVRInput/_TriggerHapticVibrationAction
struct _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8;
// Valve.VR.IVRInput/_UpdateActionState
struct _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5;
// Valve.VR.SteamVR_Action
struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734;
// Valve.VR.SteamVR_ActionSet
struct SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6;
// Valve.VR.SteamVR_ActionSet_Data
struct SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529;
// Valve.VR.SteamVR_Action_Boolean
struct SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20;
// Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler
struct ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884;
// Valve.VR.SteamVR_Action_Boolean/ChangeHandler
struct ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0;
// Valve.VR.SteamVR_Action_Boolean/StateDownHandler
struct StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464;
// Valve.VR.SteamVR_Action_Boolean/StateHandler
struct StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA;
// Valve.VR.SteamVR_Action_Boolean/StateUpHandler
struct StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8;
// Valve.VR.SteamVR_Action_Boolean/UpdateHandler
struct UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B;
// Valve.VR.SteamVR_Action_Boolean_Source
struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB;
// Valve.VR.SteamVR_Action_Boolean_Source_Map
struct SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B;
// Valve.VR.SteamVR_Action_In_Source
struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB;
// Valve.VR.SteamVR_Action_In_Source_Map`1<System.Object>
struct SteamVR_Action_In_Source_Map_1_tE23DCA7E159C6009D8EE8C1BB585F7939266D2C4;
// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741;
// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D;
// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253;
// Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>
struct SteamVR_Action_In_2_t6581D04BE16752D2B9D8A37860D18FCB02755CA0;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>
struct SteamVR_Action_In_2_tFC1FB3FBCB26CEB814D8547C997DDFD01A8A0FB2;
// Valve.VR.SteamVR_Action_Out_Source
struct SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6;
// Valve.VR.SteamVR_Action_Out`2<System.Object,System.Object>
struct SteamVR_Action_Out_2_t26EDDF8FCADB8A7F06F67CBC5DD201ED6716EB68;
// Valve.VR.SteamVR_Action_Out`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0;
// Valve.VR.SteamVR_Action_Pose
struct SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C;
// Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler
struct ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E;
// Valve.VR.SteamVR_Action_Pose/ChangeHandler
struct ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE;
// Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9;
// Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler
struct TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914;
// Valve.VR.SteamVR_Action_Pose/UpdateHandler
struct UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1;
// Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A;
// Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>
struct SteamVR_Action_Pose_Base_2_t243A518FFFF5F7018B4C37F5EE6AA104F20ABB3C;
// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2;
// Valve.VR.SteamVR_Action_Pose_Source
struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<System.Object>
struct SteamVR_Action_Pose_Source_Map_1_t8B8C4568BBAB9035BBC38B347ADCF1969560FDC9;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125;
// Valve.VR.SteamVR_Action_Single
struct SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81;
// Valve.VR.SteamVR_Action_Single/ActiveChangeHandler
struct ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE;
// Valve.VR.SteamVR_Action_Single/AxisHandler
struct AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843;
// Valve.VR.SteamVR_Action_Single/ChangeHandler
struct ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED;
// Valve.VR.SteamVR_Action_Single/UpdateHandler
struct UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D;
// Valve.VR.SteamVR_Action_Single_Source
struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F;
// Valve.VR.SteamVR_Action_Single_Source[]
struct SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277;
// Valve.VR.SteamVR_Action_Single_Source_Map
struct SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37;
// Valve.VR.SteamVR_Action_Skeleton
struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504;
// Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler
struct ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4;
// Valve.VR.SteamVR_Action_Skeleton/ChangeHandler
struct ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7;
// Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592;
// Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler
struct TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4;
// Valve.VR.SteamVR_Action_Skeleton/UpdateHandler
struct UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046;
// Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7;
// Valve.VR.SteamVR_Action_Skeleton_Source
struct SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72;
// Valve.VR.SteamVR_Action_Skeleton_Source[]
struct SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4;
// Valve.VR.SteamVR_Action_Skeleton_Source_Map
struct SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB;
// Valve.VR.SteamVR_Action_Source
struct SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0;
// Valve.VR.SteamVR_Action_Source_Map
struct SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17;
// Valve.VR.SteamVR_Action_Source_Map`1<System.Object>
struct SteamVR_Action_Source_Map_1_tF6CD4E2DA9FBD867B5F22D6A040FC06A0BFE5CCA;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>
struct SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7;
// Valve.VR.SteamVR_Action_Vector2
struct SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37;
// Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler
struct ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2;
// Valve.VR.SteamVR_Action_Vector2/AxisHandler
struct AxisHandler_t97FB692AF5465040A2929AB663941933E3567689;
// Valve.VR.SteamVR_Action_Vector2/ChangeHandler
struct ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6;
// Valve.VR.SteamVR_Action_Vector2/UpdateHandler
struct UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177;
// Valve.VR.SteamVR_Action_Vector2_Source
struct SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1;
// Valve.VR.SteamVR_Action_Vector2_Source[]
struct SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359;
// Valve.VR.SteamVR_Action_Vector2_Source_Map
struct SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3;
// Valve.VR.SteamVR_Action_Vector3
struct SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9;
// Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler
struct ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652;
// Valve.VR.SteamVR_Action_Vector3/AxisHandler
struct AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779;
// Valve.VR.SteamVR_Action_Vector3/ChangeHandler
struct ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B;
// Valve.VR.SteamVR_Action_Vector3/UpdateHandler
struct UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75;
// Valve.VR.SteamVR_Action_Vector3_Source
struct SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90;
// Valve.VR.SteamVR_Action_Vector3_Source[]
struct SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF;
// Valve.VR.SteamVR_Action_Vector3_Source_Map
struct SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95;
// Valve.VR.SteamVR_Action_Vibration
struct SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB;
// Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler
struct ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA;
// Valve.VR.SteamVR_Action_Vibration/ExecuteHandler
struct ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865;
// Valve.VR.SteamVR_Action_Vibration_Source
struct SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151;
// Valve.VR.SteamVR_Action_Vibration_Source[]
struct SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04;
// Valve.VR.SteamVR_Action_Vibration_Source_Map
struct SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A;
// Valve.VR.SteamVR_Action`2<System.Object,System.Object>
struct SteamVR_Action_2_t67EA892F0F7F8FCEB40A807AEF2569E6E8BA4B41;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>
struct SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D;
// Valve.VR.SteamVR_ActivateActionSetOnLoad
struct SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7;
// Valve.VR.SteamVR_Behaviour
struct SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586;
// Valve.VR.SteamVR_Behaviour/<DoInitializeSteamVR>d__15
struct U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7;
// Valve.VR.SteamVR_Behaviour_Boolean
struct SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00;
// Valve.VR.SteamVR_Behaviour_Boolean/ActiveChangeHandler
struct ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453;
// Valve.VR.SteamVR_Behaviour_Boolean/ChangeHandler
struct ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6;
// Valve.VR.SteamVR_Behaviour_Boolean/StateDownHandler
struct StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24;
// Valve.VR.SteamVR_Behaviour_Boolean/StateHandler
struct StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D;
// Valve.VR.SteamVR_Behaviour_Boolean/StateUpHandler
struct StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5;
// Valve.VR.SteamVR_Behaviour_Boolean/UpdateHandler
struct UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1;
// Valve.VR.SteamVR_Behaviour_BooleanEvent
struct SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4;
// Valve.VR.SteamVR_Behaviour_Pose
struct SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787;
// Valve.VR.SteamVR_Behaviour_Pose/ActiveChangeHandler
struct ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA;
// Valve.VR.SteamVR_Behaviour_Pose/ChangeHandler
struct ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190;
// Valve.VR.SteamVR_Behaviour_Pose/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB;
// Valve.VR.SteamVR_Behaviour_Pose/DeviceIndexChangedHandler
struct DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988;
// Valve.VR.SteamVR_Behaviour_Pose/TrackingChangeHandler
struct TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443;
// Valve.VR.SteamVR_Behaviour_Pose/UpdateHandler
struct UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D;
// Valve.VR.SteamVR_Behaviour_Pose/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9;
// Valve.VR.SteamVR_Behaviour_PoseEvent
struct SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87;
// Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent
struct SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9;
// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent
struct SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9;
// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent
struct SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E;
// Valve.VR.SteamVR_Behaviour_Single
struct SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562;
// Valve.VR.SteamVR_Behaviour_Single/AxisHandler
struct AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C;
// Valve.VR.SteamVR_Behaviour_Single/ChangeHandler
struct ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7;
// Valve.VR.SteamVR_Behaviour_Single/UpdateHandler
struct UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4;
// Valve.VR.SteamVR_Behaviour_SingleEvent
struct SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4;
// Valve.VR.SteamVR_Camera[]
struct SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3;
// Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>
struct Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262;
// Valve.VR.SteamVR_ExternalCamera
struct SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D;
// Valve.VR.SteamVR_HistoryBuffer
struct SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8;
// Valve.VR.SteamVR_HistoryStep
struct SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E;
// Valve.VR.SteamVR_HistoryStep[]
struct SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F;
// Valve.VR.SteamVR_Input_Sources[]
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A;
// Valve.VR.SteamVR_Render
struct SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665;
// Valve.VR.SteamVR_RingBuffer`1<System.Object>
struct SteamVR_RingBuffer_1_t353935239BF163A78AC80BF35E82548FDC5DA1EA;
// Valve.VR.SteamVR_RingBuffer`1<Valve.VR.SteamVR_HistoryStep>
struct SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4;
// Valve.VR.SteamVR_Skeleton_FingerIndexEnum[]
struct SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7;
// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum[]
struct SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B;
// Valve.VR.TrackedDevicePose_t[]
struct TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196;
// Valve.VR.VRBoneTransform_t[]
struct VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B;

IL2CPP_EXTERN_C RuntimeClass* Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Events_tEF9EC471E187D3A163781044AA4F8F0C392EB2B8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringBuilder_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* XRDevice_t392FCA3D1DCEB95FF500C8F374C88B034C31DF4A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral007325E7D8DEDACC6ED34288122B4689CB38DC84;
IL2CPP_EXTERN_C String_t* _stringLiteral1085AA8DD5D0232F772D5CA5EA871BBE2F761FB0;
IL2CPP_EXTERN_C String_t* _stringLiteral1315AF0D095A22997AA7C177E47A3203C2139E1F;
IL2CPP_EXTERN_C String_t* _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B;
IL2CPP_EXTERN_C String_t* _stringLiteral258E23932207BA363BB8C0D5C6F463CBDBE1EFC5;
IL2CPP_EXTERN_C String_t* _stringLiteral29F677B20F6C547FF7CEF8CAE9CF922165E48458;
IL2CPP_EXTERN_C String_t* _stringLiteral465EC1A5848524F5DC24880091A15CDE065E1E7E;
IL2CPP_EXTERN_C String_t* _stringLiteral5D84EB9E92DC661A577D3ADFBA33F1D74C56B13F;
IL2CPP_EXTERN_C String_t* _stringLiteral6FCA55CA3C828A46BFE96A10E69F572B61CE540C;
IL2CPP_EXTERN_C String_t* _stringLiteral7025DBCB2822E392650101D811F717F7B853C54B;
IL2CPP_EXTERN_C String_t* _stringLiteral74FBFA22F0AC7FDD2F060A9187A8A74078A10F16;
IL2CPP_EXTERN_C String_t* _stringLiteral7505D64A54E061B7ACD54CCD58B49DC43500B635;
IL2CPP_EXTERN_C String_t* _stringLiteral75490E2CC47551562599B8A6004682CA5D470BD7;
IL2CPP_EXTERN_C String_t* _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45;
IL2CPP_EXTERN_C String_t* _stringLiteral973389CC7163D5EF9A40BE4685E4E55B5CBBC66F;
IL2CPP_EXTERN_C String_t* _stringLiteralA98667A476D022EB9B2CF25800415760BE586401;
IL2CPP_EXTERN_C String_t* _stringLiteralAC897ED588F0446677581414C46F231807AB2556;
IL2CPP_EXTERN_C String_t* _stringLiteralAD66C391DC6C51CA381EB74E3DAFDAF54D01F3C2;
IL2CPP_EXTERN_C String_t* _stringLiteralB54CB9DBF86B2FBF3225C977A4074AA174D5411E;
IL2CPP_EXTERN_C String_t* _stringLiteralC45DD4E1886367F0BF6631C4DA53924377B2E7A1;
IL2CPP_EXTERN_C String_t* _stringLiteralC8D5F6371B2F6BC2DEFFEF5B888A0F62ABB5C4CD;
IL2CPP_EXTERN_C String_t* _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2;
IL2CPP_EXTERN_C String_t* _stringLiteralD92A04E3CAD38B3C3435F2D66D371A05D88CCDE8;
IL2CPP_EXTERN_C String_t* _stringLiteralE4187BF2FD07B599844663814FE58065E3DDA0E8;
IL2CPP_EXTERN_C String_t* _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356;
IL2CPP_EXTERN_C String_t* _stringLiteralEAC095C8508D4D9F7B01D7D09BDECE985F78C376;
IL2CPP_EXTERN_C String_t* _stringLiteralFFB76599BB18A20E6DA029D1F971C11E0E56D630;
IL2CPP_EXTERN_C const RuntimeMethod* Action_1__ctor_mD9D4E02AEE600236E03EBAB2449B68B482FAC69B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Event_1_Listen_m8A8805251599A69638ED15A0D6BE0714AA0A69EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Event_1_Remove_m8F5B244890D81ADF723423B17F09C474EC362C4E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_m115A20871F3A2469AFA25F1296BEA571EEA164D1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_m321165E7CC9DEF1DA851D90AED76EA3A1530D817_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_m6328CD572A94DA88CD2DF7764B1C54660D864650_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_mF196A84C3451B66EB3C0442338565F96747D1BDD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2_GetLocalizedOriginPart_m529B61D802BBCF28F2C092C5346383AEA75A3668_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2_GetLocalizedOriginPart_m6B8853113B1DDDB2FA182A1A68D34C62C7DE0B0D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2_GetLocalizedOriginPart_m7946F1E5B03F2BC1C2E8890A4C6288540608CAB7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2__ctor_m84A0B8D072E249A2404A01F576F10FAED065E6EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2__ctor_mC337EE2FE20E16CE0DE3BC0FB61364B227330B64_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Map_1__ctor_m170B052F1C8F4630A0EA0945BFBD16741CE154F8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Map_1__ctor_mB77B525B66B2B2D0584C98822837286DF43B701B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Map_1__ctor_mF16C47EF3F671810A76B7E558CB85E5E00A66F32_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Out_2__ctor_m0B60E31B563031DBD26BE2EA86C691DF168BA8A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Base_2_UpdateTransform_mA2326B217389FE7C35FA7067EC5CB94B949791CD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Base_2__ctor_m24086345D5295A3360CF25DCB9922CA2CC4ECF61_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_Map_1__ctor_m01AFE5DB1C492BA28D7FDCC30F55DF0575D12510_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1__ctor_m6C1A695791C6F45BCFC9ADC7DCB97B87B3EC146A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mF21C5814C265EFC4899C82CABD8F8B06AA15471B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mEFCBE06F5B95B7B22034582867FB7A5F8727E586_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m1E9414957183586E6FF3E1E974A38D383F7E0DF7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m130430A4E29B8DFBC7CDCAE0B231DFD30CF44673_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m5CF5771D7FD7C09E534720FD40E3E84BF5D58B2C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_OnBeforeRender_m0818B254035656D9F104ECC0A560610A157839A6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_OnQuit_m679A2B157C312FCC9954E648D63C0CCFB21AE737_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_m421F721865D803A4E945E6778BA9A7EFF5E951AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m336C9055314F522350A2E8E5A0CE8C056715627C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7FF9841FC2827462D25AB20E82A4E047FF261DCD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_m6076628455AFF0E8E5D1881ECC1DA1AEECB853AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m44FF8FEB2FF5FC6CE899988F2FD8123B0F0D207F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_XRDevice_deviceLoaded_mBAD5428CEB4E87DECF5870A84227DF9A3A760270_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m023E8D67A6FE7772CBA906DD9D78CF46E68507A6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_RingBuffer_1_Clear_m2C7D896B3858292039808C7E01DF664897B475FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m1E8B7365C4794907A6E2E282565B0A50D323DDB8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityAction_1__ctor_m6EB8530A97D512C3B138A2E6D2E3AC341BF52772_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_2_Invoke_mDC3ABD7C6EF5EC88E0AE0923288A39DD09F6FA90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_2__ctor_m137357246070AFA3B17FB19910C2A1185E6D8621_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_m3A78EF6BF93EE4D499650755D51FDC077326A4F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_m85D272CC49BAAEA486833C6EF0950B82842CEF5F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_mD4A4C2D0CA068E45CD98111CAE832D288E038E98_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m10F71AE70BD85BB8601FBA6614DDB9C0F985F2EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m66C9678D0591A0E9192455E02726644C922DA272_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m91B112A0D14C5CA7DDDF2595028DEA1CDF5486E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_mCD47DA05DC1F58F7F16CC19983F3A4496808D370_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_4_Invoke_m0BEEA262F9A9CB9B641A2FD8F786D8E254B63030_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m13FCEC857F276CCD363B9E0573760C7DC503157C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m8BA8582E8229FBEBD3D4EA1F30EF9D848C8CD8A1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m9995300C6F19FEE52CC3ECF00A665295AEC75ED5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_mAE3B1385B2D13895DA61F41F44F316C1ECC3C209_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_mDAC87011DFBB3A741F9193B72EFFCB727DC51399_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_mE80886E385DA60F4847DEF757AD6B6BD46D8641C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AxisHandler_BeginInvoke_m4FE79547E75F92C873C63002FE5EB08EBC37E2C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AxisHandler_BeginInvoke_mFE2BE9BF34FB3FBA2F277E50B7B2B3B908B9D278_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_m4A37E07F0C7389137045967EC103049B216BACE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_m64CE8AD95AFF7D63BB705D05EE591FD010443899_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_m7B16EFF83EE198C4F588362AD79FEB523D4A3AAA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_mD9F524B7A68D21351FD5AADC67315DB04D570B71_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceConnectedChangeHandler_BeginInvoke_m209513DF91AD3196C36A63A497FF6E8225010C5F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceConnectedChangeHandler_BeginInvoke_m8C9DFDDCC365A23F9107BF992A9905B278F51647_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceIndexChangedHandler_BeginInvoke_mB8E7E026CDAB6167F6F3AE598A707D646BE07EC4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ExecuteHandler_BeginInvoke_mBA1F7A0BE921B3BF9C4DE45FD918225F54F6E5E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateDownHandler_BeginInvoke_mC153CDFAF7AC339FAACFDCFA082FF7258E6F134B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateHandler_BeginInvoke_m1DD3B0F3711284D0A5DD3DE07D064DC78C5336A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateUpHandler_BeginInvoke_m8DF031B0D54DDA6BFBDE321B13DDF591FF2CB5D7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_Map__ctor_m5230AC179899A005416BDED17CA57813E46D3095_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnActiveChangeListener_m968F5A067EEF273C13B96DA27DA642DC6A66B7C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnChangeListener_m015ECED2A9A19D9CB71C6EFC04BF7D1AD88D9290_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnDeviceConnectedChanged_m3F6920BBAA979A2A0EDB59218966A88E6668CA14_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnTrackingChanged_m402EAA963427FA4B649E5CD85AD98003FF7AE894_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnUpdateListener_mF20419DDD629D27354EF32069FE666DBF37C1883_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnValidPoseChanged_m0B6DFA419BB885643B320E96B7B878EBE921B39B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetActive_m1090332A342CFB41EB88E6BA50BBF8C696743A69_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetAngularVelocity_mFC20208B5BBBA5BA921F1541BFBD1126A2850946_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneCount_mD2B27CC695DB970DE6F2FE9F57747306854185FC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneHierarchy_m7D18FB8905FF1D89946B28716C590188E1F6FC10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneName_mEA597D8F1EF33A996E2E155F72D403299BD01303_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBonePositions_m3255642E4D3CFB08DC2AE68FEA234FD6BBCCD138_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneRotations_mC23759032EEAB4D83EC4A90A7A438EA436291C78_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetDeviceIsConnected_m2EFB10F62BBFDDCA14A353A0BFEA9DE26BFEDB72_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetFingerCurl_mC08596A16D1F47B97BFC0DC8D9089F761751C1A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetFingerCurls_m2C47FBB4DDBD822E30CDE306DB8C42EC1FB263EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetFingerSplays_mF382477166C698F55CD9295969DCB4CCC3E50358_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastAngularVelocity_m0F6189A5D1B1F5400F4725891F1B7FB6B6A724BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastBonePositions_mE1AA5295248A42DA26F2BA67C7995CDE65111CD4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastBoneRotations_mA7A7CBCB0B61367EBB09C9970C85A174877AF694_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastDeviceIsConnected_mDE11523435C378EA5D5CDFD18DA2E613A7B3C84A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastFingerCurl_mEB8760CBAD65388E4ECCD999150C3D6287171762_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastFingerCurls_m837D08CB5F33E924DD18D57A5336BB79C1F11E8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastFingerSplays_mDE773B4D09E1BD573E61E51F68DBD2C539F7A5E6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastLocalPosition_m47A225F07BE521AE0BCE352D6D9DC51EB1D3C367_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastLocalRotation_m99CAC6CCFA012EAA3DEF73BA8DC2B781E6F95542_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastPoseIsValid_m59F5349322FB99412B3D1169B6529CBC47045464_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastSplay_mD9365C49755E9D59DBB8F2F9F42EBFA2EAC6DFD5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastTrackingResult_m37C8D9BEA0568AA117E7F4A9A6C25E36D08D628F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastVelocity_m578B56041101A994C9D60A31B9F360B7E0C63AAF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLocalizedName_mCA0837A292A587208047FBE2124BC489489AD867_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetPoseAtTimeOffset_m180DEFDDB1EBE9F66B1E68EA11C534AE1F963844_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetPoseIsValid_m99410844A085C144FE9679FF756ADC2B0D030B74_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetReferenceTransforms_m003738CB3D282D68A3B67970CDF7F508117FD296_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetSkeletalTrackingLevel_m6C574D1BBEA110C4DF8A5CEEF03E4987709F73E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetSplay_m66C049355DEC070185248558C8532BA370F5B14F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetTrackingResult_mC2E4F3F2683D8B4AAB82B16F36D49F3FD81B5BE7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetVelocitiesAtTimeOffset_mA16A4DD85A3A182D61A4FBAA4FC09417857D6CC2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetVelocity_m9E1BECFF847AF4E2FB1AEF786886D9A1A5F42E38_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnActiveChangeListener_m5EEB8B05019E4FA1D263D5298C7BED8CC507AB70_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnChangeListener_mB2F9897205C80AF6D1559591895B282C44FD5EBE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnDeviceConnectedChanged_mA18F4C31F9CFC1776A1AAC396D3C1119A628C9F7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnTrackingChanged_m84311EDF54C6CF314A1458A5E9F5770D0F03CD80_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnUpdateListener_m22D3BD60FDA20067C6BA839C23D845E6D8435CBC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnValidPoseChanged_mF9850F2CF5D7E5BB5227391356781343755A1A1A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_SetRangeOfMotion_m017F4F1ED06300A3E9020E197317C7CCF8E1DF9B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_SetSkeletalTransformSpace_m61B2E3EEAC4B192918171C8B2963D560C650C73C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetBoneName_m464D8D3413D7782356433F03C854B062E0080488_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetReferenceTransforms_mD97ED9032334370252095D9ABCED25D4D5533B92_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_Initialize_mD90DB98AC67B0E6CCCC98FCC5D0BC9FE9F575E0E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_Map__ctor_m94EBD8B1E2B39C473A26A199467C31E19BB0875E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_Preinitialize_m47C2874B5006B62A17DF399E7851585E7AB8ACB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m2E5AB154AD8698F22D1DDBE5D414EDD879C5FADE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_UpdateValue_m4CC3C0F03604C6D5866D0F2D173B3D0E37FCD321_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source__ctor_m93B62239D040E4627952B767DE40BCC4FDBB7E58_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_mBA9217A7856EEA2B9346304FF33C00F3D35E381D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m928BE406E004801B903336174AD71858077B4C31_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD478BABEFF9FCACC6B15E5540EEB66A8F7B4B545_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UpdateTransform_mF3D00D161725EB90B155367C2485D7D092FF7650_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UpdateValueWithoutEvents_m80B8E2671A00A7299A9E0FEF4010A8D87B01A782_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UpdateValue_mE62B79C272C41DD238C9CA81CEF61DF2B877217F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton__cctor_m0A753A149C76699E9C1789D16079474F9935338E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton__ctor_mE6AACBF536160DEB2EF9E0D179D7E92A652D1AAC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onActiveBindingChange_m8D5A4BC261C88609DCE5DC6C6ACA319CF096AE3F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onActiveChange_m40D17716AE011C3C546D9311644DBD3FB039CD2A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onChange_m12A9C8A760977D5F6A2B691B27F130DDF53AC3D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m2FD37E10C687951C71A4A79F55C2A0AB37599130_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onTrackingChanged_mB96616276E5D48F8D8B4FDDC7EB5FDDBB05EC51F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onUpdate_m89B6922E93039BB28782F32834DA94C7BCD71B93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onValidPoseChanged_m8A1E87644531826367E6DE4A764001078158B278_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_bonePositions_m0CA06F68C8E3D40036C298CE992C74A79C7DA80B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_boneRotations_m3FF8C259CBA6EF38DF309362206C2871EB754A4E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_fingerCurls_m3543777AFAE62C3BDA5BD87296938A0A35968571_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_fingerSplays_m9832D47FA8272304A06D1EA2D5983C6A0335C727_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_indexCurl_mD40CFB5149D41DB9D401BA6316815F76D18E0862_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_indexMiddleSplay_mCEF74F281F6E5AA8CEB2B6C38C4521E6A5504CD3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastBonePositions_m5BB686C5104B6A2CC970239A84B0DD48EED00005_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastBoneRotations_m116F9E698A5C9DF460DD49FBEAB7580913027F9A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastFingerCurls_m5845169E9581C6D1C559916C9FE6B0D3BD88F569_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastFingerSplays_m1E58D2AB027C4777F5CF744CB81DA5D20AAE272B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastIndexCurl_mCB8D286E38817E71154F868F20D34781520D2342_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastIndexMiddleSplay_m537358EC0290F43CF54E6D59908B747203917385_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastMiddleCurl_mC6A14E91B4ACA78451639E2A12A0236CB8D4355A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastMiddleRingSplay_mC7DEA2B768D213209132AC1104490CE3A03225FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastPinkyCurl_mCDDB123CC3232A31CDEA442F98F1CD266DFB9473_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastRingCurl_m49EEA025CDB4F42177A323C4669EE312C2EA104C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastRingPinkySplay_mFE5B99D86267CAE5489CC5E38E519A9B703130EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastThumbCurl_mA1ADB215014FA9B424CBE9C69873CF3F0C09178F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastThumbIndexSplay_mAA1B4AB36A8AE75C12693D14E837471F029582D7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_middleCurl_m62D5CADF36971682033F53297E0BCCAE2F9291A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_middleRingSplay_mBBA68EE0F20B15BE029B99BF161B6EF769D7D8B1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_onlyUpdateSummaryData_m57BB2B0F924B60931DB89E6519BD6D5DDC004366_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_pinkyCurl_m64F91EE4141BACF0FB606F58E150CCD42ED15685_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_poseChanged_mF300E3B9442ECA6F8E85323A6273F2D2BEDE7EBA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_rangeOfMotion_m67729E8AE1AA6F85CB507D08500E43B64DF76785_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_ringCurl_m772FE608FCBB514FFB5AC088EB6A8562E76EE96B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_ringPinkySplay_mE8F0CDC0FEF2E9B5574DE4052C71992CE0C056E3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_skeletalTrackingLevel_m42CDC3C3C98C91065325A4C71510B9B8B6FBAA14_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_skeletalTransformSpace_mD90A3FC93A8F0BEF500E54EBE0AC67E323950B35_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_summaryDataType_mD93DEF103A25384272D6EC1915F2B794806F4519_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_thumbCurl_m1BD464F774C52E7239B4B82F4E56084F4CC1A8CC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_thumbIndexSplay_mE7F58F6BB1309EEB6BAF6048DCEF95FD7CDB7F7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onActiveBindingChange_m848BD10A1A87309B1DF4069572CE76F5F239F466_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onActiveChange_m339C2BDD69B4C1D1B1B7FFCA026A61BACEFD7189_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onChange_mDA1FBCD9AF09E3137213E323678DB53BA516C55F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_m6FBB5C7942C93C9C82500CD1A245E867B5D9BEEF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onTrackingChanged_mD222AA9F12ADA54BAE92CF73C3F29AB76394B216_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onUpdate_m0E36BACC29D6E1A0EDD1D71A7A8FCACB8AD9BE12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onValidPoseChanged_mE939F9AB63558D460288EB13C9AB8BA094CE5EAA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_onlyUpdateSummaryData_mBE77FD96B7AE53E0FA0679F6C3F88016BF0643ED_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_rangeOfMotion_mCC7941D0B8CE86B51609ABF9804D181ED390EB99_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_skeletalTransformSpace_m39DBCAE0F9F39E5CDBD826BE8B6C50CC7DC78AB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_summaryDataType_m13115F91144A13888FD3AB33CD4FFCB4A599E001_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Initialize_m2F3A973A4338854E06EA51D28CA96DAB1E5D29C9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map_Initialize_m026286BBD5EDFADDDD6493E5E6B632914BDD7384_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map_PreInitialize_m92B10A3664CE21397144BE519EB0F549E43DAE5F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map__cctor_mA2B070AE1F0DA7660630C182FFE245986C0CF8DF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnActiveBindingChangeListener_m782C7E1662D5992F1FC16F8AE5277261C8CF190A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnActiveChangeListener_mB482EE4DEBAFBA46414DEBBC39ED9AC8FC7F3690_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnAxisListener_m41DCCC8C19E06128A5587638761C43B0F3DE54D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnChangeListener_m64A46A34B927694B2F168690057D360C05CB482A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnUpdateListener_m44C545B1A2FFCBF62436D4573D2933241EE5C02F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetAxisDelta_m28C52C9103D70A67727BE8BA93551C07951670B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetAxis_m8A479C238CC933D200B7011F525F49CF84C42BC2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetLastAxisDelta_mFB4F219149889D017084BD189D659164E91E90C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetLastAxis_m4B679A6140787156C4E740F9A68D03D919111484_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnActiveBindingChangeListener_m3136E04858B1362DC1D5D51CE1FA27DF160A89E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnActiveChangeListener_m46F423A97CF4BB520CDB40A179E5971C977B7F0B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnAxisListener_m5DA6BC281F67A62D6396C9C22181A1AAD96925BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnChangeListener_m0365B74847AF715BC567B7896894340AAF36CD9A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnUpdateListener_m72B61CC091D476EB3C4BAC150E9F2A15C3F0C7CD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_Initialize_m90A49D5DF367619ED0E44D8BBA576C462EA60BE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_Map__ctor_m0736EE8ECB1DDB8DE05D85DA3956228EECAC4A79_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_Preinitialize_m39F0990901BECE7D2D6DB17C641DD2E3568446A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_UpdateValue_mEEAE61A19D6A526B51C6C58470E2C4138E622F70_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source__ctor_mA8DA34CDBF8615AE3F8B90FF052847F729723380_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mCC1A059E602FABC67D24682DD3533CBC66564596_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2__ctor_mD1E4556AF2B0DFA3D91AD96685F317978593D46C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onActiveBindingChange_m963BB4FE60F0CDE3896183F29151E51F079A24A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onActiveChange_m9EA2FF019B7968EB2BA9BF053F590FD97F20EE92_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onAxis_mD6AD44E8467900BFC690827ACC860F9BDC6213C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onChange_m2E54BCC55EB640613E93BD19303BE637F65A92E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onUpdate_mCA2F84092B776F04C0FA3E8461B5DADA42E43906_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_axis_mE421CADA54F41607E4F071B793BD5C55171812FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_delta_m368E3DEDCCE873F323FCB9B85C72103971A2B1E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_lastAxis_m746D1B31C63B141A97FBD0F4138D703FC5F9DEF0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_lastDelta_mDDAC2B9F3DB61F8B1015F22B61CDD9591FEEEDD7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onActiveBindingChange_m7500E9F9BDA0A03ACEEB0B9D181748D4BAF775D7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onActiveChange_mAEC443E675E12BF7B828ABBC60434149D960F1A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onAxis_mD9B1611CF8ABF8163817BF48CAF68C8F9184687F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onChange_m77DB5FCCDE335AD1CA8C3C2AF3C40837EC43F1F0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onUpdate_m4BD84B90D18629BEB3A1280A09F3A0D5D8515465_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_AddOnActiveBindingChangeListener_mD4EE1282A0FB4655B3FB625E7F9426CE6768F974_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_AddOnActiveChangeListener_m3AC34E4D209B6AFB9CA44503C4B44196F62D7999_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_AddOnAxisListener_m282FA5CD56EBF34E7036BB26C8CA000C287BCB19_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_AddOnChangeListener_m968A70DCAD38BD6144A728B62259CF14931691DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_AddOnUpdateListener_mD5B0AA1751D01CD88D69BB486F4155B25E7837AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_GetAxisDelta_m6A8BA36DD1F6238D9EE8EF3D7E0F0C87CCE3D9C0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_GetAxis_mAECD5AA7DB213F313164BCF52B688A44D2466EF5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_GetLastAxisDelta_m68EA72E9F86BD55D97944438DE7173AD6DA2537D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_GetLastAxis_mF0C0D122C31F80A5713E739B8D04D352756A6EB8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_RemoveOnActiveBindingChangeListener_mD6DAC1F959C854F263B7DBE355BC1F57DCC83E84_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_RemoveOnActiveChangeListener_m8528E291ADA5321ED6625F9C0E2FA1916149A63A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_RemoveOnAxisListener_m2A2EB9DBE81BE1F44FAF3867AE5073E8803B7FD7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_RemoveOnChangeListener_mDED9A3F384D62A8D58F471C575DDF6B3323268CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_RemoveOnUpdateListener_m288F4DAAF8A29A618BD95D5E9ED53DAF200FD69A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_Initialize_m7319A181C155F024D4645D224B6A4E53C4179E71_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_Map__ctor_m5EBEA11941471071F281381DC20760FE6FAE2319_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_Preinitialize_mEDAE1B25E5953DF9DCBD9A19520B0FFC8D4D3E9E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_UpdateValue_mC05A5EAC0C27785B60C223C83F23A7C57EC48077_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source__ctor_mB7060D57C96C83851FDB1443DDD44702AC1C5128_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_add_onActiveBindingChange_m562401793E091E0F7334C655471E49B47D379296_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_add_onActiveChange_m852AB08B89861ACB66FE7688DC14A3BDB15C3681_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_add_onAxis_mCBBF665AB546060F4E654D9FC0E79FE4ED5D5A49_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_add_onChange_mBC0D15F379F129D8B26B395AA54FEA447711BFCB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_add_onUpdate_mE9FEAEF2D8870D9CCB4E2C7DE9E75061D706A4EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_mA2C523EA1DFFAAD99B982082A2CE53D1D061B5D8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_remove_onActiveChange_m2C0CA1E525F84DE742C9F16077EFA4222F43B1D9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_remove_onAxis_m8BCC7D535B497B755AC3CB8EDB997BD6CB92099C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_remove_onChange_m8A33FE53328AAE0025BDAEC35D22FB0F9113CA0A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_remove_onUpdate_m38E4C3064DFE3725CE69DC446A6F10192C1F5B1E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m2828349EEC44810B3AD7CF6AD00E8865CF5A53D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3__ctor_m5468C9DB9AA879F1BC0854756C56E156B0D3CBD1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_add_onActiveBindingChange_m129FDCDCE7D58D4BB9A6545459ED405146C353A9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_add_onActiveChange_m99AF6EFE7C50CBC503072E84A9A71712A7191EE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_add_onAxis_m42C6C949C5494918DA3BB9F9DA7FE09A34A7B1A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_add_onChange_mC881F353BB159D930024285D8B9BB16298129ADF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_add_onUpdate_mAB34E6BB92493EB5E9C1C1D5E0441D94048314DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_get_axis_mF2A2E572ADC8B76D4232AED7D44A94ACD1906099_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_get_delta_m3EA8C5D174CB8D7965B2026361C94F6FF750E38C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_get_lastAxis_m0365F5B93BB05F9C8F59C44DA333B70C1C46F1DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_get_lastDelta_m1C55579E0A38F190350FF1827125EC6AC7D27606_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_remove_onActiveBindingChange_m98550A3C0B6C0D36B3547815384CB000A6B39EB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_remove_onActiveChange_mCD9109BA2C36C19880C3B3ECDA304558916090A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_remove_onAxis_mAB5BBED88279B20FD5B39DB7100747D1C9753122_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_remove_onChange_mDD391BFAE5FC3A1F939CCEE35575B9DA8068650C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_remove_onUpdate_m1EF52284FEE85C26016692C722CAE43D224CF9B9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mB4C0C45F69D5505E69670C36A48C4B39C31BF55B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_AddOnActiveChangeListener_mBD5ECF777CCF2FCEE7B818090A68B74A58B2672D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_AddOnExecuteListener_m72382B9A93A005ED5F3142812C5DDB11282F05B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Execute_m124FEE875BDC0851E066D1D3841958F9A692A864_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_GetTimeLastChanged_mDE93271994C78C69731667D1192C723327195CCF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_mE3F14AF76DE9B01FE233CECD9F856B1B7E9091EF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m7D383A3DE81B6637B0DB25A85752027DA666B6EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_RemoveOnExecuteListener_m0054B983D2F48C10097BB4043C934ED9D439710E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Execute_m2E924325EBC74765BD87DB04F35D3B2889653FFD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Map__ctor_m56A7CD682FCF48426A6C7067478375C14AA15CD6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Preinitialize_m9284EBDB6DD79E6ED42B3A229886DDD7D5218CAB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m5456DA7FADEDDED32977C854D76BB7765EEF72C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_add_onActiveChange_m9BC2B487CBED1D7127ED45293CA941D72E3E12B2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_add_onExecute_m3A0C48B0C709153E82F1C7F964229831D1A5A5AD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m26A0079B8CE2B2725D05363380786A0FBADBA58B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_remove_onActiveChange_mC23DE0386F09EAF989BC23BF469B87675CC633F2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_remove_onExecute_mFD0DF79D91B2517D1BE827AF43192488BF95BB97_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m9E9E79B50056DDF9BBD300D7B3A81A99AF05F513_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration__ctor_mBF0D99569A2B823196BD1883F3F5917732F114C9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_add_onActiveBindingChange_m2D7EAB87ED78B5DFBD38B113D94C4388581D1571_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_add_onActiveChange_m2E6D38D5E932FF3B0865BE9814B7396AF5C4FB6A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_add_onExecute_m58222D417BD7F4875C9A891E30D242191798239F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_remove_onActiveBindingChange_m5487A4A54D05F965C7FDAFB3C4F4D27FE62E7347_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_remove_onActiveChange_mC6C6C7508F078D2754A84E840A75046849218F82_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_remove_onExecute_m5D86FF4294E63494B996243F2B5A8D04CA7E2689_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActivateActionSetOnLoad__ctor_m33BF729AA592A742A0D42B360D6A526F507CDD48_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Awake_m788AC835EF2A4FBF45872FDD7CFBD40EFC8DA215_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_BooleanEvent__ctor_m81B45943985C51D82C872146C8F9EEE8D1E726CD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_AddHandlers_m823CFF107CF1AD53DE4C9EC1F9D4C176A82BB7B5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_GetLocalizedName_m228AF527E0E5AE0DFDF4734D078F031E5D7B9176_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_OnEnable_mDABBAADDA7B1608B84DA3C08CDB0FF95404E0F25_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_RemoveHandlers_mAC5DA1A3504CFE75A437DECA78C182AFAAAF525F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mF21C5814C265EFC4899C82CABD8F8B06AA15471B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mEFCBE06F5B95B7B22034582867FB7A5F8727E586_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m1E9414957183586E6FF3E1E974A38D383F7E0DF7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m130430A4E29B8DFBC7CDCAE0B231DFD30CF44673_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m5CF5771D7FD7C09E534720FD40E3E84BF5D58B2C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onChangeEvent_m4E16E1045975B6C45F4B23E19261861C2ECBE869_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onPressDownEvent_m78E458B70C90516E570A2FBEECEA70DD7119EF50_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onPressEvent_m1E8354D85556C6325BCBC7FB14A94E30C092B59C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onPressUpEvent_mAF306EAF78AFDA2889362A210101887043A57922_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onUpdateEvent_m8E9D34E13022A600D746B6F66A2A08624CD0456D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onChangeEvent_m1A60627E819B9BC0D882C8D614C7370D52C6331C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onPressDownEvent_mEF6D6F38AE12A6AB02BD363F31691665D2F74987_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onPressEvent_m7A0D1D766E9928FA154BD0399EBDDF808D44AE53_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mBC83D15903D8D801B12D8FF3AF446720A61242AA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onUpdateEvent_m9F6333BFE5E152F40129DC9CB71A14D26A026D7E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_DoInitializeSteamVR_m6381B3BE347375855EB5B57333EA5DBB73227676_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_EnableOpenVR_m7D05792DA3B94D1C9553D65294F10BCD68AEFEDA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_FixedUpdate_mAD9F306CBFC1E4819561E45BBABE8CADFB4DA790_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_InitializeSteamVR_mE61CA86A8346EE3801DD80B936BB0ECFB6685B12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Initialize_m528617B3FCC69EFDCE02D8F4FDC31A912864393B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_LateUpdate_mFAE43B15752AAC05ED726AA5B16D2A327C734D63_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_OnDisable_mE37FA968D4A18DD7E0C8B9C53A3D2F814FABF852_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_OnEnable_mEB156B579218AD09A569A18AEBAD732F66464742_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_PoseEvent__ctor_m9EB4E76C9187D57B3CCDFE1255455758C8C7467C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_CheckDeviceIndex_m660A5E3A27DA0FB0480B932C8F5DBABD5F049821_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mA5DB93D4F0447DF0D7C3711C37FDCDB97373C914_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m17A931B1220A938634CC8CC09243BA0926887206_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_GetLocalizedName_mB8C89CE045222C39A407A2D9D5ED2CDC2CB156A5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_mFE4BFCCB03C93479CEA39FB1768970FF06D19054_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnDisable_mA1F1266656EC494676707750F7C7D10A66053A23_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnEnable_m9498FC3A7BE7709B64D7330797E7495BE284F5FA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnTrackingChanged_mD620444D43D0DBAD25D5DBE734518A1D2FC866F0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_Start_mA7BDF89185033DF4FAD877A82134FFBDC5DCB83A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_m421F721865D803A4E945E6778BA9A7EFF5E951AF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m336C9055314F522350A2E8E5A0CE8C056715627C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mA27FBEBE9B24BB447618E00852546BE261419869_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_UpdateTransform_m81AE92492AD65C97F0718B163D0887C3ED51A73C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose__ctor_m47E03357B7EFA19BFB80145138A2C41E4E222E06_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_PreCull_m6646FC73833D0F3506A42D22CB6F7565D88783DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_AddHandlers_m33DFA219D2F2AD321D3959EF6F374EB90DE9A545_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_GetLocalizedName_mB9D12572F9BADB69FE39312B206F226679830AC9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_OnEnable_m71A92CB17B71C081D810774EA5A478510DA646F4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_RemoveHandlers_m823BF0CB040DDBD5205EDF83C240384A0155A928_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7FF9841FC2827462D25AB20E82A4E047FF261DCD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_m6076628455AFF0E8E5D1881ECC1DA1AEECB853AF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m44FF8FEB2FF5FC6CE899988F2FD8123B0F0D207F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Update_mF0BFBDD6F56BF7958EA199F1873A759DCED43BBC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_XRDevice_deviceLoaded_mBAD5428CEB4E87DECF5870A84227DF9A3A760270_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour__cctor_mF21007BCC5E9AE7CAA86433448A6B28962740AAB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TrackingChangeHandler_BeginInvoke_m42D9F5FF3E35F0672FE3431BB949155AA4AC80AA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TrackingChangeHandler_BeginInvoke_m43201E583133A2E3850C37D9AA95590B794E0279_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoInitializeSteamVRU3Ed__15_MoveNext_m46E4CD99DE21CC56C7C619D70C03B2E330B8C111_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m1E8B7365C4794907A6E2E282565B0A50D323DDB8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m39E0A14616B2409E7BBD0EBDE2C4877D7BDFCD34_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m5A11BA90EC77DC6A74A4A3EB330BB4C3999F3DEE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m64FF27DC0A666F058A491BA34AFE54460466D6CE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m7FED3360534B5757B976D2011DA92B75FBB9A209_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ValidPoseChangeHandler_BeginInvoke_m630A2F9E244998060CC71348CEA35E8537E47DE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ValidPoseChangeHandler_BeginInvoke_mE150825338987C90F88253830B7C4DE4DB11F9A2_MetadataUsageId;
struct CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_com;
struct CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_pinvoke;
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_com;
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_pinvoke;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;

struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC;
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3;
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511;
struct SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4;
struct SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04;
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A;
struct SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7;
struct SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B;
struct VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object

struct Il2CppArrayBounds;

// System.Array


// System.Globalization.CultureInfo
struct  CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F  : public RuntimeObject
{
public:
	// System.Boolean System.Globalization.CultureInfo::m_isReadOnly
	bool ___m_isReadOnly_3;
	// System.Int32 System.Globalization.CultureInfo::cultureID
	int32_t ___cultureID_4;
	// System.Int32 System.Globalization.CultureInfo::parent_lcid
	int32_t ___parent_lcid_5;
	// System.Int32 System.Globalization.CultureInfo::datetime_index
	int32_t ___datetime_index_6;
	// System.Int32 System.Globalization.CultureInfo::number_index
	int32_t ___number_index_7;
	// System.Int32 System.Globalization.CultureInfo::default_calendar_type
	int32_t ___default_calendar_type_8;
	// System.Boolean System.Globalization.CultureInfo::m_useUserOverride
	bool ___m_useUserOverride_9;
	// System.Globalization.NumberFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::numInfo
	NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * ___numInfo_10;
	// System.Globalization.DateTimeFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::dateTimeInfo
	DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * ___dateTimeInfo_11;
	// System.Globalization.TextInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::textInfo
	TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * ___textInfo_12;
	// System.String System.Globalization.CultureInfo::m_name
	String_t* ___m_name_13;
	// System.String System.Globalization.CultureInfo::englishname
	String_t* ___englishname_14;
	// System.String System.Globalization.CultureInfo::nativename
	String_t* ___nativename_15;
	// System.String System.Globalization.CultureInfo::iso3lang
	String_t* ___iso3lang_16;
	// System.String System.Globalization.CultureInfo::iso2lang
	String_t* ___iso2lang_17;
	// System.String System.Globalization.CultureInfo::win3lang
	String_t* ___win3lang_18;
	// System.String System.Globalization.CultureInfo::territory
	String_t* ___territory_19;
	// System.String[] System.Globalization.CultureInfo::native_calendar_names
	StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___native_calendar_names_20;
	// System.Globalization.CompareInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::compareInfo
	CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * ___compareInfo_21;
	// System.Void* System.Globalization.CultureInfo::textinfo_data
	void* ___textinfo_data_22;
	// System.Int32 System.Globalization.CultureInfo::m_dataItem
	int32_t ___m_dataItem_23;
	// System.Globalization.Calendar System.Globalization.CultureInfo::calendar
	Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * ___calendar_24;
	// System.Globalization.CultureInfo System.Globalization.CultureInfo::parent_culture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___parent_culture_25;
	// System.Boolean System.Globalization.CultureInfo::constructed
	bool ___constructed_26;
	// System.Byte[] System.Globalization.CultureInfo::cached_serialized_form
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___cached_serialized_form_27;
	// System.Globalization.CultureData System.Globalization.CultureInfo::m_cultureData
	CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD * ___m_cultureData_28;
	// System.Boolean System.Globalization.CultureInfo::m_isInherited
	bool ___m_isInherited_29;

public:
	inline static int32_t get_offset_of_m_isReadOnly_3() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_isReadOnly_3)); }
	inline bool get_m_isReadOnly_3() const { return ___m_isReadOnly_3; }
	inline bool* get_address_of_m_isReadOnly_3() { return &___m_isReadOnly_3; }
	inline void set_m_isReadOnly_3(bool value)
	{
		___m_isReadOnly_3 = value;
	}

	inline static int32_t get_offset_of_cultureID_4() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___cultureID_4)); }
	inline int32_t get_cultureID_4() const { return ___cultureID_4; }
	inline int32_t* get_address_of_cultureID_4() { return &___cultureID_4; }
	inline void set_cultureID_4(int32_t value)
	{
		___cultureID_4 = value;
	}

	inline static int32_t get_offset_of_parent_lcid_5() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___parent_lcid_5)); }
	inline int32_t get_parent_lcid_5() const { return ___parent_lcid_5; }
	inline int32_t* get_address_of_parent_lcid_5() { return &___parent_lcid_5; }
	inline void set_parent_lcid_5(int32_t value)
	{
		___parent_lcid_5 = value;
	}

	inline static int32_t get_offset_of_datetime_index_6() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___datetime_index_6)); }
	inline int32_t get_datetime_index_6() const { return ___datetime_index_6; }
	inline int32_t* get_address_of_datetime_index_6() { return &___datetime_index_6; }
	inline void set_datetime_index_6(int32_t value)
	{
		___datetime_index_6 = value;
	}

	inline static int32_t get_offset_of_number_index_7() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___number_index_7)); }
	inline int32_t get_number_index_7() const { return ___number_index_7; }
	inline int32_t* get_address_of_number_index_7() { return &___number_index_7; }
	inline void set_number_index_7(int32_t value)
	{
		___number_index_7 = value;
	}

	inline static int32_t get_offset_of_default_calendar_type_8() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___default_calendar_type_8)); }
	inline int32_t get_default_calendar_type_8() const { return ___default_calendar_type_8; }
	inline int32_t* get_address_of_default_calendar_type_8() { return &___default_calendar_type_8; }
	inline void set_default_calendar_type_8(int32_t value)
	{
		___default_calendar_type_8 = value;
	}

	inline static int32_t get_offset_of_m_useUserOverride_9() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_useUserOverride_9)); }
	inline bool get_m_useUserOverride_9() const { return ___m_useUserOverride_9; }
	inline bool* get_address_of_m_useUserOverride_9() { return &___m_useUserOverride_9; }
	inline void set_m_useUserOverride_9(bool value)
	{
		___m_useUserOverride_9 = value;
	}

	inline static int32_t get_offset_of_numInfo_10() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___numInfo_10)); }
	inline NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * get_numInfo_10() const { return ___numInfo_10; }
	inline NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 ** get_address_of_numInfo_10() { return &___numInfo_10; }
	inline void set_numInfo_10(NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * value)
	{
		___numInfo_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___numInfo_10), (void*)value);
	}

	inline static int32_t get_offset_of_dateTimeInfo_11() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___dateTimeInfo_11)); }
	inline DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * get_dateTimeInfo_11() const { return ___dateTimeInfo_11; }
	inline DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F ** get_address_of_dateTimeInfo_11() { return &___dateTimeInfo_11; }
	inline void set_dateTimeInfo_11(DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * value)
	{
		___dateTimeInfo_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dateTimeInfo_11), (void*)value);
	}

	inline static int32_t get_offset_of_textInfo_12() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___textInfo_12)); }
	inline TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * get_textInfo_12() const { return ___textInfo_12; }
	inline TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 ** get_address_of_textInfo_12() { return &___textInfo_12; }
	inline void set_textInfo_12(TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * value)
	{
		___textInfo_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___textInfo_12), (void*)value);
	}

	inline static int32_t get_offset_of_m_name_13() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_name_13)); }
	inline String_t* get_m_name_13() const { return ___m_name_13; }
	inline String_t** get_address_of_m_name_13() { return &___m_name_13; }
	inline void set_m_name_13(String_t* value)
	{
		___m_name_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_name_13), (void*)value);
	}

	inline static int32_t get_offset_of_englishname_14() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___englishname_14)); }
	inline String_t* get_englishname_14() const { return ___englishname_14; }
	inline String_t** get_address_of_englishname_14() { return &___englishname_14; }
	inline void set_englishname_14(String_t* value)
	{
		___englishname_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___englishname_14), (void*)value);
	}

	inline static int32_t get_offset_of_nativename_15() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___nativename_15)); }
	inline String_t* get_nativename_15() const { return ___nativename_15; }
	inline String_t** get_address_of_nativename_15() { return &___nativename_15; }
	inline void set_nativename_15(String_t* value)
	{
		___nativename_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___nativename_15), (void*)value);
	}

	inline static int32_t get_offset_of_iso3lang_16() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___iso3lang_16)); }
	inline String_t* get_iso3lang_16() const { return ___iso3lang_16; }
	inline String_t** get_address_of_iso3lang_16() { return &___iso3lang_16; }
	inline void set_iso3lang_16(String_t* value)
	{
		___iso3lang_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iso3lang_16), (void*)value);
	}

	inline static int32_t get_offset_of_iso2lang_17() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___iso2lang_17)); }
	inline String_t* get_iso2lang_17() const { return ___iso2lang_17; }
	inline String_t** get_address_of_iso2lang_17() { return &___iso2lang_17; }
	inline void set_iso2lang_17(String_t* value)
	{
		___iso2lang_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iso2lang_17), (void*)value);
	}

	inline static int32_t get_offset_of_win3lang_18() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___win3lang_18)); }
	inline String_t* get_win3lang_18() const { return ___win3lang_18; }
	inline String_t** get_address_of_win3lang_18() { return &___win3lang_18; }
	inline void set_win3lang_18(String_t* value)
	{
		___win3lang_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___win3lang_18), (void*)value);
	}

	inline static int32_t get_offset_of_territory_19() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___territory_19)); }
	inline String_t* get_territory_19() const { return ___territory_19; }
	inline String_t** get_address_of_territory_19() { return &___territory_19; }
	inline void set_territory_19(String_t* value)
	{
		___territory_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___territory_19), (void*)value);
	}

	inline static int32_t get_offset_of_native_calendar_names_20() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___native_calendar_names_20)); }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* get_native_calendar_names_20() const { return ___native_calendar_names_20; }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E** get_address_of_native_calendar_names_20() { return &___native_calendar_names_20; }
	inline void set_native_calendar_names_20(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* value)
	{
		___native_calendar_names_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_calendar_names_20), (void*)value);
	}

	inline static int32_t get_offset_of_compareInfo_21() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___compareInfo_21)); }
	inline CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * get_compareInfo_21() const { return ___compareInfo_21; }
	inline CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 ** get_address_of_compareInfo_21() { return &___compareInfo_21; }
	inline void set_compareInfo_21(CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * value)
	{
		___compareInfo_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___compareInfo_21), (void*)value);
	}

	inline static int32_t get_offset_of_textinfo_data_22() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___textinfo_data_22)); }
	inline void* get_textinfo_data_22() const { return ___textinfo_data_22; }
	inline void** get_address_of_textinfo_data_22() { return &___textinfo_data_22; }
	inline void set_textinfo_data_22(void* value)
	{
		___textinfo_data_22 = value;
	}

	inline static int32_t get_offset_of_m_dataItem_23() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_dataItem_23)); }
	inline int32_t get_m_dataItem_23() const { return ___m_dataItem_23; }
	inline int32_t* get_address_of_m_dataItem_23() { return &___m_dataItem_23; }
	inline void set_m_dataItem_23(int32_t value)
	{
		___m_dataItem_23 = value;
	}

	inline static int32_t get_offset_of_calendar_24() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___calendar_24)); }
	inline Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * get_calendar_24() const { return ___calendar_24; }
	inline Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 ** get_address_of_calendar_24() { return &___calendar_24; }
	inline void set_calendar_24(Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * value)
	{
		___calendar_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___calendar_24), (void*)value);
	}

	inline static int32_t get_offset_of_parent_culture_25() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___parent_culture_25)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_parent_culture_25() const { return ___parent_culture_25; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_parent_culture_25() { return &___parent_culture_25; }
	inline void set_parent_culture_25(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___parent_culture_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___parent_culture_25), (void*)value);
	}

	inline static int32_t get_offset_of_constructed_26() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___constructed_26)); }
	inline bool get_constructed_26() const { return ___constructed_26; }
	inline bool* get_address_of_constructed_26() { return &___constructed_26; }
	inline void set_constructed_26(bool value)
	{
		___constructed_26 = value;
	}

	inline static int32_t get_offset_of_cached_serialized_form_27() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___cached_serialized_form_27)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_cached_serialized_form_27() const { return ___cached_serialized_form_27; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_cached_serialized_form_27() { return &___cached_serialized_form_27; }
	inline void set_cached_serialized_form_27(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___cached_serialized_form_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cached_serialized_form_27), (void*)value);
	}

	inline static int32_t get_offset_of_m_cultureData_28() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_cultureData_28)); }
	inline CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD * get_m_cultureData_28() const { return ___m_cultureData_28; }
	inline CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD ** get_address_of_m_cultureData_28() { return &___m_cultureData_28; }
	inline void set_m_cultureData_28(CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD * value)
	{
		___m_cultureData_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_cultureData_28), (void*)value);
	}

	inline static int32_t get_offset_of_m_isInherited_29() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_isInherited_29)); }
	inline bool get_m_isInherited_29() const { return ___m_isInherited_29; }
	inline bool* get_address_of_m_isInherited_29() { return &___m_isInherited_29; }
	inline void set_m_isInherited_29(bool value)
	{
		___m_isInherited_29 = value;
	}
};

struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields
{
public:
	// System.Globalization.CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::invariant_culture_info
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___invariant_culture_info_0;
	// System.Object System.Globalization.CultureInfo::shared_table_lock
	RuntimeObject * ___shared_table_lock_1;
	// System.Globalization.CultureInfo System.Globalization.CultureInfo::default_current_culture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___default_current_culture_2;
	// System.Globalization.CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::s_DefaultThreadCurrentUICulture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___s_DefaultThreadCurrentUICulture_33;
	// System.Globalization.CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::s_DefaultThreadCurrentCulture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___s_DefaultThreadCurrentCulture_34;
	// System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> System.Globalization.CultureInfo::shared_by_number
	Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B * ___shared_by_number_35;
	// System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> System.Globalization.CultureInfo::shared_by_name
	Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 * ___shared_by_name_36;
	// System.Boolean System.Globalization.CultureInfo::IsTaiwanSku
	bool ___IsTaiwanSku_37;

public:
	inline static int32_t get_offset_of_invariant_culture_info_0() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___invariant_culture_info_0)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_invariant_culture_info_0() const { return ___invariant_culture_info_0; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_invariant_culture_info_0() { return &___invariant_culture_info_0; }
	inline void set_invariant_culture_info_0(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___invariant_culture_info_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___invariant_culture_info_0), (void*)value);
	}

	inline static int32_t get_offset_of_shared_table_lock_1() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___shared_table_lock_1)); }
	inline RuntimeObject * get_shared_table_lock_1() const { return ___shared_table_lock_1; }
	inline RuntimeObject ** get_address_of_shared_table_lock_1() { return &___shared_table_lock_1; }
	inline void set_shared_table_lock_1(RuntimeObject * value)
	{
		___shared_table_lock_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___shared_table_lock_1), (void*)value);
	}

	inline static int32_t get_offset_of_default_current_culture_2() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___default_current_culture_2)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_default_current_culture_2() const { return ___default_current_culture_2; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_default_current_culture_2() { return &___default_current_culture_2; }
	inline void set_default_current_culture_2(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___default_current_culture_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___default_current_culture_2), (void*)value);
	}

	inline static int32_t get_offset_of_s_DefaultThreadCurrentUICulture_33() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___s_DefaultThreadCurrentUICulture_33)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_s_DefaultThreadCurrentUICulture_33() const { return ___s_DefaultThreadCurrentUICulture_33; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_s_DefaultThreadCurrentUICulture_33() { return &___s_DefaultThreadCurrentUICulture_33; }
	inline void set_s_DefaultThreadCurrentUICulture_33(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___s_DefaultThreadCurrentUICulture_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_DefaultThreadCurrentUICulture_33), (void*)value);
	}

	inline static int32_t get_offset_of_s_DefaultThreadCurrentCulture_34() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___s_DefaultThreadCurrentCulture_34)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_s_DefaultThreadCurrentCulture_34() const { return ___s_DefaultThreadCurrentCulture_34; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_s_DefaultThreadCurrentCulture_34() { return &___s_DefaultThreadCurrentCulture_34; }
	inline void set_s_DefaultThreadCurrentCulture_34(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___s_DefaultThreadCurrentCulture_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_DefaultThreadCurrentCulture_34), (void*)value);
	}

	inline static int32_t get_offset_of_shared_by_number_35() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___shared_by_number_35)); }
	inline Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B * get_shared_by_number_35() const { return ___shared_by_number_35; }
	inline Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B ** get_address_of_shared_by_number_35() { return &___shared_by_number_35; }
	inline void set_shared_by_number_35(Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B * value)
	{
		___shared_by_number_35 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___shared_by_number_35), (void*)value);
	}

	inline static int32_t get_offset_of_shared_by_name_36() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___shared_by_name_36)); }
	inline Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 * get_shared_by_name_36() const { return ___shared_by_name_36; }
	inline Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 ** get_address_of_shared_by_name_36() { return &___shared_by_name_36; }
	inline void set_shared_by_name_36(Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 * value)
	{
		___shared_by_name_36 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___shared_by_name_36), (void*)value);
	}

	inline static int32_t get_offset_of_IsTaiwanSku_37() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___IsTaiwanSku_37)); }
	inline bool get_IsTaiwanSku_37() const { return ___IsTaiwanSku_37; }
	inline bool* get_address_of_IsTaiwanSku_37() { return &___IsTaiwanSku_37; }
	inline void set_IsTaiwanSku_37(bool value)
	{
		___IsTaiwanSku_37 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Globalization.CultureInfo
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_pinvoke
{
	int32_t ___m_isReadOnly_3;
	int32_t ___cultureID_4;
	int32_t ___parent_lcid_5;
	int32_t ___datetime_index_6;
	int32_t ___number_index_7;
	int32_t ___default_calendar_type_8;
	int32_t ___m_useUserOverride_9;
	NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * ___numInfo_10;
	DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * ___dateTimeInfo_11;
	TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * ___textInfo_12;
	char* ___m_name_13;
	char* ___englishname_14;
	char* ___nativename_15;
	char* ___iso3lang_16;
	char* ___iso2lang_17;
	char* ___win3lang_18;
	char* ___territory_19;
	char** ___native_calendar_names_20;
	CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * ___compareInfo_21;
	void* ___textinfo_data_22;
	int32_t ___m_dataItem_23;
	Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * ___calendar_24;
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_pinvoke* ___parent_culture_25;
	int32_t ___constructed_26;
	Il2CppSafeArray/*NONE*/* ___cached_serialized_form_27;
	CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_pinvoke* ___m_cultureData_28;
	int32_t ___m_isInherited_29;
};
// Native definition for COM marshalling of System.Globalization.CultureInfo
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_com
{
	int32_t ___m_isReadOnly_3;
	int32_t ___cultureID_4;
	int32_t ___parent_lcid_5;
	int32_t ___datetime_index_6;
	int32_t ___number_index_7;
	int32_t ___default_calendar_type_8;
	int32_t ___m_useUserOverride_9;
	NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * ___numInfo_10;
	DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * ___dateTimeInfo_11;
	TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * ___textInfo_12;
	Il2CppChar* ___m_name_13;
	Il2CppChar* ___englishname_14;
	Il2CppChar* ___nativename_15;
	Il2CppChar* ___iso3lang_16;
	Il2CppChar* ___iso2lang_17;
	Il2CppChar* ___win3lang_18;
	Il2CppChar* ___territory_19;
	Il2CppChar** ___native_calendar_names_20;
	CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * ___compareInfo_21;
	void* ___textinfo_data_22;
	int32_t ___m_dataItem_23;
	Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * ___calendar_24;
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_com* ___parent_culture_25;
	int32_t ___constructed_26;
	Il2CppSafeArray/*NONE*/* ___cached_serialized_form_27;
	CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_com* ___m_cultureData_28;
	int32_t ___m_isInherited_29;
};

// System.Reflection.MemberInfo
struct  MemberInfo_t  : public RuntimeObject
{
public:

public:
};


// System.String
struct  String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.Text.StringBuilder
struct  StringBuilder_t  : public RuntimeObject
{
public:
	// System.Char[] System.Text.StringBuilder::m_ChunkChars
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___m_ChunkChars_0;
	// System.Text.StringBuilder System.Text.StringBuilder::m_ChunkPrevious
	StringBuilder_t * ___m_ChunkPrevious_1;
	// System.Int32 System.Text.StringBuilder::m_ChunkLength
	int32_t ___m_ChunkLength_2;
	// System.Int32 System.Text.StringBuilder::m_ChunkOffset
	int32_t ___m_ChunkOffset_3;
	// System.Int32 System.Text.StringBuilder::m_MaxCapacity
	int32_t ___m_MaxCapacity_4;

public:
	inline static int32_t get_offset_of_m_ChunkChars_0() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkChars_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_m_ChunkChars_0() const { return ___m_ChunkChars_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_m_ChunkChars_0() { return &___m_ChunkChars_0; }
	inline void set_m_ChunkChars_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___m_ChunkChars_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ChunkChars_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_ChunkPrevious_1() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkPrevious_1)); }
	inline StringBuilder_t * get_m_ChunkPrevious_1() const { return ___m_ChunkPrevious_1; }
	inline StringBuilder_t ** get_address_of_m_ChunkPrevious_1() { return &___m_ChunkPrevious_1; }
	inline void set_m_ChunkPrevious_1(StringBuilder_t * value)
	{
		___m_ChunkPrevious_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ChunkPrevious_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_ChunkLength_2() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkLength_2)); }
	inline int32_t get_m_ChunkLength_2() const { return ___m_ChunkLength_2; }
	inline int32_t* get_address_of_m_ChunkLength_2() { return &___m_ChunkLength_2; }
	inline void set_m_ChunkLength_2(int32_t value)
	{
		___m_ChunkLength_2 = value;
	}

	inline static int32_t get_offset_of_m_ChunkOffset_3() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkOffset_3)); }
	inline int32_t get_m_ChunkOffset_3() const { return ___m_ChunkOffset_3; }
	inline int32_t* get_address_of_m_ChunkOffset_3() { return &___m_ChunkOffset_3; }
	inline void set_m_ChunkOffset_3(int32_t value)
	{
		___m_ChunkOffset_3 = value;
	}

	inline static int32_t get_offset_of_m_MaxCapacity_4() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_MaxCapacity_4)); }
	inline int32_t get_m_MaxCapacity_4() const { return ___m_MaxCapacity_4; }
	inline int32_t* get_address_of_m_MaxCapacity_4() { return &___m_MaxCapacity_4; }
	inline void set_m_MaxCapacity_4(int32_t value)
	{
		___m_MaxCapacity_4 = value;
	}
};


// System.ValueType
struct  ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// UnityEngine.Events.UnityEventBase
struct  UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5  : public RuntimeObject
{
public:
	// UnityEngine.Events.InvokableCallList UnityEngine.Events.UnityEventBase::m_Calls
	InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * ___m_Calls_0;
	// UnityEngine.Events.PersistentCallGroup UnityEngine.Events.UnityEventBase::m_PersistentCalls
	PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * ___m_PersistentCalls_1;
	// System.Boolean UnityEngine.Events.UnityEventBase::m_CallsDirty
	bool ___m_CallsDirty_2;

public:
	inline static int32_t get_offset_of_m_Calls_0() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_Calls_0)); }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * get_m_Calls_0() const { return ___m_Calls_0; }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F ** get_address_of_m_Calls_0() { return &___m_Calls_0; }
	inline void set_m_Calls_0(InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * value)
	{
		___m_Calls_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Calls_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_PersistentCalls_1() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_PersistentCalls_1)); }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * get_m_PersistentCalls_1() const { return ___m_PersistentCalls_1; }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F ** get_address_of_m_PersistentCalls_1() { return &___m_PersistentCalls_1; }
	inline void set_m_PersistentCalls_1(PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * value)
	{
		___m_PersistentCalls_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PersistentCalls_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_CallsDirty_2() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_CallsDirty_2)); }
	inline bool get_m_CallsDirty_2() const { return ___m_CallsDirty_2; }
	inline bool* get_address_of_m_CallsDirty_2() { return &___m_CallsDirty_2; }
	inline void set_m_CallsDirty_2(bool value)
	{
		___m_CallsDirty_2 = value;
	}
};


// UnityEngine.YieldInstruction
struct  YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
};

// Valve.VR.SteamVR_Action
struct  SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_Action::actionPath
	String_t* ___actionPath_0;
	// System.Boolean Valve.VR.SteamVR_Action::needsReinit
	bool ___needsReinit_1;
	// System.String Valve.VR.SteamVR_Action::cachedShortName
	String_t* ___cachedShortName_3;

public:
	inline static int32_t get_offset_of_actionPath_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___actionPath_0)); }
	inline String_t* get_actionPath_0() const { return ___actionPath_0; }
	inline String_t** get_address_of_actionPath_0() { return &___actionPath_0; }
	inline void set_actionPath_0(String_t* value)
	{
		___actionPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_needsReinit_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___needsReinit_1)); }
	inline bool get_needsReinit_1() const { return ___needsReinit_1; }
	inline bool* get_address_of_needsReinit_1() { return &___needsReinit_1; }
	inline void set_needsReinit_1(bool value)
	{
		___needsReinit_1 = value;
	}

	inline static int32_t get_offset_of_cachedShortName_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___cachedShortName_3)); }
	inline String_t* get_cachedShortName_3() const { return ___cachedShortName_3; }
	inline String_t** get_address_of_cachedShortName_3() { return &___cachedShortName_3; }
	inline void set_cachedShortName_3(String_t* value)
	{
		___cachedShortName_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cachedShortName_3), (void*)value);
	}
};

struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR_Action::startUpdatingSourceOnAccess
	bool ___startUpdatingSourceOnAccess_2;

public:
	inline static int32_t get_offset_of_startUpdatingSourceOnAccess_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_StaticFields, ___startUpdatingSourceOnAccess_2)); }
	inline bool get_startUpdatingSourceOnAccess_2() const { return ___startUpdatingSourceOnAccess_2; }
	inline bool* get_address_of_startUpdatingSourceOnAccess_2() { return &___startUpdatingSourceOnAccess_2; }
	inline void set_startUpdatingSourceOnAccess_2(bool value)
	{
		___startUpdatingSourceOnAccess_2 = value;
	}
};


// Valve.VR.SteamVR_ActionSet
struct  SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_ActionSet::actionSetPath
	String_t* ___actionSetPath_0;
	// Valve.VR.SteamVR_ActionSet_Data Valve.VR.SteamVR_ActionSet::setData
	SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * ___setData_1;
	// System.Boolean Valve.VR.SteamVR_ActionSet::initialized
	bool ___initialized_2;

public:
	inline static int32_t get_offset_of_actionSetPath_0() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___actionSetPath_0)); }
	inline String_t* get_actionSetPath_0() const { return ___actionSetPath_0; }
	inline String_t** get_address_of_actionSetPath_0() { return &___actionSetPath_0; }
	inline void set_actionSetPath_0(String_t* value)
	{
		___actionSetPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSetPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_setData_1() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___setData_1)); }
	inline SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * get_setData_1() const { return ___setData_1; }
	inline SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 ** get_address_of_setData_1() { return &___setData_1; }
	inline void set_setData_1(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * value)
	{
		___setData_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setData_1), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_2() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___initialized_2)); }
	inline bool get_initialized_2() const { return ___initialized_2; }
	inline bool* get_address_of_initialized_2() { return &___initialized_2; }
	inline void set_initialized_2(bool value)
	{
		___initialized_2 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15
struct  U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7  : public RuntimeObject
{
public:
	// System.Int32 Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::<>2__current
	RuntimeObject * ___U3CU3E2__current_1;
	// Valve.VR.SteamVR_Behaviour Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::<>4__this
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * ___U3CU3E4__this_2;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3E2__current_1() { return static_cast<int32_t>(offsetof(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7, ___U3CU3E2__current_1)); }
	inline RuntimeObject * get_U3CU3E2__current_1() const { return ___U3CU3E2__current_1; }
	inline RuntimeObject ** get_address_of_U3CU3E2__current_1() { return &___U3CU3E2__current_1; }
	inline void set_U3CU3E2__current_1(RuntimeObject * value)
	{
		___U3CU3E2__current_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E2__current_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CU3E4__this_2() { return static_cast<int32_t>(offsetof(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7, ___U3CU3E4__this_2)); }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * get_U3CU3E4__this_2() const { return ___U3CU3E4__this_2; }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 ** get_address_of_U3CU3E4__this_2() { return &___U3CU3E4__this_2; }
	inline void set_U3CU3E4__this_2(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * value)
	{
		___U3CU3E4__this_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E4__this_2), (void*)value);
	}
};


// Valve.VR.SteamVR_RingBuffer`1<Valve.VR.SteamVR_HistoryStep>
struct  SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4  : public RuntimeObject
{
public:
	// T[] Valve.VR.SteamVR_RingBuffer`1::buffer
	SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F* ___buffer_0;
	// System.Int32 Valve.VR.SteamVR_RingBuffer`1::currentIndex
	int32_t ___currentIndex_1;
	// T Valve.VR.SteamVR_RingBuffer`1::lastElement
	SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E * ___lastElement_2;
	// System.Boolean Valve.VR.SteamVR_RingBuffer`1::cleared
	bool ___cleared_3;

public:
	inline static int32_t get_offset_of_buffer_0() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___buffer_0)); }
	inline SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F* get_buffer_0() const { return ___buffer_0; }
	inline SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F** get_address_of_buffer_0() { return &___buffer_0; }
	inline void set_buffer_0(SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F* value)
	{
		___buffer_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buffer_0), (void*)value);
	}

	inline static int32_t get_offset_of_currentIndex_1() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___currentIndex_1)); }
	inline int32_t get_currentIndex_1() const { return ___currentIndex_1; }
	inline int32_t* get_address_of_currentIndex_1() { return &___currentIndex_1; }
	inline void set_currentIndex_1(int32_t value)
	{
		___currentIndex_1 = value;
	}

	inline static int32_t get_offset_of_lastElement_2() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___lastElement_2)); }
	inline SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E * get_lastElement_2() const { return ___lastElement_2; }
	inline SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E ** get_address_of_lastElement_2() { return &___lastElement_2; }
	inline void set_lastElement_2(SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E * value)
	{
		___lastElement_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lastElement_2), (void*)value);
	}

	inline static int32_t get_offset_of_cleared_3() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___cleared_3)); }
	inline bool get_cleared_3() const { return ___cleared_3; }
	inline bool* get_address_of_cleared_3() { return &___cleared_3; }
	inline void set_cleared_3(bool value)
	{
		___cleared_3 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerIndexes
struct  SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020  : public RuntimeObject
{
public:

public:
};

struct SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields
{
public:
	// Valve.VR.SteamVR_Skeleton_FingerIndexEnum[] Valve.VR.SteamVR_Skeleton_FingerIndexes::enumArray
	SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* ___enumArray_5;

public:
	inline static int32_t get_offset_of_enumArray_5() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields, ___enumArray_5)); }
	inline SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* get_enumArray_5() const { return ___enumArray_5; }
	inline SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7** get_address_of_enumArray_5() { return &___enumArray_5; }
	inline void set_enumArray_5(SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* value)
	{
		___enumArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumArray_5), (void*)value);
	}
};


// Valve.VR.SteamVR_Skeleton_FingerSplayIndexes
struct  SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246  : public RuntimeObject
{
public:

public:
};

struct SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields
{
public:
	// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum[] Valve.VR.SteamVR_Skeleton_FingerSplayIndexes::enumArray
	SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* ___enumArray_4;

public:
	inline static int32_t get_offset_of_enumArray_4() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields, ___enumArray_4)); }
	inline SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* get_enumArray_4() const { return ___enumArray_4; }
	inline SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B** get_address_of_enumArray_4() { return &___enumArray_4; }
	inline void set_enumArray_4(SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* value)
	{
		___enumArray_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumArray_4), (void*)value);
	}
};


// System.Boolean
struct  Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Char
struct  Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9 
{
public:
	// System.Char System.Char::m_value
	Il2CppChar ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9, ___m_value_0)); }
	inline Il2CppChar get_m_value_0() const { return ___m_value_0; }
	inline Il2CppChar* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(Il2CppChar value)
	{
		___m_value_0 = value;
	}
};

struct Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_StaticFields
{
public:
	// System.Byte[] System.Char::categoryForLatin1
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___categoryForLatin1_3;

public:
	inline static int32_t get_offset_of_categoryForLatin1_3() { return static_cast<int32_t>(offsetof(Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_StaticFields, ___categoryForLatin1_3)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_categoryForLatin1_3() const { return ___categoryForLatin1_3; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_categoryForLatin1_3() { return &___categoryForLatin1_3; }
	inline void set_categoryForLatin1_3(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___categoryForLatin1_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___categoryForLatin1_3), (void*)value);
	}
};


// System.Enum
struct  Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct  Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct  IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Nullable`1<System.Boolean>
struct  Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 
{
public:
	// T System.Nullable`1::value
	bool ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793, ___value_0)); }
	inline bool get_value_0() const { return ___value_0; }
	inline bool* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(bool value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Single
struct  Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct  UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt64
struct  UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E 
{
public:
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E, ___m_value_0)); }
	inline uint64_t get_m_value_0() const { return ___m_value_0; }
	inline uint64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint64_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct  Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Events.UnityEvent`1<Valve.VR.VREvent_t>
struct  UnityEvent_1_t7E9560B75945B332DA5807C6061708BBAF5F7307  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_t7E9560B75945B332DA5807C6061708BBAF5F7307, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>
struct  UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`2::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct  UnityEvent_3_t40081F2EF697F552E8C4A377AC5C3B4C2E7A2A5A  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t40081F2EF697F552E8C4A377AC5C3B4C2E7A2A5A, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct  UnityEvent_3_t71F1FA1B2F643E879720744F46B639680D8085B7  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t71F1FA1B2F643E879720744F46B639680D8085B7, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>
struct  UnityEvent_3_t41E2F467D883C365FE208841F67E87C4295808B5  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t41E2F467D883C365FE208841F67E87C4295808B5, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>
struct  UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single>
struct  UnityEvent_4_t27B5A01BBE9C4FCF8B974D92F4D411CFC467A294  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`4::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_4_t27B5A01BBE9C4FCF8B974D92F4D411CFC467A294, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Mathf
struct  Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB__padding[1];
	};

public:
};

struct Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields
{
public:
	// System.Single UnityEngine.Mathf::Epsilon
	float ___Epsilon_0;

public:
	inline static int32_t get_offset_of_Epsilon_0() { return static_cast<int32_t>(offsetof(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields, ___Epsilon_0)); }
	inline float get_Epsilon_0() const { return ___Epsilon_0; }
	inline float* get_address_of_Epsilon_0() { return &___Epsilon_0; }
	inline void set_Epsilon_0(float value)
	{
		___Epsilon_0 = value;
	}
};


// UnityEngine.Quaternion
struct  Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct  Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// Valve.VR.HmdMatrix34_t
struct  HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 
{
public:
	// System.Single Valve.VR.HmdMatrix34_t::m0
	float ___m0_0;
	// System.Single Valve.VR.HmdMatrix34_t::m1
	float ___m1_1;
	// System.Single Valve.VR.HmdMatrix34_t::m2
	float ___m2_2;
	// System.Single Valve.VR.HmdMatrix34_t::m3
	float ___m3_3;
	// System.Single Valve.VR.HmdMatrix34_t::m4
	float ___m4_4;
	// System.Single Valve.VR.HmdMatrix34_t::m5
	float ___m5_5;
	// System.Single Valve.VR.HmdMatrix34_t::m6
	float ___m6_6;
	// System.Single Valve.VR.HmdMatrix34_t::m7
	float ___m7_7;
	// System.Single Valve.VR.HmdMatrix34_t::m8
	float ___m8_8;
	// System.Single Valve.VR.HmdMatrix34_t::m9
	float ___m9_9;
	// System.Single Valve.VR.HmdMatrix34_t::m10
	float ___m10_10;
	// System.Single Valve.VR.HmdMatrix34_t::m11
	float ___m11_11;

public:
	inline static int32_t get_offset_of_m0_0() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m0_0)); }
	inline float get_m0_0() const { return ___m0_0; }
	inline float* get_address_of_m0_0() { return &___m0_0; }
	inline void set_m0_0(float value)
	{
		___m0_0 = value;
	}

	inline static int32_t get_offset_of_m1_1() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m1_1)); }
	inline float get_m1_1() const { return ___m1_1; }
	inline float* get_address_of_m1_1() { return &___m1_1; }
	inline void set_m1_1(float value)
	{
		___m1_1 = value;
	}

	inline static int32_t get_offset_of_m2_2() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m2_2)); }
	inline float get_m2_2() const { return ___m2_2; }
	inline float* get_address_of_m2_2() { return &___m2_2; }
	inline void set_m2_2(float value)
	{
		___m2_2 = value;
	}

	inline static int32_t get_offset_of_m3_3() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m3_3)); }
	inline float get_m3_3() const { return ___m3_3; }
	inline float* get_address_of_m3_3() { return &___m3_3; }
	inline void set_m3_3(float value)
	{
		___m3_3 = value;
	}

	inline static int32_t get_offset_of_m4_4() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m4_4)); }
	inline float get_m4_4() const { return ___m4_4; }
	inline float* get_address_of_m4_4() { return &___m4_4; }
	inline void set_m4_4(float value)
	{
		___m4_4 = value;
	}

	inline static int32_t get_offset_of_m5_5() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m5_5)); }
	inline float get_m5_5() const { return ___m5_5; }
	inline float* get_address_of_m5_5() { return &___m5_5; }
	inline void set_m5_5(float value)
	{
		___m5_5 = value;
	}

	inline static int32_t get_offset_of_m6_6() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m6_6)); }
	inline float get_m6_6() const { return ___m6_6; }
	inline float* get_address_of_m6_6() { return &___m6_6; }
	inline void set_m6_6(float value)
	{
		___m6_6 = value;
	}

	inline static int32_t get_offset_of_m7_7() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m7_7)); }
	inline float get_m7_7() const { return ___m7_7; }
	inline float* get_address_of_m7_7() { return &___m7_7; }
	inline void set_m7_7(float value)
	{
		___m7_7 = value;
	}

	inline static int32_t get_offset_of_m8_8() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m8_8)); }
	inline float get_m8_8() const { return ___m8_8; }
	inline float* get_address_of_m8_8() { return &___m8_8; }
	inline void set_m8_8(float value)
	{
		___m8_8 = value;
	}

	inline static int32_t get_offset_of_m9_9() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m9_9)); }
	inline float get_m9_9() const { return ___m9_9; }
	inline float* get_address_of_m9_9() { return &___m9_9; }
	inline void set_m9_9(float value)
	{
		___m9_9 = value;
	}

	inline static int32_t get_offset_of_m10_10() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m10_10)); }
	inline float get_m10_10() const { return ___m10_10; }
	inline float* get_address_of_m10_10() { return &___m10_10; }
	inline void set_m10_10(float value)
	{
		___m10_10 = value;
	}

	inline static int32_t get_offset_of_m11_11() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m11_11)); }
	inline float get_m11_11() const { return ___m11_11; }
	inline float* get_address_of_m11_11() { return &___m11_11; }
	inline void set_m11_11(float value)
	{
		___m11_11 = value;
	}
};


// Valve.VR.HmdQuaternionf_t
struct  HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 
{
public:
	// System.Single Valve.VR.HmdQuaternionf_t::w
	float ___w_0;
	// System.Single Valve.VR.HmdQuaternionf_t::x
	float ___x_1;
	// System.Single Valve.VR.HmdQuaternionf_t::y
	float ___y_2;
	// System.Single Valve.VR.HmdQuaternionf_t::z
	float ___z_3;

public:
	inline static int32_t get_offset_of_w_0() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11, ___w_0)); }
	inline float get_w_0() const { return ___w_0; }
	inline float* get_address_of_w_0() { return &___w_0; }
	inline void set_w_0(float value)
	{
		___w_0 = value;
	}

	inline static int32_t get_offset_of_x_1() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11, ___x_1)); }
	inline float get_x_1() const { return ___x_1; }
	inline float* get_address_of_x_1() { return &___x_1; }
	inline void set_x_1(float value)
	{
		___x_1 = value;
	}

	inline static int32_t get_offset_of_y_2() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11, ___y_2)); }
	inline float get_y_2() const { return ___y_2; }
	inline float* get_address_of_y_2() { return &___y_2; }
	inline void set_y_2(float value)
	{
		___y_2 = value;
	}

	inline static int32_t get_offset_of_z_3() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11, ___z_3)); }
	inline float get_z_3() const { return ___z_3; }
	inline float* get_address_of_z_3() { return &___z_3; }
	inline void set_z_3(float value)
	{
		___z_3 = value;
	}
};


// Valve.VR.HmdVector3_t
struct  HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A 
{
public:
	// System.Single Valve.VR.HmdVector3_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector3_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector3_t::v2
	float ___v2_2;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}
};


// Valve.VR.HmdVector4_t
struct  HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 
{
public:
	// System.Single Valve.VR.HmdVector4_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector4_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector4_t::v2
	float ___v2_2;
	// System.Single Valve.VR.HmdVector4_t::v3
	float ___v3_3;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}

	inline static int32_t get_offset_of_v3_3() { return static_cast<int32_t>(offsetof(HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9, ___v3_3)); }
	inline float get_v3_3() const { return ___v3_3; }
	inline float* get_address_of_v3_3() { return &___v3_3; }
	inline void set_v3_3(float value)
	{
		___v3_3 = value;
	}
};


// Valve.VR.IVRInput
struct  IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78 
{
public:
	// Valve.VR.IVRInput__SetActionManifestPath Valve.VR.IVRInput::SetActionManifestPath
	_SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * ___SetActionManifestPath_0;
	// Valve.VR.IVRInput__GetActionSetHandle Valve.VR.IVRInput::GetActionSetHandle
	_GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * ___GetActionSetHandle_1;
	// Valve.VR.IVRInput__GetActionHandle Valve.VR.IVRInput::GetActionHandle
	_GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * ___GetActionHandle_2;
	// Valve.VR.IVRInput__GetInputSourceHandle Valve.VR.IVRInput::GetInputSourceHandle
	_GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * ___GetInputSourceHandle_3;
	// Valve.VR.IVRInput__UpdateActionState Valve.VR.IVRInput::UpdateActionState
	_UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * ___UpdateActionState_4;
	// Valve.VR.IVRInput__GetDigitalActionData Valve.VR.IVRInput::GetDigitalActionData
	_GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * ___GetDigitalActionData_5;
	// Valve.VR.IVRInput__GetAnalogActionData Valve.VR.IVRInput::GetAnalogActionData
	_GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * ___GetAnalogActionData_6;
	// Valve.VR.IVRInput__GetPoseActionDataRelativeToNow Valve.VR.IVRInput::GetPoseActionDataRelativeToNow
	_GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * ___GetPoseActionDataRelativeToNow_7;
	// Valve.VR.IVRInput__GetPoseActionDataForNextFrame Valve.VR.IVRInput::GetPoseActionDataForNextFrame
	_GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * ___GetPoseActionDataForNextFrame_8;
	// Valve.VR.IVRInput__GetSkeletalActionData Valve.VR.IVRInput::GetSkeletalActionData
	_GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * ___GetSkeletalActionData_9;
	// Valve.VR.IVRInput__GetBoneCount Valve.VR.IVRInput::GetBoneCount
	_GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * ___GetBoneCount_10;
	// Valve.VR.IVRInput__GetBoneHierarchy Valve.VR.IVRInput::GetBoneHierarchy
	_GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * ___GetBoneHierarchy_11;
	// Valve.VR.IVRInput__GetBoneName Valve.VR.IVRInput::GetBoneName
	_GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * ___GetBoneName_12;
	// Valve.VR.IVRInput__GetSkeletalReferenceTransforms Valve.VR.IVRInput::GetSkeletalReferenceTransforms
	_GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * ___GetSkeletalReferenceTransforms_13;
	// Valve.VR.IVRInput__GetSkeletalTrackingLevel Valve.VR.IVRInput::GetSkeletalTrackingLevel
	_GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * ___GetSkeletalTrackingLevel_14;
	// Valve.VR.IVRInput__GetSkeletalBoneData Valve.VR.IVRInput::GetSkeletalBoneData
	_GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * ___GetSkeletalBoneData_15;
	// Valve.VR.IVRInput__GetSkeletalSummaryData Valve.VR.IVRInput::GetSkeletalSummaryData
	_GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * ___GetSkeletalSummaryData_16;
	// Valve.VR.IVRInput__GetSkeletalBoneDataCompressed Valve.VR.IVRInput::GetSkeletalBoneDataCompressed
	_GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * ___GetSkeletalBoneDataCompressed_17;
	// Valve.VR.IVRInput__DecompressSkeletalBoneData Valve.VR.IVRInput::DecompressSkeletalBoneData
	_DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * ___DecompressSkeletalBoneData_18;
	// Valve.VR.IVRInput__TriggerHapticVibrationAction Valve.VR.IVRInput::TriggerHapticVibrationAction
	_TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * ___TriggerHapticVibrationAction_19;
	// Valve.VR.IVRInput__GetActionOrigins Valve.VR.IVRInput::GetActionOrigins
	_GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * ___GetActionOrigins_20;
	// Valve.VR.IVRInput__GetOriginLocalizedName Valve.VR.IVRInput::GetOriginLocalizedName
	_GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * ___GetOriginLocalizedName_21;
	// Valve.VR.IVRInput__GetOriginTrackedDeviceInfo Valve.VR.IVRInput::GetOriginTrackedDeviceInfo
	_GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * ___GetOriginTrackedDeviceInfo_22;
	// Valve.VR.IVRInput__GetActionBindingInfo Valve.VR.IVRInput::GetActionBindingInfo
	_GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * ___GetActionBindingInfo_23;
	// Valve.VR.IVRInput__ShowActionOrigins Valve.VR.IVRInput::ShowActionOrigins
	_ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * ___ShowActionOrigins_24;
	// Valve.VR.IVRInput__ShowBindingsForActionSet Valve.VR.IVRInput::ShowBindingsForActionSet
	_ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * ___ShowBindingsForActionSet_25;
	// Valve.VR.IVRInput__IsUsingLegacyInput Valve.VR.IVRInput::IsUsingLegacyInput
	_IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * ___IsUsingLegacyInput_26;
	// Valve.VR.IVRInput__OpenBindingUI Valve.VR.IVRInput::OpenBindingUI
	_OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * ___OpenBindingUI_27;

public:
	inline static int32_t get_offset_of_SetActionManifestPath_0() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___SetActionManifestPath_0)); }
	inline _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * get_SetActionManifestPath_0() const { return ___SetActionManifestPath_0; }
	inline _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE ** get_address_of_SetActionManifestPath_0() { return &___SetActionManifestPath_0; }
	inline void set_SetActionManifestPath_0(_SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * value)
	{
		___SetActionManifestPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetActionManifestPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionSetHandle_1() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionSetHandle_1)); }
	inline _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * get_GetActionSetHandle_1() const { return ___GetActionSetHandle_1; }
	inline _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 ** get_address_of_GetActionSetHandle_1() { return &___GetActionSetHandle_1; }
	inline void set_GetActionSetHandle_1(_GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * value)
	{
		___GetActionSetHandle_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionSetHandle_1), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionHandle_2() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionHandle_2)); }
	inline _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * get_GetActionHandle_2() const { return ___GetActionHandle_2; }
	inline _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 ** get_address_of_GetActionHandle_2() { return &___GetActionHandle_2; }
	inline void set_GetActionHandle_2(_GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * value)
	{
		___GetActionHandle_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionHandle_2), (void*)value);
	}

	inline static int32_t get_offset_of_GetInputSourceHandle_3() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetInputSourceHandle_3)); }
	inline _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * get_GetInputSourceHandle_3() const { return ___GetInputSourceHandle_3; }
	inline _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF ** get_address_of_GetInputSourceHandle_3() { return &___GetInputSourceHandle_3; }
	inline void set_GetInputSourceHandle_3(_GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * value)
	{
		___GetInputSourceHandle_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetInputSourceHandle_3), (void*)value);
	}

	inline static int32_t get_offset_of_UpdateActionState_4() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___UpdateActionState_4)); }
	inline _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * get_UpdateActionState_4() const { return ___UpdateActionState_4; }
	inline _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 ** get_address_of_UpdateActionState_4() { return &___UpdateActionState_4; }
	inline void set_UpdateActionState_4(_UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * value)
	{
		___UpdateActionState_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___UpdateActionState_4), (void*)value);
	}

	inline static int32_t get_offset_of_GetDigitalActionData_5() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetDigitalActionData_5)); }
	inline _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * get_GetDigitalActionData_5() const { return ___GetDigitalActionData_5; }
	inline _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 ** get_address_of_GetDigitalActionData_5() { return &___GetDigitalActionData_5; }
	inline void set_GetDigitalActionData_5(_GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * value)
	{
		___GetDigitalActionData_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetDigitalActionData_5), (void*)value);
	}

	inline static int32_t get_offset_of_GetAnalogActionData_6() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetAnalogActionData_6)); }
	inline _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * get_GetAnalogActionData_6() const { return ___GetAnalogActionData_6; }
	inline _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB ** get_address_of_GetAnalogActionData_6() { return &___GetAnalogActionData_6; }
	inline void set_GetAnalogActionData_6(_GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * value)
	{
		___GetAnalogActionData_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetAnalogActionData_6), (void*)value);
	}

	inline static int32_t get_offset_of_GetPoseActionDataRelativeToNow_7() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetPoseActionDataRelativeToNow_7)); }
	inline _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * get_GetPoseActionDataRelativeToNow_7() const { return ___GetPoseActionDataRelativeToNow_7; }
	inline _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 ** get_address_of_GetPoseActionDataRelativeToNow_7() { return &___GetPoseActionDataRelativeToNow_7; }
	inline void set_GetPoseActionDataRelativeToNow_7(_GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * value)
	{
		___GetPoseActionDataRelativeToNow_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPoseActionDataRelativeToNow_7), (void*)value);
	}

	inline static int32_t get_offset_of_GetPoseActionDataForNextFrame_8() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetPoseActionDataForNextFrame_8)); }
	inline _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * get_GetPoseActionDataForNextFrame_8() const { return ___GetPoseActionDataForNextFrame_8; }
	inline _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E ** get_address_of_GetPoseActionDataForNextFrame_8() { return &___GetPoseActionDataForNextFrame_8; }
	inline void set_GetPoseActionDataForNextFrame_8(_GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * value)
	{
		___GetPoseActionDataForNextFrame_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPoseActionDataForNextFrame_8), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalActionData_9() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalActionData_9)); }
	inline _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * get_GetSkeletalActionData_9() const { return ___GetSkeletalActionData_9; }
	inline _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A ** get_address_of_GetSkeletalActionData_9() { return &___GetSkeletalActionData_9; }
	inline void set_GetSkeletalActionData_9(_GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * value)
	{
		___GetSkeletalActionData_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalActionData_9), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneCount_10() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneCount_10)); }
	inline _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * get_GetBoneCount_10() const { return ___GetBoneCount_10; }
	inline _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 ** get_address_of_GetBoneCount_10() { return &___GetBoneCount_10; }
	inline void set_GetBoneCount_10(_GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * value)
	{
		___GetBoneCount_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneCount_10), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneHierarchy_11() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneHierarchy_11)); }
	inline _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * get_GetBoneHierarchy_11() const { return ___GetBoneHierarchy_11; }
	inline _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 ** get_address_of_GetBoneHierarchy_11() { return &___GetBoneHierarchy_11; }
	inline void set_GetBoneHierarchy_11(_GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * value)
	{
		___GetBoneHierarchy_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneHierarchy_11), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneName_12() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneName_12)); }
	inline _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * get_GetBoneName_12() const { return ___GetBoneName_12; }
	inline _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF ** get_address_of_GetBoneName_12() { return &___GetBoneName_12; }
	inline void set_GetBoneName_12(_GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * value)
	{
		___GetBoneName_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneName_12), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalReferenceTransforms_13() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalReferenceTransforms_13)); }
	inline _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * get_GetSkeletalReferenceTransforms_13() const { return ___GetSkeletalReferenceTransforms_13; }
	inline _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 ** get_address_of_GetSkeletalReferenceTransforms_13() { return &___GetSkeletalReferenceTransforms_13; }
	inline void set_GetSkeletalReferenceTransforms_13(_GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * value)
	{
		___GetSkeletalReferenceTransforms_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalReferenceTransforms_13), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalTrackingLevel_14() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalTrackingLevel_14)); }
	inline _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * get_GetSkeletalTrackingLevel_14() const { return ___GetSkeletalTrackingLevel_14; }
	inline _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 ** get_address_of_GetSkeletalTrackingLevel_14() { return &___GetSkeletalTrackingLevel_14; }
	inline void set_GetSkeletalTrackingLevel_14(_GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * value)
	{
		___GetSkeletalTrackingLevel_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalTrackingLevel_14), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalBoneData_15() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalBoneData_15)); }
	inline _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * get_GetSkeletalBoneData_15() const { return ___GetSkeletalBoneData_15; }
	inline _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A ** get_address_of_GetSkeletalBoneData_15() { return &___GetSkeletalBoneData_15; }
	inline void set_GetSkeletalBoneData_15(_GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * value)
	{
		___GetSkeletalBoneData_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalBoneData_15), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalSummaryData_16() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalSummaryData_16)); }
	inline _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * get_GetSkeletalSummaryData_16() const { return ___GetSkeletalSummaryData_16; }
	inline _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 ** get_address_of_GetSkeletalSummaryData_16() { return &___GetSkeletalSummaryData_16; }
	inline void set_GetSkeletalSummaryData_16(_GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * value)
	{
		___GetSkeletalSummaryData_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalSummaryData_16), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalBoneDataCompressed_17() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalBoneDataCompressed_17)); }
	inline _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * get_GetSkeletalBoneDataCompressed_17() const { return ___GetSkeletalBoneDataCompressed_17; }
	inline _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B ** get_address_of_GetSkeletalBoneDataCompressed_17() { return &___GetSkeletalBoneDataCompressed_17; }
	inline void set_GetSkeletalBoneDataCompressed_17(_GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * value)
	{
		___GetSkeletalBoneDataCompressed_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalBoneDataCompressed_17), (void*)value);
	}

	inline static int32_t get_offset_of_DecompressSkeletalBoneData_18() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___DecompressSkeletalBoneData_18)); }
	inline _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * get_DecompressSkeletalBoneData_18() const { return ___DecompressSkeletalBoneData_18; }
	inline _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 ** get_address_of_DecompressSkeletalBoneData_18() { return &___DecompressSkeletalBoneData_18; }
	inline void set_DecompressSkeletalBoneData_18(_DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * value)
	{
		___DecompressSkeletalBoneData_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DecompressSkeletalBoneData_18), (void*)value);
	}

	inline static int32_t get_offset_of_TriggerHapticVibrationAction_19() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___TriggerHapticVibrationAction_19)); }
	inline _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * get_TriggerHapticVibrationAction_19() const { return ___TriggerHapticVibrationAction_19; }
	inline _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 ** get_address_of_TriggerHapticVibrationAction_19() { return &___TriggerHapticVibrationAction_19; }
	inline void set_TriggerHapticVibrationAction_19(_TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * value)
	{
		___TriggerHapticVibrationAction_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TriggerHapticVibrationAction_19), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionOrigins_20() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionOrigins_20)); }
	inline _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * get_GetActionOrigins_20() const { return ___GetActionOrigins_20; }
	inline _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 ** get_address_of_GetActionOrigins_20() { return &___GetActionOrigins_20; }
	inline void set_GetActionOrigins_20(_GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * value)
	{
		___GetActionOrigins_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionOrigins_20), (void*)value);
	}

	inline static int32_t get_offset_of_GetOriginLocalizedName_21() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetOriginLocalizedName_21)); }
	inline _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * get_GetOriginLocalizedName_21() const { return ___GetOriginLocalizedName_21; }
	inline _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F ** get_address_of_GetOriginLocalizedName_21() { return &___GetOriginLocalizedName_21; }
	inline void set_GetOriginLocalizedName_21(_GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * value)
	{
		___GetOriginLocalizedName_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetOriginLocalizedName_21), (void*)value);
	}

	inline static int32_t get_offset_of_GetOriginTrackedDeviceInfo_22() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetOriginTrackedDeviceInfo_22)); }
	inline _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * get_GetOriginTrackedDeviceInfo_22() const { return ___GetOriginTrackedDeviceInfo_22; }
	inline _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B ** get_address_of_GetOriginTrackedDeviceInfo_22() { return &___GetOriginTrackedDeviceInfo_22; }
	inline void set_GetOriginTrackedDeviceInfo_22(_GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * value)
	{
		___GetOriginTrackedDeviceInfo_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetOriginTrackedDeviceInfo_22), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionBindingInfo_23() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionBindingInfo_23)); }
	inline _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * get_GetActionBindingInfo_23() const { return ___GetActionBindingInfo_23; }
	inline _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 ** get_address_of_GetActionBindingInfo_23() { return &___GetActionBindingInfo_23; }
	inline void set_GetActionBindingInfo_23(_GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * value)
	{
		___GetActionBindingInfo_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionBindingInfo_23), (void*)value);
	}

	inline static int32_t get_offset_of_ShowActionOrigins_24() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___ShowActionOrigins_24)); }
	inline _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * get_ShowActionOrigins_24() const { return ___ShowActionOrigins_24; }
	inline _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 ** get_address_of_ShowActionOrigins_24() { return &___ShowActionOrigins_24; }
	inline void set_ShowActionOrigins_24(_ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * value)
	{
		___ShowActionOrigins_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowActionOrigins_24), (void*)value);
	}

	inline static int32_t get_offset_of_ShowBindingsForActionSet_25() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___ShowBindingsForActionSet_25)); }
	inline _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * get_ShowBindingsForActionSet_25() const { return ___ShowBindingsForActionSet_25; }
	inline _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A ** get_address_of_ShowBindingsForActionSet_25() { return &___ShowBindingsForActionSet_25; }
	inline void set_ShowBindingsForActionSet_25(_ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * value)
	{
		___ShowBindingsForActionSet_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowBindingsForActionSet_25), (void*)value);
	}

	inline static int32_t get_offset_of_IsUsingLegacyInput_26() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___IsUsingLegacyInput_26)); }
	inline _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * get_IsUsingLegacyInput_26() const { return ___IsUsingLegacyInput_26; }
	inline _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 ** get_address_of_IsUsingLegacyInput_26() { return &___IsUsingLegacyInput_26; }
	inline void set_IsUsingLegacyInput_26(_IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * value)
	{
		___IsUsingLegacyInput_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsUsingLegacyInput_26), (void*)value);
	}

	inline static int32_t get_offset_of_OpenBindingUI_27() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___OpenBindingUI_27)); }
	inline _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * get_OpenBindingUI_27() const { return ___OpenBindingUI_27; }
	inline _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F ** get_address_of_OpenBindingUI_27() { return &___OpenBindingUI_27; }
	inline void set_OpenBindingUI_27(_OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * value)
	{
		___OpenBindingUI_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OpenBindingUI_27), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRInput
struct IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78_marshaled_pinvoke
{
	Il2CppMethodPointer ___SetActionManifestPath_0;
	Il2CppMethodPointer ___GetActionSetHandle_1;
	Il2CppMethodPointer ___GetActionHandle_2;
	Il2CppMethodPointer ___GetInputSourceHandle_3;
	Il2CppMethodPointer ___UpdateActionState_4;
	Il2CppMethodPointer ___GetDigitalActionData_5;
	Il2CppMethodPointer ___GetAnalogActionData_6;
	Il2CppMethodPointer ___GetPoseActionDataRelativeToNow_7;
	Il2CppMethodPointer ___GetPoseActionDataForNextFrame_8;
	Il2CppMethodPointer ___GetSkeletalActionData_9;
	Il2CppMethodPointer ___GetBoneCount_10;
	Il2CppMethodPointer ___GetBoneHierarchy_11;
	Il2CppMethodPointer ___GetBoneName_12;
	Il2CppMethodPointer ___GetSkeletalReferenceTransforms_13;
	Il2CppMethodPointer ___GetSkeletalTrackingLevel_14;
	Il2CppMethodPointer ___GetSkeletalBoneData_15;
	Il2CppMethodPointer ___GetSkeletalSummaryData_16;
	Il2CppMethodPointer ___GetSkeletalBoneDataCompressed_17;
	Il2CppMethodPointer ___DecompressSkeletalBoneData_18;
	Il2CppMethodPointer ___TriggerHapticVibrationAction_19;
	Il2CppMethodPointer ___GetActionOrigins_20;
	Il2CppMethodPointer ___GetOriginLocalizedName_21;
	Il2CppMethodPointer ___GetOriginTrackedDeviceInfo_22;
	Il2CppMethodPointer ___GetActionBindingInfo_23;
	Il2CppMethodPointer ___ShowActionOrigins_24;
	Il2CppMethodPointer ___ShowBindingsForActionSet_25;
	Il2CppMethodPointer ___IsUsingLegacyInput_26;
	Il2CppMethodPointer ___OpenBindingUI_27;
};
// Native definition for COM marshalling of Valve.VR.IVRInput
struct IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78_marshaled_com
{
	Il2CppMethodPointer ___SetActionManifestPath_0;
	Il2CppMethodPointer ___GetActionSetHandle_1;
	Il2CppMethodPointer ___GetActionHandle_2;
	Il2CppMethodPointer ___GetInputSourceHandle_3;
	Il2CppMethodPointer ___UpdateActionState_4;
	Il2CppMethodPointer ___GetDigitalActionData_5;
	Il2CppMethodPointer ___GetAnalogActionData_6;
	Il2CppMethodPointer ___GetPoseActionDataRelativeToNow_7;
	Il2CppMethodPointer ___GetPoseActionDataForNextFrame_8;
	Il2CppMethodPointer ___GetSkeletalActionData_9;
	Il2CppMethodPointer ___GetBoneCount_10;
	Il2CppMethodPointer ___GetBoneHierarchy_11;
	Il2CppMethodPointer ___GetBoneName_12;
	Il2CppMethodPointer ___GetSkeletalReferenceTransforms_13;
	Il2CppMethodPointer ___GetSkeletalTrackingLevel_14;
	Il2CppMethodPointer ___GetSkeletalBoneData_15;
	Il2CppMethodPointer ___GetSkeletalSummaryData_16;
	Il2CppMethodPointer ___GetSkeletalBoneDataCompressed_17;
	Il2CppMethodPointer ___DecompressSkeletalBoneData_18;
	Il2CppMethodPointer ___TriggerHapticVibrationAction_19;
	Il2CppMethodPointer ___GetActionOrigins_20;
	Il2CppMethodPointer ___GetOriginLocalizedName_21;
	Il2CppMethodPointer ___GetOriginTrackedDeviceInfo_22;
	Il2CppMethodPointer ___GetActionBindingInfo_23;
	Il2CppMethodPointer ___ShowActionOrigins_24;
	Il2CppMethodPointer ___ShowBindingsForActionSet_25;
	Il2CppMethodPointer ___IsUsingLegacyInput_26;
	Il2CppMethodPointer ___OpenBindingUI_27;
};

// Valve.VR.InputAnalogActionData_t
struct  InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C 
{
public:
	// System.Boolean Valve.VR.InputAnalogActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputAnalogActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// System.Single Valve.VR.InputAnalogActionData_t::x
	float ___x_2;
	// System.Single Valve.VR.InputAnalogActionData_t::y
	float ___y_3;
	// System.Single Valve.VR.InputAnalogActionData_t::z
	float ___z_4;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaX
	float ___deltaX_5;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaY
	float ___deltaY_6;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaZ
	float ___deltaZ_7;
	// System.Single Valve.VR.InputAnalogActionData_t::fUpdateTime
	float ___fUpdateTime_8;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}

	inline static int32_t get_offset_of_deltaX_5() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaX_5)); }
	inline float get_deltaX_5() const { return ___deltaX_5; }
	inline float* get_address_of_deltaX_5() { return &___deltaX_5; }
	inline void set_deltaX_5(float value)
	{
		___deltaX_5 = value;
	}

	inline static int32_t get_offset_of_deltaY_6() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaY_6)); }
	inline float get_deltaY_6() const { return ___deltaY_6; }
	inline float* get_address_of_deltaY_6() { return &___deltaY_6; }
	inline void set_deltaY_6(float value)
	{
		___deltaY_6 = value;
	}

	inline static int32_t get_offset_of_deltaZ_7() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaZ_7)); }
	inline float get_deltaZ_7() const { return ___deltaZ_7; }
	inline float* get_address_of_deltaZ_7() { return &___deltaZ_7; }
	inline void set_deltaZ_7(float value)
	{
		___deltaZ_7 = value;
	}

	inline static int32_t get_offset_of_fUpdateTime_8() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___fUpdateTime_8)); }
	inline float get_fUpdateTime_8() const { return ___fUpdateTime_8; }
	inline float* get_address_of_fUpdateTime_8() { return &___fUpdateTime_8; }
	inline void set_fUpdateTime_8(float value)
	{
		___fUpdateTime_8 = value;
	}
};


// Valve.VR.InputDigitalActionData_t
struct  InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 
{
public:
	// System.Boolean Valve.VR.InputDigitalActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputDigitalActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// System.Boolean Valve.VR.InputDigitalActionData_t::bState
	bool ___bState_2;
	// System.Boolean Valve.VR.InputDigitalActionData_t::bChanged
	bool ___bChanged_3;
	// System.Single Valve.VR.InputDigitalActionData_t::fUpdateTime
	float ___fUpdateTime_4;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_bState_2() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bState_2)); }
	inline bool get_bState_2() const { return ___bState_2; }
	inline bool* get_address_of_bState_2() { return &___bState_2; }
	inline void set_bState_2(bool value)
	{
		___bState_2 = value;
	}

	inline static int32_t get_offset_of_bChanged_3() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bChanged_3)); }
	inline bool get_bChanged_3() const { return ___bChanged_3; }
	inline bool* get_address_of_bChanged_3() { return &___bChanged_3; }
	inline void set_bChanged_3(bool value)
	{
		___bChanged_3 = value;
	}

	inline static int32_t get_offset_of_fUpdateTime_4() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___fUpdateTime_4)); }
	inline float get_fUpdateTime_4() const { return ___fUpdateTime_4; }
	inline float* get_address_of_fUpdateTime_4() { return &___fUpdateTime_4; }
	inline void set_fUpdateTime_4(float value)
	{
		___fUpdateTime_4 = value;
	}
};


// Valve.VR.InputOriginInfo_t
struct  InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A 
{
public:
	// System.UInt64 Valve.VR.InputOriginInfo_t::devicePath
	uint64_t ___devicePath_0;
	// System.UInt32 Valve.VR.InputOriginInfo_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName0
	uint8_t ___rchRenderModelComponentName0_2;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName1
	uint8_t ___rchRenderModelComponentName1_3;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName2
	uint8_t ___rchRenderModelComponentName2_4;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName3
	uint8_t ___rchRenderModelComponentName3_5;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName4
	uint8_t ___rchRenderModelComponentName4_6;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName5
	uint8_t ___rchRenderModelComponentName5_7;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName6
	uint8_t ___rchRenderModelComponentName6_8;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName7
	uint8_t ___rchRenderModelComponentName7_9;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName8
	uint8_t ___rchRenderModelComponentName8_10;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName9
	uint8_t ___rchRenderModelComponentName9_11;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName10
	uint8_t ___rchRenderModelComponentName10_12;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName11
	uint8_t ___rchRenderModelComponentName11_13;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName12
	uint8_t ___rchRenderModelComponentName12_14;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName13
	uint8_t ___rchRenderModelComponentName13_15;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName14
	uint8_t ___rchRenderModelComponentName14_16;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName15
	uint8_t ___rchRenderModelComponentName15_17;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName16
	uint8_t ___rchRenderModelComponentName16_18;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName17
	uint8_t ___rchRenderModelComponentName17_19;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName18
	uint8_t ___rchRenderModelComponentName18_20;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName19
	uint8_t ___rchRenderModelComponentName19_21;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName20
	uint8_t ___rchRenderModelComponentName20_22;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName21
	uint8_t ___rchRenderModelComponentName21_23;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName22
	uint8_t ___rchRenderModelComponentName22_24;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName23
	uint8_t ___rchRenderModelComponentName23_25;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName24
	uint8_t ___rchRenderModelComponentName24_26;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName25
	uint8_t ___rchRenderModelComponentName25_27;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName26
	uint8_t ___rchRenderModelComponentName26_28;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName27
	uint8_t ___rchRenderModelComponentName27_29;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName28
	uint8_t ___rchRenderModelComponentName28_30;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName29
	uint8_t ___rchRenderModelComponentName29_31;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName30
	uint8_t ___rchRenderModelComponentName30_32;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName31
	uint8_t ___rchRenderModelComponentName31_33;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName32
	uint8_t ___rchRenderModelComponentName32_34;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName33
	uint8_t ___rchRenderModelComponentName33_35;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName34
	uint8_t ___rchRenderModelComponentName34_36;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName35
	uint8_t ___rchRenderModelComponentName35_37;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName36
	uint8_t ___rchRenderModelComponentName36_38;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName37
	uint8_t ___rchRenderModelComponentName37_39;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName38
	uint8_t ___rchRenderModelComponentName38_40;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName39
	uint8_t ___rchRenderModelComponentName39_41;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName40
	uint8_t ___rchRenderModelComponentName40_42;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName41
	uint8_t ___rchRenderModelComponentName41_43;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName42
	uint8_t ___rchRenderModelComponentName42_44;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName43
	uint8_t ___rchRenderModelComponentName43_45;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName44
	uint8_t ___rchRenderModelComponentName44_46;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName45
	uint8_t ___rchRenderModelComponentName45_47;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName46
	uint8_t ___rchRenderModelComponentName46_48;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName47
	uint8_t ___rchRenderModelComponentName47_49;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName48
	uint8_t ___rchRenderModelComponentName48_50;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName49
	uint8_t ___rchRenderModelComponentName49_51;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName50
	uint8_t ___rchRenderModelComponentName50_52;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName51
	uint8_t ___rchRenderModelComponentName51_53;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName52
	uint8_t ___rchRenderModelComponentName52_54;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName53
	uint8_t ___rchRenderModelComponentName53_55;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName54
	uint8_t ___rchRenderModelComponentName54_56;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName55
	uint8_t ___rchRenderModelComponentName55_57;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName56
	uint8_t ___rchRenderModelComponentName56_58;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName57
	uint8_t ___rchRenderModelComponentName57_59;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName58
	uint8_t ___rchRenderModelComponentName58_60;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName59
	uint8_t ___rchRenderModelComponentName59_61;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName60
	uint8_t ___rchRenderModelComponentName60_62;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName61
	uint8_t ___rchRenderModelComponentName61_63;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName62
	uint8_t ___rchRenderModelComponentName62_64;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName63
	uint8_t ___rchRenderModelComponentName63_65;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName64
	uint8_t ___rchRenderModelComponentName64_66;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName65
	uint8_t ___rchRenderModelComponentName65_67;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName66
	uint8_t ___rchRenderModelComponentName66_68;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName67
	uint8_t ___rchRenderModelComponentName67_69;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName68
	uint8_t ___rchRenderModelComponentName68_70;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName69
	uint8_t ___rchRenderModelComponentName69_71;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName70
	uint8_t ___rchRenderModelComponentName70_72;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName71
	uint8_t ___rchRenderModelComponentName71_73;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName72
	uint8_t ___rchRenderModelComponentName72_74;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName73
	uint8_t ___rchRenderModelComponentName73_75;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName74
	uint8_t ___rchRenderModelComponentName74_76;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName75
	uint8_t ___rchRenderModelComponentName75_77;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName76
	uint8_t ___rchRenderModelComponentName76_78;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName77
	uint8_t ___rchRenderModelComponentName77_79;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName78
	uint8_t ___rchRenderModelComponentName78_80;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName79
	uint8_t ___rchRenderModelComponentName79_81;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName80
	uint8_t ___rchRenderModelComponentName80_82;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName81
	uint8_t ___rchRenderModelComponentName81_83;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName82
	uint8_t ___rchRenderModelComponentName82_84;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName83
	uint8_t ___rchRenderModelComponentName83_85;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName84
	uint8_t ___rchRenderModelComponentName84_86;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName85
	uint8_t ___rchRenderModelComponentName85_87;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName86
	uint8_t ___rchRenderModelComponentName86_88;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName87
	uint8_t ___rchRenderModelComponentName87_89;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName88
	uint8_t ___rchRenderModelComponentName88_90;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName89
	uint8_t ___rchRenderModelComponentName89_91;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName90
	uint8_t ___rchRenderModelComponentName90_92;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName91
	uint8_t ___rchRenderModelComponentName91_93;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName92
	uint8_t ___rchRenderModelComponentName92_94;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName93
	uint8_t ___rchRenderModelComponentName93_95;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName94
	uint8_t ___rchRenderModelComponentName94_96;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName95
	uint8_t ___rchRenderModelComponentName95_97;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName96
	uint8_t ___rchRenderModelComponentName96_98;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName97
	uint8_t ___rchRenderModelComponentName97_99;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName98
	uint8_t ___rchRenderModelComponentName98_100;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName99
	uint8_t ___rchRenderModelComponentName99_101;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName100
	uint8_t ___rchRenderModelComponentName100_102;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName101
	uint8_t ___rchRenderModelComponentName101_103;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName102
	uint8_t ___rchRenderModelComponentName102_104;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName103
	uint8_t ___rchRenderModelComponentName103_105;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName104
	uint8_t ___rchRenderModelComponentName104_106;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName105
	uint8_t ___rchRenderModelComponentName105_107;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName106
	uint8_t ___rchRenderModelComponentName106_108;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName107
	uint8_t ___rchRenderModelComponentName107_109;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName108
	uint8_t ___rchRenderModelComponentName108_110;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName109
	uint8_t ___rchRenderModelComponentName109_111;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName110
	uint8_t ___rchRenderModelComponentName110_112;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName111
	uint8_t ___rchRenderModelComponentName111_113;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName112
	uint8_t ___rchRenderModelComponentName112_114;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName113
	uint8_t ___rchRenderModelComponentName113_115;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName114
	uint8_t ___rchRenderModelComponentName114_116;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName115
	uint8_t ___rchRenderModelComponentName115_117;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName116
	uint8_t ___rchRenderModelComponentName116_118;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName117
	uint8_t ___rchRenderModelComponentName117_119;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName118
	uint8_t ___rchRenderModelComponentName118_120;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName119
	uint8_t ___rchRenderModelComponentName119_121;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName120
	uint8_t ___rchRenderModelComponentName120_122;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName121
	uint8_t ___rchRenderModelComponentName121_123;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName122
	uint8_t ___rchRenderModelComponentName122_124;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName123
	uint8_t ___rchRenderModelComponentName123_125;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName124
	uint8_t ___rchRenderModelComponentName124_126;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName125
	uint8_t ___rchRenderModelComponentName125_127;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName126
	uint8_t ___rchRenderModelComponentName126_128;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName127
	uint8_t ___rchRenderModelComponentName127_129;

public:
	inline static int32_t get_offset_of_devicePath_0() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___devicePath_0)); }
	inline uint64_t get_devicePath_0() const { return ___devicePath_0; }
	inline uint64_t* get_address_of_devicePath_0() { return &___devicePath_0; }
	inline void set_devicePath_0(uint64_t value)
	{
		___devicePath_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName0_2() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName0_2)); }
	inline uint8_t get_rchRenderModelComponentName0_2() const { return ___rchRenderModelComponentName0_2; }
	inline uint8_t* get_address_of_rchRenderModelComponentName0_2() { return &___rchRenderModelComponentName0_2; }
	inline void set_rchRenderModelComponentName0_2(uint8_t value)
	{
		___rchRenderModelComponentName0_2 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName1_3() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName1_3)); }
	inline uint8_t get_rchRenderModelComponentName1_3() const { return ___rchRenderModelComponentName1_3; }
	inline uint8_t* get_address_of_rchRenderModelComponentName1_3() { return &___rchRenderModelComponentName1_3; }
	inline void set_rchRenderModelComponentName1_3(uint8_t value)
	{
		___rchRenderModelComponentName1_3 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName2_4() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName2_4)); }
	inline uint8_t get_rchRenderModelComponentName2_4() const { return ___rchRenderModelComponentName2_4; }
	inline uint8_t* get_address_of_rchRenderModelComponentName2_4() { return &___rchRenderModelComponentName2_4; }
	inline void set_rchRenderModelComponentName2_4(uint8_t value)
	{
		___rchRenderModelComponentName2_4 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName3_5() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName3_5)); }
	inline uint8_t get_rchRenderModelComponentName3_5() const { return ___rchRenderModelComponentName3_5; }
	inline uint8_t* get_address_of_rchRenderModelComponentName3_5() { return &___rchRenderModelComponentName3_5; }
	inline void set_rchRenderModelComponentName3_5(uint8_t value)
	{
		___rchRenderModelComponentName3_5 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName4_6() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName4_6)); }
	inline uint8_t get_rchRenderModelComponentName4_6() const { return ___rchRenderModelComponentName4_6; }
	inline uint8_t* get_address_of_rchRenderModelComponentName4_6() { return &___rchRenderModelComponentName4_6; }
	inline void set_rchRenderModelComponentName4_6(uint8_t value)
	{
		___rchRenderModelComponentName4_6 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName5_7() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName5_7)); }
	inline uint8_t get_rchRenderModelComponentName5_7() const { return ___rchRenderModelComponentName5_7; }
	inline uint8_t* get_address_of_rchRenderModelComponentName5_7() { return &___rchRenderModelComponentName5_7; }
	inline void set_rchRenderModelComponentName5_7(uint8_t value)
	{
		___rchRenderModelComponentName5_7 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName6_8() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName6_8)); }
	inline uint8_t get_rchRenderModelComponentName6_8() const { return ___rchRenderModelComponentName6_8; }
	inline uint8_t* get_address_of_rchRenderModelComponentName6_8() { return &___rchRenderModelComponentName6_8; }
	inline void set_rchRenderModelComponentName6_8(uint8_t value)
	{
		___rchRenderModelComponentName6_8 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName7_9() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName7_9)); }
	inline uint8_t get_rchRenderModelComponentName7_9() const { return ___rchRenderModelComponentName7_9; }
	inline uint8_t* get_address_of_rchRenderModelComponentName7_9() { return &___rchRenderModelComponentName7_9; }
	inline void set_rchRenderModelComponentName7_9(uint8_t value)
	{
		___rchRenderModelComponentName7_9 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName8_10() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName8_10)); }
	inline uint8_t get_rchRenderModelComponentName8_10() const { return ___rchRenderModelComponentName8_10; }
	inline uint8_t* get_address_of_rchRenderModelComponentName8_10() { return &___rchRenderModelComponentName8_10; }
	inline void set_rchRenderModelComponentName8_10(uint8_t value)
	{
		___rchRenderModelComponentName8_10 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName9_11() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName9_11)); }
	inline uint8_t get_rchRenderModelComponentName9_11() const { return ___rchRenderModelComponentName9_11; }
	inline uint8_t* get_address_of_rchRenderModelComponentName9_11() { return &___rchRenderModelComponentName9_11; }
	inline void set_rchRenderModelComponentName9_11(uint8_t value)
	{
		___rchRenderModelComponentName9_11 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName10_12() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName10_12)); }
	inline uint8_t get_rchRenderModelComponentName10_12() const { return ___rchRenderModelComponentName10_12; }
	inline uint8_t* get_address_of_rchRenderModelComponentName10_12() { return &___rchRenderModelComponentName10_12; }
	inline void set_rchRenderModelComponentName10_12(uint8_t value)
	{
		___rchRenderModelComponentName10_12 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName11_13() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName11_13)); }
	inline uint8_t get_rchRenderModelComponentName11_13() const { return ___rchRenderModelComponentName11_13; }
	inline uint8_t* get_address_of_rchRenderModelComponentName11_13() { return &___rchRenderModelComponentName11_13; }
	inline void set_rchRenderModelComponentName11_13(uint8_t value)
	{
		___rchRenderModelComponentName11_13 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName12_14() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName12_14)); }
	inline uint8_t get_rchRenderModelComponentName12_14() const { return ___rchRenderModelComponentName12_14; }
	inline uint8_t* get_address_of_rchRenderModelComponentName12_14() { return &___rchRenderModelComponentName12_14; }
	inline void set_rchRenderModelComponentName12_14(uint8_t value)
	{
		___rchRenderModelComponentName12_14 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName13_15() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName13_15)); }
	inline uint8_t get_rchRenderModelComponentName13_15() const { return ___rchRenderModelComponentName13_15; }
	inline uint8_t* get_address_of_rchRenderModelComponentName13_15() { return &___rchRenderModelComponentName13_15; }
	inline void set_rchRenderModelComponentName13_15(uint8_t value)
	{
		___rchRenderModelComponentName13_15 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName14_16() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName14_16)); }
	inline uint8_t get_rchRenderModelComponentName14_16() const { return ___rchRenderModelComponentName14_16; }
	inline uint8_t* get_address_of_rchRenderModelComponentName14_16() { return &___rchRenderModelComponentName14_16; }
	inline void set_rchRenderModelComponentName14_16(uint8_t value)
	{
		___rchRenderModelComponentName14_16 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName15_17() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName15_17)); }
	inline uint8_t get_rchRenderModelComponentName15_17() const { return ___rchRenderModelComponentName15_17; }
	inline uint8_t* get_address_of_rchRenderModelComponentName15_17() { return &___rchRenderModelComponentName15_17; }
	inline void set_rchRenderModelComponentName15_17(uint8_t value)
	{
		___rchRenderModelComponentName15_17 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName16_18() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName16_18)); }
	inline uint8_t get_rchRenderModelComponentName16_18() const { return ___rchRenderModelComponentName16_18; }
	inline uint8_t* get_address_of_rchRenderModelComponentName16_18() { return &___rchRenderModelComponentName16_18; }
	inline void set_rchRenderModelComponentName16_18(uint8_t value)
	{
		___rchRenderModelComponentName16_18 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName17_19() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName17_19)); }
	inline uint8_t get_rchRenderModelComponentName17_19() const { return ___rchRenderModelComponentName17_19; }
	inline uint8_t* get_address_of_rchRenderModelComponentName17_19() { return &___rchRenderModelComponentName17_19; }
	inline void set_rchRenderModelComponentName17_19(uint8_t value)
	{
		___rchRenderModelComponentName17_19 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName18_20() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName18_20)); }
	inline uint8_t get_rchRenderModelComponentName18_20() const { return ___rchRenderModelComponentName18_20; }
	inline uint8_t* get_address_of_rchRenderModelComponentName18_20() { return &___rchRenderModelComponentName18_20; }
	inline void set_rchRenderModelComponentName18_20(uint8_t value)
	{
		___rchRenderModelComponentName18_20 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName19_21() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName19_21)); }
	inline uint8_t get_rchRenderModelComponentName19_21() const { return ___rchRenderModelComponentName19_21; }
	inline uint8_t* get_address_of_rchRenderModelComponentName19_21() { return &___rchRenderModelComponentName19_21; }
	inline void set_rchRenderModelComponentName19_21(uint8_t value)
	{
		___rchRenderModelComponentName19_21 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName20_22() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName20_22)); }
	inline uint8_t get_rchRenderModelComponentName20_22() const { return ___rchRenderModelComponentName20_22; }
	inline uint8_t* get_address_of_rchRenderModelComponentName20_22() { return &___rchRenderModelComponentName20_22; }
	inline void set_rchRenderModelComponentName20_22(uint8_t value)
	{
		___rchRenderModelComponentName20_22 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName21_23() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName21_23)); }
	inline uint8_t get_rchRenderModelComponentName21_23() const { return ___rchRenderModelComponentName21_23; }
	inline uint8_t* get_address_of_rchRenderModelComponentName21_23() { return &___rchRenderModelComponentName21_23; }
	inline void set_rchRenderModelComponentName21_23(uint8_t value)
	{
		___rchRenderModelComponentName21_23 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName22_24() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName22_24)); }
	inline uint8_t get_rchRenderModelComponentName22_24() const { return ___rchRenderModelComponentName22_24; }
	inline uint8_t* get_address_of_rchRenderModelComponentName22_24() { return &___rchRenderModelComponentName22_24; }
	inline void set_rchRenderModelComponentName22_24(uint8_t value)
	{
		___rchRenderModelComponentName22_24 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName23_25() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName23_25)); }
	inline uint8_t get_rchRenderModelComponentName23_25() const { return ___rchRenderModelComponentName23_25; }
	inline uint8_t* get_address_of_rchRenderModelComponentName23_25() { return &___rchRenderModelComponentName23_25; }
	inline void set_rchRenderModelComponentName23_25(uint8_t value)
	{
		___rchRenderModelComponentName23_25 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName24_26() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName24_26)); }
	inline uint8_t get_rchRenderModelComponentName24_26() const { return ___rchRenderModelComponentName24_26; }
	inline uint8_t* get_address_of_rchRenderModelComponentName24_26() { return &___rchRenderModelComponentName24_26; }
	inline void set_rchRenderModelComponentName24_26(uint8_t value)
	{
		___rchRenderModelComponentName24_26 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName25_27() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName25_27)); }
	inline uint8_t get_rchRenderModelComponentName25_27() const { return ___rchRenderModelComponentName25_27; }
	inline uint8_t* get_address_of_rchRenderModelComponentName25_27() { return &___rchRenderModelComponentName25_27; }
	inline void set_rchRenderModelComponentName25_27(uint8_t value)
	{
		___rchRenderModelComponentName25_27 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName26_28() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName26_28)); }
	inline uint8_t get_rchRenderModelComponentName26_28() const { return ___rchRenderModelComponentName26_28; }
	inline uint8_t* get_address_of_rchRenderModelComponentName26_28() { return &___rchRenderModelComponentName26_28; }
	inline void set_rchRenderModelComponentName26_28(uint8_t value)
	{
		___rchRenderModelComponentName26_28 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName27_29() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName27_29)); }
	inline uint8_t get_rchRenderModelComponentName27_29() const { return ___rchRenderModelComponentName27_29; }
	inline uint8_t* get_address_of_rchRenderModelComponentName27_29() { return &___rchRenderModelComponentName27_29; }
	inline void set_rchRenderModelComponentName27_29(uint8_t value)
	{
		___rchRenderModelComponentName27_29 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName28_30() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName28_30)); }
	inline uint8_t get_rchRenderModelComponentName28_30() const { return ___rchRenderModelComponentName28_30; }
	inline uint8_t* get_address_of_rchRenderModelComponentName28_30() { return &___rchRenderModelComponentName28_30; }
	inline void set_rchRenderModelComponentName28_30(uint8_t value)
	{
		___rchRenderModelComponentName28_30 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName29_31() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName29_31)); }
	inline uint8_t get_rchRenderModelComponentName29_31() const { return ___rchRenderModelComponentName29_31; }
	inline uint8_t* get_address_of_rchRenderModelComponentName29_31() { return &___rchRenderModelComponentName29_31; }
	inline void set_rchRenderModelComponentName29_31(uint8_t value)
	{
		___rchRenderModelComponentName29_31 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName30_32() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName30_32)); }
	inline uint8_t get_rchRenderModelComponentName30_32() const { return ___rchRenderModelComponentName30_32; }
	inline uint8_t* get_address_of_rchRenderModelComponentName30_32() { return &___rchRenderModelComponentName30_32; }
	inline void set_rchRenderModelComponentName30_32(uint8_t value)
	{
		___rchRenderModelComponentName30_32 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName31_33() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName31_33)); }
	inline uint8_t get_rchRenderModelComponentName31_33() const { return ___rchRenderModelComponentName31_33; }
	inline uint8_t* get_address_of_rchRenderModelComponentName31_33() { return &___rchRenderModelComponentName31_33; }
	inline void set_rchRenderModelComponentName31_33(uint8_t value)
	{
		___rchRenderModelComponentName31_33 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName32_34() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName32_34)); }
	inline uint8_t get_rchRenderModelComponentName32_34() const { return ___rchRenderModelComponentName32_34; }
	inline uint8_t* get_address_of_rchRenderModelComponentName32_34() { return &___rchRenderModelComponentName32_34; }
	inline void set_rchRenderModelComponentName32_34(uint8_t value)
	{
		___rchRenderModelComponentName32_34 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName33_35() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName33_35)); }
	inline uint8_t get_rchRenderModelComponentName33_35() const { return ___rchRenderModelComponentName33_35; }
	inline uint8_t* get_address_of_rchRenderModelComponentName33_35() { return &___rchRenderModelComponentName33_35; }
	inline void set_rchRenderModelComponentName33_35(uint8_t value)
	{
		___rchRenderModelComponentName33_35 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName34_36() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName34_36)); }
	inline uint8_t get_rchRenderModelComponentName34_36() const { return ___rchRenderModelComponentName34_36; }
	inline uint8_t* get_address_of_rchRenderModelComponentName34_36() { return &___rchRenderModelComponentName34_36; }
	inline void set_rchRenderModelComponentName34_36(uint8_t value)
	{
		___rchRenderModelComponentName34_36 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName35_37() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName35_37)); }
	inline uint8_t get_rchRenderModelComponentName35_37() const { return ___rchRenderModelComponentName35_37; }
	inline uint8_t* get_address_of_rchRenderModelComponentName35_37() { return &___rchRenderModelComponentName35_37; }
	inline void set_rchRenderModelComponentName35_37(uint8_t value)
	{
		___rchRenderModelComponentName35_37 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName36_38() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName36_38)); }
	inline uint8_t get_rchRenderModelComponentName36_38() const { return ___rchRenderModelComponentName36_38; }
	inline uint8_t* get_address_of_rchRenderModelComponentName36_38() { return &___rchRenderModelComponentName36_38; }
	inline void set_rchRenderModelComponentName36_38(uint8_t value)
	{
		___rchRenderModelComponentName36_38 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName37_39() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName37_39)); }
	inline uint8_t get_rchRenderModelComponentName37_39() const { return ___rchRenderModelComponentName37_39; }
	inline uint8_t* get_address_of_rchRenderModelComponentName37_39() { return &___rchRenderModelComponentName37_39; }
	inline void set_rchRenderModelComponentName37_39(uint8_t value)
	{
		___rchRenderModelComponentName37_39 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName38_40() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName38_40)); }
	inline uint8_t get_rchRenderModelComponentName38_40() const { return ___rchRenderModelComponentName38_40; }
	inline uint8_t* get_address_of_rchRenderModelComponentName38_40() { return &___rchRenderModelComponentName38_40; }
	inline void set_rchRenderModelComponentName38_40(uint8_t value)
	{
		___rchRenderModelComponentName38_40 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName39_41() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName39_41)); }
	inline uint8_t get_rchRenderModelComponentName39_41() const { return ___rchRenderModelComponentName39_41; }
	inline uint8_t* get_address_of_rchRenderModelComponentName39_41() { return &___rchRenderModelComponentName39_41; }
	inline void set_rchRenderModelComponentName39_41(uint8_t value)
	{
		___rchRenderModelComponentName39_41 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName40_42() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName40_42)); }
	inline uint8_t get_rchRenderModelComponentName40_42() const { return ___rchRenderModelComponentName40_42; }
	inline uint8_t* get_address_of_rchRenderModelComponentName40_42() { return &___rchRenderModelComponentName40_42; }
	inline void set_rchRenderModelComponentName40_42(uint8_t value)
	{
		___rchRenderModelComponentName40_42 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName41_43() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName41_43)); }
	inline uint8_t get_rchRenderModelComponentName41_43() const { return ___rchRenderModelComponentName41_43; }
	inline uint8_t* get_address_of_rchRenderModelComponentName41_43() { return &___rchRenderModelComponentName41_43; }
	inline void set_rchRenderModelComponentName41_43(uint8_t value)
	{
		___rchRenderModelComponentName41_43 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName42_44() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName42_44)); }
	inline uint8_t get_rchRenderModelComponentName42_44() const { return ___rchRenderModelComponentName42_44; }
	inline uint8_t* get_address_of_rchRenderModelComponentName42_44() { return &___rchRenderModelComponentName42_44; }
	inline void set_rchRenderModelComponentName42_44(uint8_t value)
	{
		___rchRenderModelComponentName42_44 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName43_45() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName43_45)); }
	inline uint8_t get_rchRenderModelComponentName43_45() const { return ___rchRenderModelComponentName43_45; }
	inline uint8_t* get_address_of_rchRenderModelComponentName43_45() { return &___rchRenderModelComponentName43_45; }
	inline void set_rchRenderModelComponentName43_45(uint8_t value)
	{
		___rchRenderModelComponentName43_45 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName44_46() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName44_46)); }
	inline uint8_t get_rchRenderModelComponentName44_46() const { return ___rchRenderModelComponentName44_46; }
	inline uint8_t* get_address_of_rchRenderModelComponentName44_46() { return &___rchRenderModelComponentName44_46; }
	inline void set_rchRenderModelComponentName44_46(uint8_t value)
	{
		___rchRenderModelComponentName44_46 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName45_47() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName45_47)); }
	inline uint8_t get_rchRenderModelComponentName45_47() const { return ___rchRenderModelComponentName45_47; }
	inline uint8_t* get_address_of_rchRenderModelComponentName45_47() { return &___rchRenderModelComponentName45_47; }
	inline void set_rchRenderModelComponentName45_47(uint8_t value)
	{
		___rchRenderModelComponentName45_47 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName46_48() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName46_48)); }
	inline uint8_t get_rchRenderModelComponentName46_48() const { return ___rchRenderModelComponentName46_48; }
	inline uint8_t* get_address_of_rchRenderModelComponentName46_48() { return &___rchRenderModelComponentName46_48; }
	inline void set_rchRenderModelComponentName46_48(uint8_t value)
	{
		___rchRenderModelComponentName46_48 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName47_49() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName47_49)); }
	inline uint8_t get_rchRenderModelComponentName47_49() const { return ___rchRenderModelComponentName47_49; }
	inline uint8_t* get_address_of_rchRenderModelComponentName47_49() { return &___rchRenderModelComponentName47_49; }
	inline void set_rchRenderModelComponentName47_49(uint8_t value)
	{
		___rchRenderModelComponentName47_49 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName48_50() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName48_50)); }
	inline uint8_t get_rchRenderModelComponentName48_50() const { return ___rchRenderModelComponentName48_50; }
	inline uint8_t* get_address_of_rchRenderModelComponentName48_50() { return &___rchRenderModelComponentName48_50; }
	inline void set_rchRenderModelComponentName48_50(uint8_t value)
	{
		___rchRenderModelComponentName48_50 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName49_51() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName49_51)); }
	inline uint8_t get_rchRenderModelComponentName49_51() const { return ___rchRenderModelComponentName49_51; }
	inline uint8_t* get_address_of_rchRenderModelComponentName49_51() { return &___rchRenderModelComponentName49_51; }
	inline void set_rchRenderModelComponentName49_51(uint8_t value)
	{
		___rchRenderModelComponentName49_51 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName50_52() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName50_52)); }
	inline uint8_t get_rchRenderModelComponentName50_52() const { return ___rchRenderModelComponentName50_52; }
	inline uint8_t* get_address_of_rchRenderModelComponentName50_52() { return &___rchRenderModelComponentName50_52; }
	inline void set_rchRenderModelComponentName50_52(uint8_t value)
	{
		___rchRenderModelComponentName50_52 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName51_53() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName51_53)); }
	inline uint8_t get_rchRenderModelComponentName51_53() const { return ___rchRenderModelComponentName51_53; }
	inline uint8_t* get_address_of_rchRenderModelComponentName51_53() { return &___rchRenderModelComponentName51_53; }
	inline void set_rchRenderModelComponentName51_53(uint8_t value)
	{
		___rchRenderModelComponentName51_53 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName52_54() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName52_54)); }
	inline uint8_t get_rchRenderModelComponentName52_54() const { return ___rchRenderModelComponentName52_54; }
	inline uint8_t* get_address_of_rchRenderModelComponentName52_54() { return &___rchRenderModelComponentName52_54; }
	inline void set_rchRenderModelComponentName52_54(uint8_t value)
	{
		___rchRenderModelComponentName52_54 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName53_55() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName53_55)); }
	inline uint8_t get_rchRenderModelComponentName53_55() const { return ___rchRenderModelComponentName53_55; }
	inline uint8_t* get_address_of_rchRenderModelComponentName53_55() { return &___rchRenderModelComponentName53_55; }
	inline void set_rchRenderModelComponentName53_55(uint8_t value)
	{
		___rchRenderModelComponentName53_55 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName54_56() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName54_56)); }
	inline uint8_t get_rchRenderModelComponentName54_56() const { return ___rchRenderModelComponentName54_56; }
	inline uint8_t* get_address_of_rchRenderModelComponentName54_56() { return &___rchRenderModelComponentName54_56; }
	inline void set_rchRenderModelComponentName54_56(uint8_t value)
	{
		___rchRenderModelComponentName54_56 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName55_57() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName55_57)); }
	inline uint8_t get_rchRenderModelComponentName55_57() const { return ___rchRenderModelComponentName55_57; }
	inline uint8_t* get_address_of_rchRenderModelComponentName55_57() { return &___rchRenderModelComponentName55_57; }
	inline void set_rchRenderModelComponentName55_57(uint8_t value)
	{
		___rchRenderModelComponentName55_57 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName56_58() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName56_58)); }
	inline uint8_t get_rchRenderModelComponentName56_58() const { return ___rchRenderModelComponentName56_58; }
	inline uint8_t* get_address_of_rchRenderModelComponentName56_58() { return &___rchRenderModelComponentName56_58; }
	inline void set_rchRenderModelComponentName56_58(uint8_t value)
	{
		___rchRenderModelComponentName56_58 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName57_59() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName57_59)); }
	inline uint8_t get_rchRenderModelComponentName57_59() const { return ___rchRenderModelComponentName57_59; }
	inline uint8_t* get_address_of_rchRenderModelComponentName57_59() { return &___rchRenderModelComponentName57_59; }
	inline void set_rchRenderModelComponentName57_59(uint8_t value)
	{
		___rchRenderModelComponentName57_59 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName58_60() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName58_60)); }
	inline uint8_t get_rchRenderModelComponentName58_60() const { return ___rchRenderModelComponentName58_60; }
	inline uint8_t* get_address_of_rchRenderModelComponentName58_60() { return &___rchRenderModelComponentName58_60; }
	inline void set_rchRenderModelComponentName58_60(uint8_t value)
	{
		___rchRenderModelComponentName58_60 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName59_61() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName59_61)); }
	inline uint8_t get_rchRenderModelComponentName59_61() const { return ___rchRenderModelComponentName59_61; }
	inline uint8_t* get_address_of_rchRenderModelComponentName59_61() { return &___rchRenderModelComponentName59_61; }
	inline void set_rchRenderModelComponentName59_61(uint8_t value)
	{
		___rchRenderModelComponentName59_61 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName60_62() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName60_62)); }
	inline uint8_t get_rchRenderModelComponentName60_62() const { return ___rchRenderModelComponentName60_62; }
	inline uint8_t* get_address_of_rchRenderModelComponentName60_62() { return &___rchRenderModelComponentName60_62; }
	inline void set_rchRenderModelComponentName60_62(uint8_t value)
	{
		___rchRenderModelComponentName60_62 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName61_63() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName61_63)); }
	inline uint8_t get_rchRenderModelComponentName61_63() const { return ___rchRenderModelComponentName61_63; }
	inline uint8_t* get_address_of_rchRenderModelComponentName61_63() { return &___rchRenderModelComponentName61_63; }
	inline void set_rchRenderModelComponentName61_63(uint8_t value)
	{
		___rchRenderModelComponentName61_63 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName62_64() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName62_64)); }
	inline uint8_t get_rchRenderModelComponentName62_64() const { return ___rchRenderModelComponentName62_64; }
	inline uint8_t* get_address_of_rchRenderModelComponentName62_64() { return &___rchRenderModelComponentName62_64; }
	inline void set_rchRenderModelComponentName62_64(uint8_t value)
	{
		___rchRenderModelComponentName62_64 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName63_65() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName63_65)); }
	inline uint8_t get_rchRenderModelComponentName63_65() const { return ___rchRenderModelComponentName63_65; }
	inline uint8_t* get_address_of_rchRenderModelComponentName63_65() { return &___rchRenderModelComponentName63_65; }
	inline void set_rchRenderModelComponentName63_65(uint8_t value)
	{
		___rchRenderModelComponentName63_65 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName64_66() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName64_66)); }
	inline uint8_t get_rchRenderModelComponentName64_66() const { return ___rchRenderModelComponentName64_66; }
	inline uint8_t* get_address_of_rchRenderModelComponentName64_66() { return &___rchRenderModelComponentName64_66; }
	inline void set_rchRenderModelComponentName64_66(uint8_t value)
	{
		___rchRenderModelComponentName64_66 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName65_67() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName65_67)); }
	inline uint8_t get_rchRenderModelComponentName65_67() const { return ___rchRenderModelComponentName65_67; }
	inline uint8_t* get_address_of_rchRenderModelComponentName65_67() { return &___rchRenderModelComponentName65_67; }
	inline void set_rchRenderModelComponentName65_67(uint8_t value)
	{
		___rchRenderModelComponentName65_67 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName66_68() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName66_68)); }
	inline uint8_t get_rchRenderModelComponentName66_68() const { return ___rchRenderModelComponentName66_68; }
	inline uint8_t* get_address_of_rchRenderModelComponentName66_68() { return &___rchRenderModelComponentName66_68; }
	inline void set_rchRenderModelComponentName66_68(uint8_t value)
	{
		___rchRenderModelComponentName66_68 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName67_69() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName67_69)); }
	inline uint8_t get_rchRenderModelComponentName67_69() const { return ___rchRenderModelComponentName67_69; }
	inline uint8_t* get_address_of_rchRenderModelComponentName67_69() { return &___rchRenderModelComponentName67_69; }
	inline void set_rchRenderModelComponentName67_69(uint8_t value)
	{
		___rchRenderModelComponentName67_69 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName68_70() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName68_70)); }
	inline uint8_t get_rchRenderModelComponentName68_70() const { return ___rchRenderModelComponentName68_70; }
	inline uint8_t* get_address_of_rchRenderModelComponentName68_70() { return &___rchRenderModelComponentName68_70; }
	inline void set_rchRenderModelComponentName68_70(uint8_t value)
	{
		___rchRenderModelComponentName68_70 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName69_71() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName69_71)); }
	inline uint8_t get_rchRenderModelComponentName69_71() const { return ___rchRenderModelComponentName69_71; }
	inline uint8_t* get_address_of_rchRenderModelComponentName69_71() { return &___rchRenderModelComponentName69_71; }
	inline void set_rchRenderModelComponentName69_71(uint8_t value)
	{
		___rchRenderModelComponentName69_71 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName70_72() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName70_72)); }
	inline uint8_t get_rchRenderModelComponentName70_72() const { return ___rchRenderModelComponentName70_72; }
	inline uint8_t* get_address_of_rchRenderModelComponentName70_72() { return &___rchRenderModelComponentName70_72; }
	inline void set_rchRenderModelComponentName70_72(uint8_t value)
	{
		___rchRenderModelComponentName70_72 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName71_73() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName71_73)); }
	inline uint8_t get_rchRenderModelComponentName71_73() const { return ___rchRenderModelComponentName71_73; }
	inline uint8_t* get_address_of_rchRenderModelComponentName71_73() { return &___rchRenderModelComponentName71_73; }
	inline void set_rchRenderModelComponentName71_73(uint8_t value)
	{
		___rchRenderModelComponentName71_73 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName72_74() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName72_74)); }
	inline uint8_t get_rchRenderModelComponentName72_74() const { return ___rchRenderModelComponentName72_74; }
	inline uint8_t* get_address_of_rchRenderModelComponentName72_74() { return &___rchRenderModelComponentName72_74; }
	inline void set_rchRenderModelComponentName72_74(uint8_t value)
	{
		___rchRenderModelComponentName72_74 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName73_75() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName73_75)); }
	inline uint8_t get_rchRenderModelComponentName73_75() const { return ___rchRenderModelComponentName73_75; }
	inline uint8_t* get_address_of_rchRenderModelComponentName73_75() { return &___rchRenderModelComponentName73_75; }
	inline void set_rchRenderModelComponentName73_75(uint8_t value)
	{
		___rchRenderModelComponentName73_75 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName74_76() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName74_76)); }
	inline uint8_t get_rchRenderModelComponentName74_76() const { return ___rchRenderModelComponentName74_76; }
	inline uint8_t* get_address_of_rchRenderModelComponentName74_76() { return &___rchRenderModelComponentName74_76; }
	inline void set_rchRenderModelComponentName74_76(uint8_t value)
	{
		___rchRenderModelComponentName74_76 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName75_77() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName75_77)); }
	inline uint8_t get_rchRenderModelComponentName75_77() const { return ___rchRenderModelComponentName75_77; }
	inline uint8_t* get_address_of_rchRenderModelComponentName75_77() { return &___rchRenderModelComponentName75_77; }
	inline void set_rchRenderModelComponentName75_77(uint8_t value)
	{
		___rchRenderModelComponentName75_77 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName76_78() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName76_78)); }
	inline uint8_t get_rchRenderModelComponentName76_78() const { return ___rchRenderModelComponentName76_78; }
	inline uint8_t* get_address_of_rchRenderModelComponentName76_78() { return &___rchRenderModelComponentName76_78; }
	inline void set_rchRenderModelComponentName76_78(uint8_t value)
	{
		___rchRenderModelComponentName76_78 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName77_79() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName77_79)); }
	inline uint8_t get_rchRenderModelComponentName77_79() const { return ___rchRenderModelComponentName77_79; }
	inline uint8_t* get_address_of_rchRenderModelComponentName77_79() { return &___rchRenderModelComponentName77_79; }
	inline void set_rchRenderModelComponentName77_79(uint8_t value)
	{
		___rchRenderModelComponentName77_79 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName78_80() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName78_80)); }
	inline uint8_t get_rchRenderModelComponentName78_80() const { return ___rchRenderModelComponentName78_80; }
	inline uint8_t* get_address_of_rchRenderModelComponentName78_80() { return &___rchRenderModelComponentName78_80; }
	inline void set_rchRenderModelComponentName78_80(uint8_t value)
	{
		___rchRenderModelComponentName78_80 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName79_81() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName79_81)); }
	inline uint8_t get_rchRenderModelComponentName79_81() const { return ___rchRenderModelComponentName79_81; }
	inline uint8_t* get_address_of_rchRenderModelComponentName79_81() { return &___rchRenderModelComponentName79_81; }
	inline void set_rchRenderModelComponentName79_81(uint8_t value)
	{
		___rchRenderModelComponentName79_81 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName80_82() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName80_82)); }
	inline uint8_t get_rchRenderModelComponentName80_82() const { return ___rchRenderModelComponentName80_82; }
	inline uint8_t* get_address_of_rchRenderModelComponentName80_82() { return &___rchRenderModelComponentName80_82; }
	inline void set_rchRenderModelComponentName80_82(uint8_t value)
	{
		___rchRenderModelComponentName80_82 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName81_83() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName81_83)); }
	inline uint8_t get_rchRenderModelComponentName81_83() const { return ___rchRenderModelComponentName81_83; }
	inline uint8_t* get_address_of_rchRenderModelComponentName81_83() { return &___rchRenderModelComponentName81_83; }
	inline void set_rchRenderModelComponentName81_83(uint8_t value)
	{
		___rchRenderModelComponentName81_83 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName82_84() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName82_84)); }
	inline uint8_t get_rchRenderModelComponentName82_84() const { return ___rchRenderModelComponentName82_84; }
	inline uint8_t* get_address_of_rchRenderModelComponentName82_84() { return &___rchRenderModelComponentName82_84; }
	inline void set_rchRenderModelComponentName82_84(uint8_t value)
	{
		___rchRenderModelComponentName82_84 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName83_85() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName83_85)); }
	inline uint8_t get_rchRenderModelComponentName83_85() const { return ___rchRenderModelComponentName83_85; }
	inline uint8_t* get_address_of_rchRenderModelComponentName83_85() { return &___rchRenderModelComponentName83_85; }
	inline void set_rchRenderModelComponentName83_85(uint8_t value)
	{
		___rchRenderModelComponentName83_85 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName84_86() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName84_86)); }
	inline uint8_t get_rchRenderModelComponentName84_86() const { return ___rchRenderModelComponentName84_86; }
	inline uint8_t* get_address_of_rchRenderModelComponentName84_86() { return &___rchRenderModelComponentName84_86; }
	inline void set_rchRenderModelComponentName84_86(uint8_t value)
	{
		___rchRenderModelComponentName84_86 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName85_87() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName85_87)); }
	inline uint8_t get_rchRenderModelComponentName85_87() const { return ___rchRenderModelComponentName85_87; }
	inline uint8_t* get_address_of_rchRenderModelComponentName85_87() { return &___rchRenderModelComponentName85_87; }
	inline void set_rchRenderModelComponentName85_87(uint8_t value)
	{
		___rchRenderModelComponentName85_87 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName86_88() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName86_88)); }
	inline uint8_t get_rchRenderModelComponentName86_88() const { return ___rchRenderModelComponentName86_88; }
	inline uint8_t* get_address_of_rchRenderModelComponentName86_88() { return &___rchRenderModelComponentName86_88; }
	inline void set_rchRenderModelComponentName86_88(uint8_t value)
	{
		___rchRenderModelComponentName86_88 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName87_89() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName87_89)); }
	inline uint8_t get_rchRenderModelComponentName87_89() const { return ___rchRenderModelComponentName87_89; }
	inline uint8_t* get_address_of_rchRenderModelComponentName87_89() { return &___rchRenderModelComponentName87_89; }
	inline void set_rchRenderModelComponentName87_89(uint8_t value)
	{
		___rchRenderModelComponentName87_89 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName88_90() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName88_90)); }
	inline uint8_t get_rchRenderModelComponentName88_90() const { return ___rchRenderModelComponentName88_90; }
	inline uint8_t* get_address_of_rchRenderModelComponentName88_90() { return &___rchRenderModelComponentName88_90; }
	inline void set_rchRenderModelComponentName88_90(uint8_t value)
	{
		___rchRenderModelComponentName88_90 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName89_91() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName89_91)); }
	inline uint8_t get_rchRenderModelComponentName89_91() const { return ___rchRenderModelComponentName89_91; }
	inline uint8_t* get_address_of_rchRenderModelComponentName89_91() { return &___rchRenderModelComponentName89_91; }
	inline void set_rchRenderModelComponentName89_91(uint8_t value)
	{
		___rchRenderModelComponentName89_91 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName90_92() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName90_92)); }
	inline uint8_t get_rchRenderModelComponentName90_92() const { return ___rchRenderModelComponentName90_92; }
	inline uint8_t* get_address_of_rchRenderModelComponentName90_92() { return &___rchRenderModelComponentName90_92; }
	inline void set_rchRenderModelComponentName90_92(uint8_t value)
	{
		___rchRenderModelComponentName90_92 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName91_93() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName91_93)); }
	inline uint8_t get_rchRenderModelComponentName91_93() const { return ___rchRenderModelComponentName91_93; }
	inline uint8_t* get_address_of_rchRenderModelComponentName91_93() { return &___rchRenderModelComponentName91_93; }
	inline void set_rchRenderModelComponentName91_93(uint8_t value)
	{
		___rchRenderModelComponentName91_93 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName92_94() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName92_94)); }
	inline uint8_t get_rchRenderModelComponentName92_94() const { return ___rchRenderModelComponentName92_94; }
	inline uint8_t* get_address_of_rchRenderModelComponentName92_94() { return &___rchRenderModelComponentName92_94; }
	inline void set_rchRenderModelComponentName92_94(uint8_t value)
	{
		___rchRenderModelComponentName92_94 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName93_95() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName93_95)); }
	inline uint8_t get_rchRenderModelComponentName93_95() const { return ___rchRenderModelComponentName93_95; }
	inline uint8_t* get_address_of_rchRenderModelComponentName93_95() { return &___rchRenderModelComponentName93_95; }
	inline void set_rchRenderModelComponentName93_95(uint8_t value)
	{
		___rchRenderModelComponentName93_95 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName94_96() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName94_96)); }
	inline uint8_t get_rchRenderModelComponentName94_96() const { return ___rchRenderModelComponentName94_96; }
	inline uint8_t* get_address_of_rchRenderModelComponentName94_96() { return &___rchRenderModelComponentName94_96; }
	inline void set_rchRenderModelComponentName94_96(uint8_t value)
	{
		___rchRenderModelComponentName94_96 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName95_97() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName95_97)); }
	inline uint8_t get_rchRenderModelComponentName95_97() const { return ___rchRenderModelComponentName95_97; }
	inline uint8_t* get_address_of_rchRenderModelComponentName95_97() { return &___rchRenderModelComponentName95_97; }
	inline void set_rchRenderModelComponentName95_97(uint8_t value)
	{
		___rchRenderModelComponentName95_97 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName96_98() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName96_98)); }
	inline uint8_t get_rchRenderModelComponentName96_98() const { return ___rchRenderModelComponentName96_98; }
	inline uint8_t* get_address_of_rchRenderModelComponentName96_98() { return &___rchRenderModelComponentName96_98; }
	inline void set_rchRenderModelComponentName96_98(uint8_t value)
	{
		___rchRenderModelComponentName96_98 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName97_99() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName97_99)); }
	inline uint8_t get_rchRenderModelComponentName97_99() const { return ___rchRenderModelComponentName97_99; }
	inline uint8_t* get_address_of_rchRenderModelComponentName97_99() { return &___rchRenderModelComponentName97_99; }
	inline void set_rchRenderModelComponentName97_99(uint8_t value)
	{
		___rchRenderModelComponentName97_99 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName98_100() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName98_100)); }
	inline uint8_t get_rchRenderModelComponentName98_100() const { return ___rchRenderModelComponentName98_100; }
	inline uint8_t* get_address_of_rchRenderModelComponentName98_100() { return &___rchRenderModelComponentName98_100; }
	inline void set_rchRenderModelComponentName98_100(uint8_t value)
	{
		___rchRenderModelComponentName98_100 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName99_101() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName99_101)); }
	inline uint8_t get_rchRenderModelComponentName99_101() const { return ___rchRenderModelComponentName99_101; }
	inline uint8_t* get_address_of_rchRenderModelComponentName99_101() { return &___rchRenderModelComponentName99_101; }
	inline void set_rchRenderModelComponentName99_101(uint8_t value)
	{
		___rchRenderModelComponentName99_101 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName100_102() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName100_102)); }
	inline uint8_t get_rchRenderModelComponentName100_102() const { return ___rchRenderModelComponentName100_102; }
	inline uint8_t* get_address_of_rchRenderModelComponentName100_102() { return &___rchRenderModelComponentName100_102; }
	inline void set_rchRenderModelComponentName100_102(uint8_t value)
	{
		___rchRenderModelComponentName100_102 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName101_103() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName101_103)); }
	inline uint8_t get_rchRenderModelComponentName101_103() const { return ___rchRenderModelComponentName101_103; }
	inline uint8_t* get_address_of_rchRenderModelComponentName101_103() { return &___rchRenderModelComponentName101_103; }
	inline void set_rchRenderModelComponentName101_103(uint8_t value)
	{
		___rchRenderModelComponentName101_103 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName102_104() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName102_104)); }
	inline uint8_t get_rchRenderModelComponentName102_104() const { return ___rchRenderModelComponentName102_104; }
	inline uint8_t* get_address_of_rchRenderModelComponentName102_104() { return &___rchRenderModelComponentName102_104; }
	inline void set_rchRenderModelComponentName102_104(uint8_t value)
	{
		___rchRenderModelComponentName102_104 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName103_105() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName103_105)); }
	inline uint8_t get_rchRenderModelComponentName103_105() const { return ___rchRenderModelComponentName103_105; }
	inline uint8_t* get_address_of_rchRenderModelComponentName103_105() { return &___rchRenderModelComponentName103_105; }
	inline void set_rchRenderModelComponentName103_105(uint8_t value)
	{
		___rchRenderModelComponentName103_105 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName104_106() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName104_106)); }
	inline uint8_t get_rchRenderModelComponentName104_106() const { return ___rchRenderModelComponentName104_106; }
	inline uint8_t* get_address_of_rchRenderModelComponentName104_106() { return &___rchRenderModelComponentName104_106; }
	inline void set_rchRenderModelComponentName104_106(uint8_t value)
	{
		___rchRenderModelComponentName104_106 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName105_107() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName105_107)); }
	inline uint8_t get_rchRenderModelComponentName105_107() const { return ___rchRenderModelComponentName105_107; }
	inline uint8_t* get_address_of_rchRenderModelComponentName105_107() { return &___rchRenderModelComponentName105_107; }
	inline void set_rchRenderModelComponentName105_107(uint8_t value)
	{
		___rchRenderModelComponentName105_107 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName106_108() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName106_108)); }
	inline uint8_t get_rchRenderModelComponentName106_108() const { return ___rchRenderModelComponentName106_108; }
	inline uint8_t* get_address_of_rchRenderModelComponentName106_108() { return &___rchRenderModelComponentName106_108; }
	inline void set_rchRenderModelComponentName106_108(uint8_t value)
	{
		___rchRenderModelComponentName106_108 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName107_109() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName107_109)); }
	inline uint8_t get_rchRenderModelComponentName107_109() const { return ___rchRenderModelComponentName107_109; }
	inline uint8_t* get_address_of_rchRenderModelComponentName107_109() { return &___rchRenderModelComponentName107_109; }
	inline void set_rchRenderModelComponentName107_109(uint8_t value)
	{
		___rchRenderModelComponentName107_109 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName108_110() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName108_110)); }
	inline uint8_t get_rchRenderModelComponentName108_110() const { return ___rchRenderModelComponentName108_110; }
	inline uint8_t* get_address_of_rchRenderModelComponentName108_110() { return &___rchRenderModelComponentName108_110; }
	inline void set_rchRenderModelComponentName108_110(uint8_t value)
	{
		___rchRenderModelComponentName108_110 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName109_111() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName109_111)); }
	inline uint8_t get_rchRenderModelComponentName109_111() const { return ___rchRenderModelComponentName109_111; }
	inline uint8_t* get_address_of_rchRenderModelComponentName109_111() { return &___rchRenderModelComponentName109_111; }
	inline void set_rchRenderModelComponentName109_111(uint8_t value)
	{
		___rchRenderModelComponentName109_111 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName110_112() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName110_112)); }
	inline uint8_t get_rchRenderModelComponentName110_112() const { return ___rchRenderModelComponentName110_112; }
	inline uint8_t* get_address_of_rchRenderModelComponentName110_112() { return &___rchRenderModelComponentName110_112; }
	inline void set_rchRenderModelComponentName110_112(uint8_t value)
	{
		___rchRenderModelComponentName110_112 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName111_113() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName111_113)); }
	inline uint8_t get_rchRenderModelComponentName111_113() const { return ___rchRenderModelComponentName111_113; }
	inline uint8_t* get_address_of_rchRenderModelComponentName111_113() { return &___rchRenderModelComponentName111_113; }
	inline void set_rchRenderModelComponentName111_113(uint8_t value)
	{
		___rchRenderModelComponentName111_113 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName112_114() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName112_114)); }
	inline uint8_t get_rchRenderModelComponentName112_114() const { return ___rchRenderModelComponentName112_114; }
	inline uint8_t* get_address_of_rchRenderModelComponentName112_114() { return &___rchRenderModelComponentName112_114; }
	inline void set_rchRenderModelComponentName112_114(uint8_t value)
	{
		___rchRenderModelComponentName112_114 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName113_115() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName113_115)); }
	inline uint8_t get_rchRenderModelComponentName113_115() const { return ___rchRenderModelComponentName113_115; }
	inline uint8_t* get_address_of_rchRenderModelComponentName113_115() { return &___rchRenderModelComponentName113_115; }
	inline void set_rchRenderModelComponentName113_115(uint8_t value)
	{
		___rchRenderModelComponentName113_115 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName114_116() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName114_116)); }
	inline uint8_t get_rchRenderModelComponentName114_116() const { return ___rchRenderModelComponentName114_116; }
	inline uint8_t* get_address_of_rchRenderModelComponentName114_116() { return &___rchRenderModelComponentName114_116; }
	inline void set_rchRenderModelComponentName114_116(uint8_t value)
	{
		___rchRenderModelComponentName114_116 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName115_117() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName115_117)); }
	inline uint8_t get_rchRenderModelComponentName115_117() const { return ___rchRenderModelComponentName115_117; }
	inline uint8_t* get_address_of_rchRenderModelComponentName115_117() { return &___rchRenderModelComponentName115_117; }
	inline void set_rchRenderModelComponentName115_117(uint8_t value)
	{
		___rchRenderModelComponentName115_117 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName116_118() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName116_118)); }
	inline uint8_t get_rchRenderModelComponentName116_118() const { return ___rchRenderModelComponentName116_118; }
	inline uint8_t* get_address_of_rchRenderModelComponentName116_118() { return &___rchRenderModelComponentName116_118; }
	inline void set_rchRenderModelComponentName116_118(uint8_t value)
	{
		___rchRenderModelComponentName116_118 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName117_119() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName117_119)); }
	inline uint8_t get_rchRenderModelComponentName117_119() const { return ___rchRenderModelComponentName117_119; }
	inline uint8_t* get_address_of_rchRenderModelComponentName117_119() { return &___rchRenderModelComponentName117_119; }
	inline void set_rchRenderModelComponentName117_119(uint8_t value)
	{
		___rchRenderModelComponentName117_119 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName118_120() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName118_120)); }
	inline uint8_t get_rchRenderModelComponentName118_120() const { return ___rchRenderModelComponentName118_120; }
	inline uint8_t* get_address_of_rchRenderModelComponentName118_120() { return &___rchRenderModelComponentName118_120; }
	inline void set_rchRenderModelComponentName118_120(uint8_t value)
	{
		___rchRenderModelComponentName118_120 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName119_121() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName119_121)); }
	inline uint8_t get_rchRenderModelComponentName119_121() const { return ___rchRenderModelComponentName119_121; }
	inline uint8_t* get_address_of_rchRenderModelComponentName119_121() { return &___rchRenderModelComponentName119_121; }
	inline void set_rchRenderModelComponentName119_121(uint8_t value)
	{
		___rchRenderModelComponentName119_121 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName120_122() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName120_122)); }
	inline uint8_t get_rchRenderModelComponentName120_122() const { return ___rchRenderModelComponentName120_122; }
	inline uint8_t* get_address_of_rchRenderModelComponentName120_122() { return &___rchRenderModelComponentName120_122; }
	inline void set_rchRenderModelComponentName120_122(uint8_t value)
	{
		___rchRenderModelComponentName120_122 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName121_123() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName121_123)); }
	inline uint8_t get_rchRenderModelComponentName121_123() const { return ___rchRenderModelComponentName121_123; }
	inline uint8_t* get_address_of_rchRenderModelComponentName121_123() { return &___rchRenderModelComponentName121_123; }
	inline void set_rchRenderModelComponentName121_123(uint8_t value)
	{
		___rchRenderModelComponentName121_123 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName122_124() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName122_124)); }
	inline uint8_t get_rchRenderModelComponentName122_124() const { return ___rchRenderModelComponentName122_124; }
	inline uint8_t* get_address_of_rchRenderModelComponentName122_124() { return &___rchRenderModelComponentName122_124; }
	inline void set_rchRenderModelComponentName122_124(uint8_t value)
	{
		___rchRenderModelComponentName122_124 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName123_125() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName123_125)); }
	inline uint8_t get_rchRenderModelComponentName123_125() const { return ___rchRenderModelComponentName123_125; }
	inline uint8_t* get_address_of_rchRenderModelComponentName123_125() { return &___rchRenderModelComponentName123_125; }
	inline void set_rchRenderModelComponentName123_125(uint8_t value)
	{
		___rchRenderModelComponentName123_125 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName124_126() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName124_126)); }
	inline uint8_t get_rchRenderModelComponentName124_126() const { return ___rchRenderModelComponentName124_126; }
	inline uint8_t* get_address_of_rchRenderModelComponentName124_126() { return &___rchRenderModelComponentName124_126; }
	inline void set_rchRenderModelComponentName124_126(uint8_t value)
	{
		___rchRenderModelComponentName124_126 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName125_127() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName125_127)); }
	inline uint8_t get_rchRenderModelComponentName125_127() const { return ___rchRenderModelComponentName125_127; }
	inline uint8_t* get_address_of_rchRenderModelComponentName125_127() { return &___rchRenderModelComponentName125_127; }
	inline void set_rchRenderModelComponentName125_127(uint8_t value)
	{
		___rchRenderModelComponentName125_127 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName126_128() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName126_128)); }
	inline uint8_t get_rchRenderModelComponentName126_128() const { return ___rchRenderModelComponentName126_128; }
	inline uint8_t* get_address_of_rchRenderModelComponentName126_128() { return &___rchRenderModelComponentName126_128; }
	inline void set_rchRenderModelComponentName126_128(uint8_t value)
	{
		___rchRenderModelComponentName126_128 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName127_129() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName127_129)); }
	inline uint8_t get_rchRenderModelComponentName127_129() const { return ___rchRenderModelComponentName127_129; }
	inline uint8_t* get_address_of_rchRenderModelComponentName127_129() { return &___rchRenderModelComponentName127_129; }
	inline void set_rchRenderModelComponentName127_129(uint8_t value)
	{
		___rchRenderModelComponentName127_129 = value;
	}
};


// Valve.VR.InputSkeletalActionData_t
struct  InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 
{
public:
	// System.Boolean Valve.VR.InputSkeletalActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputSkeletalActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct  SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8, ___sourceMap_4)); }
	inline SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC, ___sourceMap_4)); }
	inline SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170, ___sourceMap_4)); }
	inline SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D, ___sourceMap_4)); }
	inline SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct  SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258, ___sourceMap_4)); }
	inline SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>
struct  SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902, ___sourceMap_4)); }
	inline SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct  SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D, ___sourceMap_4)); }
	inline SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_HistoryBuffer
struct  SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8  : public SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4
{
public:

public:
};


// Valve.VR.VREvent_ApplicationLaunch_t
struct  VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389 
{
public:
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::unArgsHandle
	uint32_t ___unArgsHandle_1;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_unArgsHandle_1() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389, ___unArgsHandle_1)); }
	inline uint32_t get_unArgsHandle_1() const { return ___unArgsHandle_1; }
	inline uint32_t* get_address_of_unArgsHandle_1() { return &___unArgsHandle_1; }
	inline void set_unArgsHandle_1(uint32_t value)
	{
		___unArgsHandle_1 = value;
	}
};


// Valve.VR.VREvent_Chaperone_t
struct  VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85 
{
public:
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nPreviousUniverse
	uint64_t ___m_nPreviousUniverse_0;
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nCurrentUniverse
	uint64_t ___m_nCurrentUniverse_1;

public:
	inline static int32_t get_offset_of_m_nPreviousUniverse_0() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85, ___m_nPreviousUniverse_0)); }
	inline uint64_t get_m_nPreviousUniverse_0() const { return ___m_nPreviousUniverse_0; }
	inline uint64_t* get_address_of_m_nPreviousUniverse_0() { return &___m_nPreviousUniverse_0; }
	inline void set_m_nPreviousUniverse_0(uint64_t value)
	{
		___m_nPreviousUniverse_0 = value;
	}

	inline static int32_t get_offset_of_m_nCurrentUniverse_1() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85, ___m_nCurrentUniverse_1)); }
	inline uint64_t get_m_nCurrentUniverse_1() const { return ___m_nCurrentUniverse_1; }
	inline uint64_t* get_address_of_m_nCurrentUniverse_1() { return &___m_nCurrentUniverse_1; }
	inline void set_m_nCurrentUniverse_1(uint64_t value)
	{
		___m_nCurrentUniverse_1 = value;
	}
};


// Valve.VR.VREvent_Controller_t
struct  VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05 
{
public:
	// System.UInt32 Valve.VR.VREvent_Controller_t::button
	uint32_t ___button_0;

public:
	inline static int32_t get_offset_of_button_0() { return static_cast<int32_t>(offsetof(VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05, ___button_0)); }
	inline uint32_t get_button_0() const { return ___button_0; }
	inline uint32_t* get_address_of_button_0() { return &___button_0; }
	inline void set_button_0(uint32_t value)
	{
		___button_0 = value;
	}
};


// Valve.VR.VREvent_EditingCameraSurface_t
struct  VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC 
{
public:
	// System.UInt64 Valve.VR.VREvent_EditingCameraSurface_t::overlayHandle
	uint64_t ___overlayHandle_0;
	// System.UInt32 Valve.VR.VREvent_EditingCameraSurface_t::nVisualMode
	uint32_t ___nVisualMode_1;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}

	inline static int32_t get_offset_of_nVisualMode_1() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC, ___nVisualMode_1)); }
	inline uint32_t get_nVisualMode_1() const { return ___nVisualMode_1; }
	inline uint32_t* get_address_of_nVisualMode_1() { return &___nVisualMode_1; }
	inline void set_nVisualMode_1(uint32_t value)
	{
		___nVisualMode_1 = value;
	}
};


// Valve.VR.VREvent_HapticVibration_t
struct  VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F 
{
public:
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::containerHandle
	uint64_t ___containerHandle_0;
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::componentHandle
	uint64_t ___componentHandle_1;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fDurationSeconds
	float ___fDurationSeconds_2;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fFrequency
	float ___fFrequency_3;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fAmplitude
	float ___fAmplitude_4;

public:
	inline static int32_t get_offset_of_containerHandle_0() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___containerHandle_0)); }
	inline uint64_t get_containerHandle_0() const { return ___containerHandle_0; }
	inline uint64_t* get_address_of_containerHandle_0() { return &___containerHandle_0; }
	inline void set_containerHandle_0(uint64_t value)
	{
		___containerHandle_0 = value;
	}

	inline static int32_t get_offset_of_componentHandle_1() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___componentHandle_1)); }
	inline uint64_t get_componentHandle_1() const { return ___componentHandle_1; }
	inline uint64_t* get_address_of_componentHandle_1() { return &___componentHandle_1; }
	inline void set_componentHandle_1(uint64_t value)
	{
		___componentHandle_1 = value;
	}

	inline static int32_t get_offset_of_fDurationSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fDurationSeconds_2)); }
	inline float get_fDurationSeconds_2() const { return ___fDurationSeconds_2; }
	inline float* get_address_of_fDurationSeconds_2() { return &___fDurationSeconds_2; }
	inline void set_fDurationSeconds_2(float value)
	{
		___fDurationSeconds_2 = value;
	}

	inline static int32_t get_offset_of_fFrequency_3() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fFrequency_3)); }
	inline float get_fFrequency_3() const { return ___fFrequency_3; }
	inline float* get_address_of_fFrequency_3() { return &___fFrequency_3; }
	inline void set_fFrequency_3(float value)
	{
		___fFrequency_3 = value;
	}

	inline static int32_t get_offset_of_fAmplitude_4() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fAmplitude_4)); }
	inline float get_fAmplitude_4() const { return ___fAmplitude_4; }
	inline float* get_address_of_fAmplitude_4() { return &___fAmplitude_4; }
	inline void set_fAmplitude_4(float value)
	{
		___fAmplitude_4 = value;
	}
};


// Valve.VR.VREvent_InputActionManifestLoad_t
struct  VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76 
{
public:
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathAppKey
	uint64_t ___pathAppKey_0;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathMessage
	uint64_t ___pathMessage_1;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathMessageParam
	uint64_t ___pathMessageParam_2;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathManifestPath
	uint64_t ___pathManifestPath_3;

public:
	inline static int32_t get_offset_of_pathAppKey_0() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathAppKey_0)); }
	inline uint64_t get_pathAppKey_0() const { return ___pathAppKey_0; }
	inline uint64_t* get_address_of_pathAppKey_0() { return &___pathAppKey_0; }
	inline void set_pathAppKey_0(uint64_t value)
	{
		___pathAppKey_0 = value;
	}

	inline static int32_t get_offset_of_pathMessage_1() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathMessage_1)); }
	inline uint64_t get_pathMessage_1() const { return ___pathMessage_1; }
	inline uint64_t* get_address_of_pathMessage_1() { return &___pathMessage_1; }
	inline void set_pathMessage_1(uint64_t value)
	{
		___pathMessage_1 = value;
	}

	inline static int32_t get_offset_of_pathMessageParam_2() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathMessageParam_2)); }
	inline uint64_t get_pathMessageParam_2() const { return ___pathMessageParam_2; }
	inline uint64_t* get_address_of_pathMessageParam_2() { return &___pathMessageParam_2; }
	inline void set_pathMessageParam_2(uint64_t value)
	{
		___pathMessageParam_2 = value;
	}

	inline static int32_t get_offset_of_pathManifestPath_3() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathManifestPath_3)); }
	inline uint64_t get_pathManifestPath_3() const { return ___pathManifestPath_3; }
	inline uint64_t* get_address_of_pathManifestPath_3() { return &___pathManifestPath_3; }
	inline void set_pathManifestPath_3(uint64_t value)
	{
		___pathManifestPath_3 = value;
	}
};


// Valve.VR.VREvent_InputBindingLoad_t
struct  VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED 
{
public:
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::ulAppContainer
	uint64_t ___ulAppContainer_0;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathMessage
	uint64_t ___pathMessage_1;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathUrl
	uint64_t ___pathUrl_2;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathControllerType
	uint64_t ___pathControllerType_3;

public:
	inline static int32_t get_offset_of_ulAppContainer_0() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___ulAppContainer_0)); }
	inline uint64_t get_ulAppContainer_0() const { return ___ulAppContainer_0; }
	inline uint64_t* get_address_of_ulAppContainer_0() { return &___ulAppContainer_0; }
	inline void set_ulAppContainer_0(uint64_t value)
	{
		___ulAppContainer_0 = value;
	}

	inline static int32_t get_offset_of_pathMessage_1() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathMessage_1)); }
	inline uint64_t get_pathMessage_1() const { return ___pathMessage_1; }
	inline uint64_t* get_address_of_pathMessage_1() { return &___pathMessage_1; }
	inline void set_pathMessage_1(uint64_t value)
	{
		___pathMessage_1 = value;
	}

	inline static int32_t get_offset_of_pathUrl_2() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathUrl_2)); }
	inline uint64_t get_pathUrl_2() const { return ___pathUrl_2; }
	inline uint64_t* get_address_of_pathUrl_2() { return &___pathUrl_2; }
	inline void set_pathUrl_2(uint64_t value)
	{
		___pathUrl_2 = value;
	}

	inline static int32_t get_offset_of_pathControllerType_3() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathControllerType_3)); }
	inline uint64_t get_pathControllerType_3() const { return ___pathControllerType_3; }
	inline uint64_t* get_address_of_pathControllerType_3() { return &___pathControllerType_3; }
	inline void set_pathControllerType_3(uint64_t value)
	{
		___pathControllerType_3 = value;
	}
};


// Valve.VR.VREvent_Ipd_t
struct  VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400 
{
public:
	// System.Single Valve.VR.VREvent_Ipd_t::ipdMeters
	float ___ipdMeters_0;

public:
	inline static int32_t get_offset_of_ipdMeters_0() { return static_cast<int32_t>(offsetof(VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400, ___ipdMeters_0)); }
	inline float get_ipdMeters_0() const { return ___ipdMeters_0; }
	inline float* get_address_of_ipdMeters_0() { return &___ipdMeters_0; }
	inline void set_ipdMeters_0(float value)
	{
		___ipdMeters_0 = value;
	}
};


// Valve.VR.VREvent_Keyboard_t
struct  VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297 
{
public:
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput0
	uint8_t ___cNewInput0_0;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput1
	uint8_t ___cNewInput1_1;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput2
	uint8_t ___cNewInput2_2;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput3
	uint8_t ___cNewInput3_3;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput4
	uint8_t ___cNewInput4_4;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput5
	uint8_t ___cNewInput5_5;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput6
	uint8_t ___cNewInput6_6;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput7
	uint8_t ___cNewInput7_7;
	// System.UInt64 Valve.VR.VREvent_Keyboard_t::uUserValue
	uint64_t ___uUserValue_8;

public:
	inline static int32_t get_offset_of_cNewInput0_0() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput0_0)); }
	inline uint8_t get_cNewInput0_0() const { return ___cNewInput0_0; }
	inline uint8_t* get_address_of_cNewInput0_0() { return &___cNewInput0_0; }
	inline void set_cNewInput0_0(uint8_t value)
	{
		___cNewInput0_0 = value;
	}

	inline static int32_t get_offset_of_cNewInput1_1() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput1_1)); }
	inline uint8_t get_cNewInput1_1() const { return ___cNewInput1_1; }
	inline uint8_t* get_address_of_cNewInput1_1() { return &___cNewInput1_1; }
	inline void set_cNewInput1_1(uint8_t value)
	{
		___cNewInput1_1 = value;
	}

	inline static int32_t get_offset_of_cNewInput2_2() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput2_2)); }
	inline uint8_t get_cNewInput2_2() const { return ___cNewInput2_2; }
	inline uint8_t* get_address_of_cNewInput2_2() { return &___cNewInput2_2; }
	inline void set_cNewInput2_2(uint8_t value)
	{
		___cNewInput2_2 = value;
	}

	inline static int32_t get_offset_of_cNewInput3_3() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput3_3)); }
	inline uint8_t get_cNewInput3_3() const { return ___cNewInput3_3; }
	inline uint8_t* get_address_of_cNewInput3_3() { return &___cNewInput3_3; }
	inline void set_cNewInput3_3(uint8_t value)
	{
		___cNewInput3_3 = value;
	}

	inline static int32_t get_offset_of_cNewInput4_4() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput4_4)); }
	inline uint8_t get_cNewInput4_4() const { return ___cNewInput4_4; }
	inline uint8_t* get_address_of_cNewInput4_4() { return &___cNewInput4_4; }
	inline void set_cNewInput4_4(uint8_t value)
	{
		___cNewInput4_4 = value;
	}

	inline static int32_t get_offset_of_cNewInput5_5() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput5_5)); }
	inline uint8_t get_cNewInput5_5() const { return ___cNewInput5_5; }
	inline uint8_t* get_address_of_cNewInput5_5() { return &___cNewInput5_5; }
	inline void set_cNewInput5_5(uint8_t value)
	{
		___cNewInput5_5 = value;
	}

	inline static int32_t get_offset_of_cNewInput6_6() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput6_6)); }
	inline uint8_t get_cNewInput6_6() const { return ___cNewInput6_6; }
	inline uint8_t* get_address_of_cNewInput6_6() { return &___cNewInput6_6; }
	inline void set_cNewInput6_6(uint8_t value)
	{
		___cNewInput6_6 = value;
	}

	inline static int32_t get_offset_of_cNewInput7_7() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput7_7)); }
	inline uint8_t get_cNewInput7_7() const { return ___cNewInput7_7; }
	inline uint8_t* get_address_of_cNewInput7_7() { return &___cNewInput7_7; }
	inline void set_cNewInput7_7(uint8_t value)
	{
		___cNewInput7_7 = value;
	}

	inline static int32_t get_offset_of_uUserValue_8() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___uUserValue_8)); }
	inline uint64_t get_uUserValue_8() const { return ___uUserValue_8; }
	inline uint64_t* get_address_of_uUserValue_8() { return &___uUserValue_8; }
	inline void set_uUserValue_8(uint64_t value)
	{
		___uUserValue_8 = value;
	}
};


// Valve.VR.VREvent_MessageOverlay_t
struct  VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1 
{
public:
	// System.UInt32 Valve.VR.VREvent_MessageOverlay_t::unVRMessageOverlayResponse
	uint32_t ___unVRMessageOverlayResponse_0;

public:
	inline static int32_t get_offset_of_unVRMessageOverlayResponse_0() { return static_cast<int32_t>(offsetof(VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1, ___unVRMessageOverlayResponse_0)); }
	inline uint32_t get_unVRMessageOverlayResponse_0() const { return ___unVRMessageOverlayResponse_0; }
	inline uint32_t* get_address_of_unVRMessageOverlayResponse_0() { return &___unVRMessageOverlayResponse_0; }
	inline void set_unVRMessageOverlayResponse_0(uint32_t value)
	{
		___unVRMessageOverlayResponse_0 = value;
	}
};


// Valve.VR.VREvent_Mouse_t
struct  VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B 
{
public:
	// System.Single Valve.VR.VREvent_Mouse_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_Mouse_t::y
	float ___y_1;
	// System.UInt32 Valve.VR.VREvent_Mouse_t::button
	uint32_t ___button_2;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_button_2() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___button_2)); }
	inline uint32_t get_button_2() const { return ___button_2; }
	inline uint32_t* get_address_of_button_2() { return &___button_2; }
	inline void set_button_2(uint32_t value)
	{
		___button_2 = value;
	}
};


// Valve.VR.VREvent_Notification_t
struct  VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB 
{
public:
	// System.UInt64 Valve.VR.VREvent_Notification_t::ulUserValue
	uint64_t ___ulUserValue_0;
	// System.UInt32 Valve.VR.VREvent_Notification_t::notificationId
	uint32_t ___notificationId_1;

public:
	inline static int32_t get_offset_of_ulUserValue_0() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB, ___ulUserValue_0)); }
	inline uint64_t get_ulUserValue_0() const { return ___ulUserValue_0; }
	inline uint64_t* get_address_of_ulUserValue_0() { return &___ulUserValue_0; }
	inline void set_ulUserValue_0(uint64_t value)
	{
		___ulUserValue_0 = value;
	}

	inline static int32_t get_offset_of_notificationId_1() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB, ___notificationId_1)); }
	inline uint32_t get_notificationId_1() const { return ___notificationId_1; }
	inline uint32_t* get_address_of_notificationId_1() { return &___notificationId_1; }
	inline void set_notificationId_1(uint32_t value)
	{
		___notificationId_1 = value;
	}
};


// Valve.VR.VREvent_Overlay_t
struct  VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C 
{
public:
	// System.UInt64 Valve.VR.VREvent_Overlay_t::overlayHandle
	uint64_t ___overlayHandle_0;
	// System.UInt64 Valve.VR.VREvent_Overlay_t::devicePath
	uint64_t ___devicePath_1;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}

	inline static int32_t get_offset_of_devicePath_1() { return static_cast<int32_t>(offsetof(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C, ___devicePath_1)); }
	inline uint64_t get_devicePath_1() const { return ___devicePath_1; }
	inline uint64_t* get_address_of_devicePath_1() { return &___devicePath_1; }
	inline void set_devicePath_1(uint64_t value)
	{
		___devicePath_1 = value;
	}
};


// Valve.VR.VREvent_PerformanceTest_t
struct  VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA 
{
public:
	// System.UInt32 Valve.VR.VREvent_PerformanceTest_t::m_nFidelityLevel
	uint32_t ___m_nFidelityLevel_0;

public:
	inline static int32_t get_offset_of_m_nFidelityLevel_0() { return static_cast<int32_t>(offsetof(VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA, ___m_nFidelityLevel_0)); }
	inline uint32_t get_m_nFidelityLevel_0() const { return ___m_nFidelityLevel_0; }
	inline uint32_t* get_address_of_m_nFidelityLevel_0() { return &___m_nFidelityLevel_0; }
	inline void set_m_nFidelityLevel_0(uint32_t value)
	{
		___m_nFidelityLevel_0 = value;
	}
};


// Valve.VR.VREvent_Process_t
struct  VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E 
{
public:
	// System.UInt32 Valve.VR.VREvent_Process_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_Process_t::oldPid
	uint32_t ___oldPid_1;
	// System.Boolean Valve.VR.VREvent_Process_t::bForced
	bool ___bForced_2;
	// System.Boolean Valve.VR.VREvent_Process_t::bConnectionLost
	bool ___bConnectionLost_3;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_oldPid_1() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___oldPid_1)); }
	inline uint32_t get_oldPid_1() const { return ___oldPid_1; }
	inline uint32_t* get_address_of_oldPid_1() { return &___oldPid_1; }
	inline void set_oldPid_1(uint32_t value)
	{
		___oldPid_1 = value;
	}

	inline static int32_t get_offset_of_bForced_2() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___bForced_2)); }
	inline bool get_bForced_2() const { return ___bForced_2; }
	inline bool* get_address_of_bForced_2() { return &___bForced_2; }
	inline void set_bForced_2(bool value)
	{
		___bForced_2 = value;
	}

	inline static int32_t get_offset_of_bConnectionLost_3() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___bConnectionLost_3)); }
	inline bool get_bConnectionLost_3() const { return ___bConnectionLost_3; }
	inline bool* get_address_of_bConnectionLost_3() { return &___bConnectionLost_3; }
	inline void set_bConnectionLost_3(bool value)
	{
		___bConnectionLost_3 = value;
	}
};


// Valve.VR.VREvent_ProgressUpdate_t
struct  VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE 
{
public:
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::ulApplicationPropertyContainer
	uint64_t ___ulApplicationPropertyContainer_0;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathDevice
	uint64_t ___pathDevice_1;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathInputSource
	uint64_t ___pathInputSource_2;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathProgressAction
	uint64_t ___pathProgressAction_3;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathIcon
	uint64_t ___pathIcon_4;
	// System.Single Valve.VR.VREvent_ProgressUpdate_t::fProgress
	float ___fProgress_5;

public:
	inline static int32_t get_offset_of_ulApplicationPropertyContainer_0() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___ulApplicationPropertyContainer_0)); }
	inline uint64_t get_ulApplicationPropertyContainer_0() const { return ___ulApplicationPropertyContainer_0; }
	inline uint64_t* get_address_of_ulApplicationPropertyContainer_0() { return &___ulApplicationPropertyContainer_0; }
	inline void set_ulApplicationPropertyContainer_0(uint64_t value)
	{
		___ulApplicationPropertyContainer_0 = value;
	}

	inline static int32_t get_offset_of_pathDevice_1() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathDevice_1)); }
	inline uint64_t get_pathDevice_1() const { return ___pathDevice_1; }
	inline uint64_t* get_address_of_pathDevice_1() { return &___pathDevice_1; }
	inline void set_pathDevice_1(uint64_t value)
	{
		___pathDevice_1 = value;
	}

	inline static int32_t get_offset_of_pathInputSource_2() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathInputSource_2)); }
	inline uint64_t get_pathInputSource_2() const { return ___pathInputSource_2; }
	inline uint64_t* get_address_of_pathInputSource_2() { return &___pathInputSource_2; }
	inline void set_pathInputSource_2(uint64_t value)
	{
		___pathInputSource_2 = value;
	}

	inline static int32_t get_offset_of_pathProgressAction_3() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathProgressAction_3)); }
	inline uint64_t get_pathProgressAction_3() const { return ___pathProgressAction_3; }
	inline uint64_t* get_address_of_pathProgressAction_3() { return &___pathProgressAction_3; }
	inline void set_pathProgressAction_3(uint64_t value)
	{
		___pathProgressAction_3 = value;
	}

	inline static int32_t get_offset_of_pathIcon_4() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathIcon_4)); }
	inline uint64_t get_pathIcon_4() const { return ___pathIcon_4; }
	inline uint64_t* get_address_of_pathIcon_4() { return &___pathIcon_4; }
	inline void set_pathIcon_4(uint64_t value)
	{
		___pathIcon_4 = value;
	}

	inline static int32_t get_offset_of_fProgress_5() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___fProgress_5)); }
	inline float get_fProgress_5() const { return ___fProgress_5; }
	inline float* get_address_of_fProgress_5() { return &___fProgress_5; }
	inline void set_fProgress_5(float value)
	{
		___fProgress_5 = value;
	}
};


// Valve.VR.VREvent_Reserved_t
struct  VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3 
{
public:
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved0
	uint64_t ___reserved0_0;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved1
	uint64_t ___reserved1_1;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved2
	uint64_t ___reserved2_2;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved3
	uint64_t ___reserved3_3;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved4
	uint64_t ___reserved4_4;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved5
	uint64_t ___reserved5_5;

public:
	inline static int32_t get_offset_of_reserved0_0() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved0_0)); }
	inline uint64_t get_reserved0_0() const { return ___reserved0_0; }
	inline uint64_t* get_address_of_reserved0_0() { return &___reserved0_0; }
	inline void set_reserved0_0(uint64_t value)
	{
		___reserved0_0 = value;
	}

	inline static int32_t get_offset_of_reserved1_1() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved1_1)); }
	inline uint64_t get_reserved1_1() const { return ___reserved1_1; }
	inline uint64_t* get_address_of_reserved1_1() { return &___reserved1_1; }
	inline void set_reserved1_1(uint64_t value)
	{
		___reserved1_1 = value;
	}

	inline static int32_t get_offset_of_reserved2_2() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved2_2)); }
	inline uint64_t get_reserved2_2() const { return ___reserved2_2; }
	inline uint64_t* get_address_of_reserved2_2() { return &___reserved2_2; }
	inline void set_reserved2_2(uint64_t value)
	{
		___reserved2_2 = value;
	}

	inline static int32_t get_offset_of_reserved3_3() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved3_3)); }
	inline uint64_t get_reserved3_3() const { return ___reserved3_3; }
	inline uint64_t* get_address_of_reserved3_3() { return &___reserved3_3; }
	inline void set_reserved3_3(uint64_t value)
	{
		___reserved3_3 = value;
	}

	inline static int32_t get_offset_of_reserved4_4() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved4_4)); }
	inline uint64_t get_reserved4_4() const { return ___reserved4_4; }
	inline uint64_t* get_address_of_reserved4_4() { return &___reserved4_4; }
	inline void set_reserved4_4(uint64_t value)
	{
		___reserved4_4 = value;
	}

	inline static int32_t get_offset_of_reserved5_5() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved5_5)); }
	inline uint64_t get_reserved5_5() const { return ___reserved5_5; }
	inline uint64_t* get_address_of_reserved5_5() { return &___reserved5_5; }
	inline void set_reserved5_5(uint64_t value)
	{
		___reserved5_5 = value;
	}
};


// Valve.VR.VREvent_ScreenshotProgress_t
struct  VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED 
{
public:
	// System.Single Valve.VR.VREvent_ScreenshotProgress_t::progress
	float ___progress_0;

public:
	inline static int32_t get_offset_of_progress_0() { return static_cast<int32_t>(offsetof(VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED, ___progress_0)); }
	inline float get_progress_0() const { return ___progress_0; }
	inline float* get_address_of_progress_0() { return &___progress_0; }
	inline void set_progress_0(float value)
	{
		___progress_0 = value;
	}
};


// Valve.VR.VREvent_Screenshot_t
struct  VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97 
{
public:
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::handle
	uint32_t ___handle_0;
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::type
	uint32_t ___type_1;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97, ___handle_0)); }
	inline uint32_t get_handle_0() const { return ___handle_0; }
	inline uint32_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(uint32_t value)
	{
		___handle_0 = value;
	}

	inline static int32_t get_offset_of_type_1() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97, ___type_1)); }
	inline uint32_t get_type_1() const { return ___type_1; }
	inline uint32_t* get_address_of_type_1() { return &___type_1; }
	inline void set_type_1(uint32_t value)
	{
		___type_1 = value;
	}
};


// Valve.VR.VREvent_Scroll_t
struct  VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160 
{
public:
	// System.Single Valve.VR.VREvent_Scroll_t::xdelta
	float ___xdelta_0;
	// System.Single Valve.VR.VREvent_Scroll_t::ydelta
	float ___ydelta_1;
	// System.UInt32 Valve.VR.VREvent_Scroll_t::unused
	uint32_t ___unused_2;
	// System.Single Valve.VR.VREvent_Scroll_t::viewportscale
	float ___viewportscale_3;

public:
	inline static int32_t get_offset_of_xdelta_0() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___xdelta_0)); }
	inline float get_xdelta_0() const { return ___xdelta_0; }
	inline float* get_address_of_xdelta_0() { return &___xdelta_0; }
	inline void set_xdelta_0(float value)
	{
		___xdelta_0 = value;
	}

	inline static int32_t get_offset_of_ydelta_1() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___ydelta_1)); }
	inline float get_ydelta_1() const { return ___ydelta_1; }
	inline float* get_address_of_ydelta_1() { return &___ydelta_1; }
	inline void set_ydelta_1(float value)
	{
		___ydelta_1 = value;
	}

	inline static int32_t get_offset_of_unused_2() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___unused_2)); }
	inline uint32_t get_unused_2() const { return ___unused_2; }
	inline uint32_t* get_address_of_unused_2() { return &___unused_2; }
	inline void set_unused_2(uint32_t value)
	{
		___unused_2 = value;
	}

	inline static int32_t get_offset_of_viewportscale_3() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___viewportscale_3)); }
	inline float get_viewportscale_3() const { return ___viewportscale_3; }
	inline float* get_address_of_viewportscale_3() { return &___viewportscale_3; }
	inline void set_viewportscale_3(float value)
	{
		___viewportscale_3 = value;
	}
};


// Valve.VR.VREvent_SeatedZeroPoseReset_t
struct  VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323 
{
public:
	// System.Boolean Valve.VR.VREvent_SeatedZeroPoseReset_t::bResetBySystemMenu
	bool ___bResetBySystemMenu_0;

public:
	inline static int32_t get_offset_of_bResetBySystemMenu_0() { return static_cast<int32_t>(offsetof(VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323, ___bResetBySystemMenu_0)); }
	inline bool get_bResetBySystemMenu_0() const { return ___bResetBySystemMenu_0; }
	inline bool* get_address_of_bResetBySystemMenu_0() { return &___bResetBySystemMenu_0; }
	inline void set_bResetBySystemMenu_0(bool value)
	{
		___bResetBySystemMenu_0 = value;
	}
};


// Valve.VR.VREvent_ShowDevTools_t
struct  VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6 
{
public:
	// System.Int32 Valve.VR.VREvent_ShowDevTools_t::nBrowserIdentifier
	int32_t ___nBrowserIdentifier_0;

public:
	inline static int32_t get_offset_of_nBrowserIdentifier_0() { return static_cast<int32_t>(offsetof(VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6, ___nBrowserIdentifier_0)); }
	inline int32_t get_nBrowserIdentifier_0() const { return ___nBrowserIdentifier_0; }
	inline int32_t* get_address_of_nBrowserIdentifier_0() { return &___nBrowserIdentifier_0; }
	inline void set_nBrowserIdentifier_0(int32_t value)
	{
		___nBrowserIdentifier_0 = value;
	}
};


// Valve.VR.VREvent_SpatialAnchor_t
struct  VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473 
{
public:
	// System.UInt32 Valve.VR.VREvent_SpatialAnchor_t::unHandle
	uint32_t ___unHandle_0;

public:
	inline static int32_t get_offset_of_unHandle_0() { return static_cast<int32_t>(offsetof(VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473, ___unHandle_0)); }
	inline uint32_t get_unHandle_0() const { return ___unHandle_0; }
	inline uint32_t* get_address_of_unHandle_0() { return &___unHandle_0; }
	inline void set_unHandle_0(uint32_t value)
	{
		___unHandle_0 = value;
	}
};


// Valve.VR.VREvent_Status_t
struct  VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB 
{
public:
	// System.UInt32 Valve.VR.VREvent_Status_t::statusState
	uint32_t ___statusState_0;

public:
	inline static int32_t get_offset_of_statusState_0() { return static_cast<int32_t>(offsetof(VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB, ___statusState_0)); }
	inline uint32_t get_statusState_0() const { return ___statusState_0; }
	inline uint32_t* get_address_of_statusState_0() { return &___statusState_0; }
	inline void set_statusState_0(uint32_t value)
	{
		___statusState_0 = value;
	}
};


// Valve.VR.VREvent_TouchPadMove_t
struct  VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D 
{
public:
	// System.Boolean Valve.VR.VREvent_TouchPadMove_t::bFingerDown
	bool ___bFingerDown_0;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::flSecondsFingerDown
	float ___flSecondsFingerDown_1;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXFirst
	float ___fValueXFirst_2;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYFirst
	float ___fValueYFirst_3;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXRaw
	float ___fValueXRaw_4;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYRaw
	float ___fValueYRaw_5;

public:
	inline static int32_t get_offset_of_bFingerDown_0() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___bFingerDown_0)); }
	inline bool get_bFingerDown_0() const { return ___bFingerDown_0; }
	inline bool* get_address_of_bFingerDown_0() { return &___bFingerDown_0; }
	inline void set_bFingerDown_0(bool value)
	{
		___bFingerDown_0 = value;
	}

	inline static int32_t get_offset_of_flSecondsFingerDown_1() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___flSecondsFingerDown_1)); }
	inline float get_flSecondsFingerDown_1() const { return ___flSecondsFingerDown_1; }
	inline float* get_address_of_flSecondsFingerDown_1() { return &___flSecondsFingerDown_1; }
	inline void set_flSecondsFingerDown_1(float value)
	{
		___flSecondsFingerDown_1 = value;
	}

	inline static int32_t get_offset_of_fValueXFirst_2() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueXFirst_2)); }
	inline float get_fValueXFirst_2() const { return ___fValueXFirst_2; }
	inline float* get_address_of_fValueXFirst_2() { return &___fValueXFirst_2; }
	inline void set_fValueXFirst_2(float value)
	{
		___fValueXFirst_2 = value;
	}

	inline static int32_t get_offset_of_fValueYFirst_3() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueYFirst_3)); }
	inline float get_fValueYFirst_3() const { return ___fValueYFirst_3; }
	inline float* get_address_of_fValueYFirst_3() { return &___fValueYFirst_3; }
	inline void set_fValueYFirst_3(float value)
	{
		___fValueYFirst_3 = value;
	}

	inline static int32_t get_offset_of_fValueXRaw_4() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueXRaw_4)); }
	inline float get_fValueXRaw_4() const { return ___fValueXRaw_4; }
	inline float* get_address_of_fValueXRaw_4() { return &___fValueXRaw_4; }
	inline void set_fValueXRaw_4(float value)
	{
		___fValueXRaw_4 = value;
	}

	inline static int32_t get_offset_of_fValueYRaw_5() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueYRaw_5)); }
	inline float get_fValueYRaw_5() const { return ___fValueYRaw_5; }
	inline float* get_address_of_fValueYRaw_5() { return &___fValueYRaw_5; }
	inline void set_fValueYRaw_5(float value)
	{
		___fValueYRaw_5 = value;
	}
};


// Valve.VR.VREvent_WebConsole_t
struct  VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75 
{
public:
	// System.UInt64 Valve.VR.VREvent_WebConsole_t::webConsoleHandle
	uint64_t ___webConsoleHandle_0;

public:
	inline static int32_t get_offset_of_webConsoleHandle_0() { return static_cast<int32_t>(offsetof(VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75, ___webConsoleHandle_0)); }
	inline uint64_t get_webConsoleHandle_0() const { return ___webConsoleHandle_0; }
	inline uint64_t* get_address_of_webConsoleHandle_0() { return &___webConsoleHandle_0; }
	inline void set_webConsoleHandle_0(uint64_t value)
	{
		___webConsoleHandle_0 = value;
	}
};


// Valve.VR.VRSkeletalSummaryData_t
struct  VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 
{
public:
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl0
	float ___flFingerCurl0_0;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl1
	float ___flFingerCurl1_1;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl2
	float ___flFingerCurl2_2;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl3
	float ___flFingerCurl3_3;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl4
	float ___flFingerCurl4_4;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay0
	float ___flFingerSplay0_5;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay1
	float ___flFingerSplay1_6;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay2
	float ___flFingerSplay2_7;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay3
	float ___flFingerSplay3_8;

public:
	inline static int32_t get_offset_of_flFingerCurl0_0() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerCurl0_0)); }
	inline float get_flFingerCurl0_0() const { return ___flFingerCurl0_0; }
	inline float* get_address_of_flFingerCurl0_0() { return &___flFingerCurl0_0; }
	inline void set_flFingerCurl0_0(float value)
	{
		___flFingerCurl0_0 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl1_1() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerCurl1_1)); }
	inline float get_flFingerCurl1_1() const { return ___flFingerCurl1_1; }
	inline float* get_address_of_flFingerCurl1_1() { return &___flFingerCurl1_1; }
	inline void set_flFingerCurl1_1(float value)
	{
		___flFingerCurl1_1 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl2_2() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerCurl2_2)); }
	inline float get_flFingerCurl2_2() const { return ___flFingerCurl2_2; }
	inline float* get_address_of_flFingerCurl2_2() { return &___flFingerCurl2_2; }
	inline void set_flFingerCurl2_2(float value)
	{
		___flFingerCurl2_2 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl3_3() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerCurl3_3)); }
	inline float get_flFingerCurl3_3() const { return ___flFingerCurl3_3; }
	inline float* get_address_of_flFingerCurl3_3() { return &___flFingerCurl3_3; }
	inline void set_flFingerCurl3_3(float value)
	{
		___flFingerCurl3_3 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl4_4() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerCurl4_4)); }
	inline float get_flFingerCurl4_4() const { return ___flFingerCurl4_4; }
	inline float* get_address_of_flFingerCurl4_4() { return &___flFingerCurl4_4; }
	inline void set_flFingerCurl4_4(float value)
	{
		___flFingerCurl4_4 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay0_5() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerSplay0_5)); }
	inline float get_flFingerSplay0_5() const { return ___flFingerSplay0_5; }
	inline float* get_address_of_flFingerSplay0_5() { return &___flFingerSplay0_5; }
	inline void set_flFingerSplay0_5(float value)
	{
		___flFingerSplay0_5 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay1_6() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerSplay1_6)); }
	inline float get_flFingerSplay1_6() const { return ___flFingerSplay1_6; }
	inline float* get_address_of_flFingerSplay1_6() { return &___flFingerSplay1_6; }
	inline void set_flFingerSplay1_6(float value)
	{
		___flFingerSplay1_6 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay2_7() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerSplay2_7)); }
	inline float get_flFingerSplay2_7() const { return ___flFingerSplay2_7; }
	inline float* get_address_of_flFingerSplay2_7() { return &___flFingerSplay2_7; }
	inline void set_flFingerSplay2_7(float value)
	{
		___flFingerSplay2_7 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay3_8() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerSplay3_8)); }
	inline float get_flFingerSplay3_8() const { return ___flFingerSplay3_8; }
	inline float* get_address_of_flFingerSplay3_8() { return &___flFingerSplay3_8; }
	inline void set_flFingerSplay3_8(float value)
	{
		___flFingerSplay3_8 = value;
	}
};


// SteamVR_Utils_RigidTransform
struct  RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 
{
public:
	// UnityEngine.Vector3 SteamVR_Utils_RigidTransform::pos
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos_0;
	// UnityEngine.Quaternion SteamVR_Utils_RigidTransform::rot
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rot_1;

public:
	inline static int32_t get_offset_of_pos_0() { return static_cast<int32_t>(offsetof(RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905, ___pos_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_pos_0() const { return ___pos_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_pos_0() { return &___pos_0; }
	inline void set_pos_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___pos_0 = value;
	}

	inline static int32_t get_offset_of_rot_1() { return static_cast<int32_t>(offsetof(RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905, ___rot_1)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rot_1() const { return ___rot_1; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rot_1() { return &___rot_1; }
	inline void set_rot_1(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rot_1 = value;
	}
};


// System.Delegate
struct  Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Exception
struct  Exception_t  : public RuntimeObject
{
public:
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t * ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject * ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject * ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___native_trace_ips_15;

public:
	inline static int32_t get_offset_of__className_1() { return static_cast<int32_t>(offsetof(Exception_t, ____className_1)); }
	inline String_t* get__className_1() const { return ____className_1; }
	inline String_t** get_address_of__className_1() { return &____className_1; }
	inline void set__className_1(String_t* value)
	{
		____className_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____className_1), (void*)value);
	}

	inline static int32_t get_offset_of__message_2() { return static_cast<int32_t>(offsetof(Exception_t, ____message_2)); }
	inline String_t* get__message_2() const { return ____message_2; }
	inline String_t** get_address_of__message_2() { return &____message_2; }
	inline void set__message_2(String_t* value)
	{
		____message_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____message_2), (void*)value);
	}

	inline static int32_t get_offset_of__data_3() { return static_cast<int32_t>(offsetof(Exception_t, ____data_3)); }
	inline RuntimeObject* get__data_3() const { return ____data_3; }
	inline RuntimeObject** get_address_of__data_3() { return &____data_3; }
	inline void set__data_3(RuntimeObject* value)
	{
		____data_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____data_3), (void*)value);
	}

	inline static int32_t get_offset_of__innerException_4() { return static_cast<int32_t>(offsetof(Exception_t, ____innerException_4)); }
	inline Exception_t * get__innerException_4() const { return ____innerException_4; }
	inline Exception_t ** get_address_of__innerException_4() { return &____innerException_4; }
	inline void set__innerException_4(Exception_t * value)
	{
		____innerException_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____innerException_4), (void*)value);
	}

	inline static int32_t get_offset_of__helpURL_5() { return static_cast<int32_t>(offsetof(Exception_t, ____helpURL_5)); }
	inline String_t* get__helpURL_5() const { return ____helpURL_5; }
	inline String_t** get_address_of__helpURL_5() { return &____helpURL_5; }
	inline void set__helpURL_5(String_t* value)
	{
		____helpURL_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____helpURL_5), (void*)value);
	}

	inline static int32_t get_offset_of__stackTrace_6() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTrace_6)); }
	inline RuntimeObject * get__stackTrace_6() const { return ____stackTrace_6; }
	inline RuntimeObject ** get_address_of__stackTrace_6() { return &____stackTrace_6; }
	inline void set__stackTrace_6(RuntimeObject * value)
	{
		____stackTrace_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTrace_6), (void*)value);
	}

	inline static int32_t get_offset_of__stackTraceString_7() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTraceString_7)); }
	inline String_t* get__stackTraceString_7() const { return ____stackTraceString_7; }
	inline String_t** get_address_of__stackTraceString_7() { return &____stackTraceString_7; }
	inline void set__stackTraceString_7(String_t* value)
	{
		____stackTraceString_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTraceString_7), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackTraceString_8() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackTraceString_8)); }
	inline String_t* get__remoteStackTraceString_8() const { return ____remoteStackTraceString_8; }
	inline String_t** get_address_of__remoteStackTraceString_8() { return &____remoteStackTraceString_8; }
	inline void set__remoteStackTraceString_8(String_t* value)
	{
		____remoteStackTraceString_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____remoteStackTraceString_8), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackIndex_9() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackIndex_9)); }
	inline int32_t get__remoteStackIndex_9() const { return ____remoteStackIndex_9; }
	inline int32_t* get_address_of__remoteStackIndex_9() { return &____remoteStackIndex_9; }
	inline void set__remoteStackIndex_9(int32_t value)
	{
		____remoteStackIndex_9 = value;
	}

	inline static int32_t get_offset_of__dynamicMethods_10() { return static_cast<int32_t>(offsetof(Exception_t, ____dynamicMethods_10)); }
	inline RuntimeObject * get__dynamicMethods_10() const { return ____dynamicMethods_10; }
	inline RuntimeObject ** get_address_of__dynamicMethods_10() { return &____dynamicMethods_10; }
	inline void set__dynamicMethods_10(RuntimeObject * value)
	{
		____dynamicMethods_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____dynamicMethods_10), (void*)value);
	}

	inline static int32_t get_offset_of__HResult_11() { return static_cast<int32_t>(offsetof(Exception_t, ____HResult_11)); }
	inline int32_t get__HResult_11() const { return ____HResult_11; }
	inline int32_t* get_address_of__HResult_11() { return &____HResult_11; }
	inline void set__HResult_11(int32_t value)
	{
		____HResult_11 = value;
	}

	inline static int32_t get_offset_of__source_12() { return static_cast<int32_t>(offsetof(Exception_t, ____source_12)); }
	inline String_t* get__source_12() const { return ____source_12; }
	inline String_t** get_address_of__source_12() { return &____source_12; }
	inline void set__source_12(String_t* value)
	{
		____source_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____source_12), (void*)value);
	}

	inline static int32_t get_offset_of__safeSerializationManager_13() { return static_cast<int32_t>(offsetof(Exception_t, ____safeSerializationManager_13)); }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * get__safeSerializationManager_13() const { return ____safeSerializationManager_13; }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 ** get_address_of__safeSerializationManager_13() { return &____safeSerializationManager_13; }
	inline void set__safeSerializationManager_13(SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * value)
	{
		____safeSerializationManager_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____safeSerializationManager_13), (void*)value);
	}

	inline static int32_t get_offset_of_captured_traces_14() { return static_cast<int32_t>(offsetof(Exception_t, ___captured_traces_14)); }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* get_captured_traces_14() const { return ___captured_traces_14; }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196** get_address_of_captured_traces_14() { return &___captured_traces_14; }
	inline void set_captured_traces_14(StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* value)
	{
		___captured_traces_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___captured_traces_14), (void*)value);
	}

	inline static int32_t get_offset_of_native_trace_ips_15() { return static_cast<int32_t>(offsetof(Exception_t, ___native_trace_ips_15)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_native_trace_ips_15() const { return ___native_trace_ips_15; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_native_trace_ips_15() { return &___native_trace_ips_15; }
	inline void set_native_trace_ips_15(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___native_trace_ips_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_trace_ips_15), (void*)value);
	}
};

struct Exception_t_StaticFields
{
public:
	// System.Object System.Exception::s_EDILock
	RuntimeObject * ___s_EDILock_0;

public:
	inline static int32_t get_offset_of_s_EDILock_0() { return static_cast<int32_t>(offsetof(Exception_t_StaticFields, ___s_EDILock_0)); }
	inline RuntimeObject * get_s_EDILock_0() const { return ___s_EDILock_0; }
	inline RuntimeObject ** get_address_of_s_EDILock_0() { return &___s_EDILock_0; }
	inline void set_s_EDILock_0(RuntimeObject * value)
	{
		___s_EDILock_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_EDILock_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};

// System.Int32Enum
struct  Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD 
{
public:
	// System.Int32 System.Int32Enum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Reflection.BindingFlags
struct  BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0 
{
public:
	// System.Int32 System.Reflection.BindingFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.RuntimeTypeHandle
struct  RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D 
{
public:
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// UnityEngine.Coroutine
struct  Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC  : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44
{
public:
	// System.IntPtr UnityEngine.Coroutine::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC_marshaled_pinvoke : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
};
// Native definition for COM marshalling of UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC_marshaled_com : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
	intptr_t ___m_Ptr_0;
};

// UnityEngine.Object
struct  Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.SendMessageOptions
struct  SendMessageOptions_t4EA4645A7D0C4E0186BD7A984CDF4EE2C8F26250 
{
public:
	// System.Int32 UnityEngine.SendMessageOptions::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SendMessageOptions_t4EA4645A7D0C4E0186BD7A984CDF4EE2C8F26250, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.CVRInput
struct  CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B  : public RuntimeObject
{
public:
	// Valve.VR.IVRInput Valve.VR.CVRInput::FnTable
	IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  ___FnTable_0;

public:
	inline static int32_t get_offset_of_FnTable_0() { return static_cast<int32_t>(offsetof(CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B, ___FnTable_0)); }
	inline IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  get_FnTable_0() const { return ___FnTable_0; }
	inline IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78 * get_address_of_FnTable_0() { return &___FnTable_0; }
	inline void set_FnTable_0(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  value)
	{
		___FnTable_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetActionManifestPath_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionSetHandle_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionHandle_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetInputSourceHandle_3), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___UpdateActionState_4), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetDigitalActionData_5), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetAnalogActionData_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPoseActionDataRelativeToNow_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPoseActionDataForNextFrame_8), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalActionData_9), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneCount_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneHierarchy_11), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneName_12), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalReferenceTransforms_13), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalTrackingLevel_14), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalBoneData_15), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalSummaryData_16), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalBoneDataCompressed_17), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___DecompressSkeletalBoneData_18), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___TriggerHapticVibrationAction_19), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionOrigins_20), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetOriginLocalizedName_21), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetOriginTrackedDeviceInfo_22), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionBindingInfo_23), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowActionOrigins_24), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowBindingsForActionSet_25), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsUsingLegacyInput_26), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___OpenBindingUI_27), (void*)NULL);
		#endif
	}
};


// Valve.VR.EDualAnalogWhich
struct  EDualAnalogWhich_t844CFA5C049DB47CB2E9E69E900CE2AD45FC22A8 
{
public:
	// System.Int32 Valve.VR.EDualAnalogWhich::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EDualAnalogWhich_t844CFA5C049DB47CB2E9E69E900CE2AD45FC22A8, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EHDCPError
struct  EHDCPError_tEA1A3B61ABC539BEB5968E78D67A977D9B8FFC8F 
{
public:
	// System.Int32 Valve.VR.EHDCPError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EHDCPError_tEA1A3B61ABC539BEB5968E78D67A977D9B8FFC8F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EShowUIType
struct  EShowUIType_tBD146F5D1D019E27B82F6FCAE6A9EE94568DE7CF 
{
public:
	// System.Int32 Valve.VR.EShowUIType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EShowUIType_tBD146F5D1D019E27B82F6FCAE6A9EE94568DE7CF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackedDeviceProperty
struct  ETrackedDeviceProperty_tF72385D21B16A4502DC9E4F05A6C3F3D63202678 
{
public:
	// System.Int32 Valve.VR.ETrackedDeviceProperty::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackedDeviceProperty_tF72385D21B16A4502DC9E4F05A6C3F3D63202678, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingResult
struct  ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E 
{
public:
	// System.Int32 Valve.VR.ETrackingResult::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingUniverseOrigin
struct  ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B 
{
public:
	// System.Int32 Valve.VR.ETrackingUniverseOrigin::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVREventType
struct  EVREventType_t9A248608EB346C24D3EC6F3C1DF3FA4C6A207BC3 
{
public:
	// System.Int32 Valve.VR.EVREventType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVREventType_t9A248608EB346C24D3EC6F3C1DF3FA4C6A207BC3, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVREye
struct  EVREye_t7C413729402C81A69293253E13D4496F15B2F68A 
{
public:
	// System.Int32 Valve.VR.EVREye::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVREye_t7C413729402C81A69293253E13D4496F15B2F68A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRInputError
struct  EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F 
{
public:
	// System.Int32 Valve.VR.EVRInputError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRInputStringBits
struct  EVRInputStringBits_t6D50955CC5A3AB1CC794A0582C59C3AC98F60E60 
{
public:
	// System.Int32 Valve.VR.EVRInputStringBits::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRInputStringBits_t6D50955CC5A3AB1CC794A0582C59C3AC98F60E60, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalMotionRange
struct  EVRSkeletalMotionRange_t7B3CF169090271D1030B7DBCB36A9F6B9B5833F5 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalMotionRange::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalMotionRange_t7B3CF169090271D1030B7DBCB36A9F6B9B5833F5, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalReferencePose
struct  EVRSkeletalReferencePose_t9735ED60A5D110A7B9569A57B78D9B212143077F 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalReferencePose::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalReferencePose_t9735ED60A5D110A7B9569A57B78D9B212143077F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalTrackingLevel
struct  EVRSkeletalTrackingLevel_tDFEFEB2A62597359105A66DDF2A00CC5B7B8F1AD 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalTrackingLevel::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalTrackingLevel_tDFEFEB2A62597359105A66DDF2A00CC5B7B8F1AD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalTransformSpace
struct  EVRSkeletalTransformSpace_t42634E33BB67FB63D23667D5C12E7DCC6C4B90BB 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalTransformSpace::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalTransformSpace_t42634E33BB67FB63D23667D5C12E7DCC6C4B90BB, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSummaryType
struct  EVRSummaryType_t3633B56EEC68A4E79555876B8E7B5C0CE387BF09 
{
public:
	// System.Int32 Valve.VR.EVRSummaryType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSummaryType_t3633B56EEC68A4E79555876B8E7B5C0CE387BF09, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_ActionDirections
struct  SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1 
{
public:
	// System.Int32 Valve.VR.SteamVR_ActionDirections::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct  SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9  : public SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199  : public SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02  : public SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_In_2_t648DCC49A164ED0184532F0961391833D01917D6  : public SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct  SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C  : public SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>
struct  SteamVR_Action_In_2_tFC1FB3FBCB26CEB814D8547C997DDFD01A8A0FB2  : public SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902
{
public:

public:
};


// Valve.VR.SteamVR_Action_Out`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct  SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0  : public SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_BooleanEvent
struct  SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4  : public UnityEvent_3_t40081F2EF697F552E8C4A377AC5C3B4C2E7A2A5A
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_PoseEvent
struct  SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87  : public UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent
struct  SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9  : public UnityEvent_3_t71F1FA1B2F643E879720744F46B639680D8085B7
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent
struct  SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9  : public UnityEvent_3_t41E2F467D883C365FE208841F67E87C4295808B5
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent
struct  SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E  : public UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_SingleEvent
struct  SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4  : public UnityEvent_4_t27B5A01BBE9C4FCF8B974D92F4D411CFC467A294
{
public:

public:
};


// Valve.VR.SteamVR_Events_Event`1<Valve.VR.VREvent_t>
struct  Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262  : public UnityEvent_1_t7E9560B75945B332DA5807C6061708BBAF5F7307
{
public:

public:
};


// Valve.VR.SteamVR_Input_Sources
struct  SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7 
{
public:
	// System.Int32 Valve.VR.SteamVR_Input_Sources::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerIndexEnum
struct  SteamVR_Skeleton_FingerIndexEnum_t94461F3230EE21117A33A97E423D48FDF7CBF56F 
{
public:
	// System.Int32 Valve.VR.SteamVR_Skeleton_FingerIndexEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerIndexEnum_t94461F3230EE21117A33A97E423D48FDF7CBF56F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum
struct  SteamVR_Skeleton_FingerSplayIndexEnum_t1117AEF9CE95E514D70A171E86825E39E04D7578 
{
public:
	// System.Int32 Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerSplayIndexEnum_t1117AEF9CE95E514D70A171E86825E39E04D7578, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.VRBoneTransform_t
struct  VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9 
{
public:
	// Valve.VR.HmdVector4_t Valve.VR.VRBoneTransform_t::position
	HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9  ___position_0;
	// Valve.VR.HmdQuaternionf_t Valve.VR.VRBoneTransform_t::orientation
	HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11  ___orientation_1;

public:
	inline static int32_t get_offset_of_position_0() { return static_cast<int32_t>(offsetof(VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9, ___position_0)); }
	inline HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9  get_position_0() const { return ___position_0; }
	inline HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * get_address_of_position_0() { return &___position_0; }
	inline void set_position_0(HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9  value)
	{
		___position_0 = value;
	}

	inline static int32_t get_offset_of_orientation_1() { return static_cast<int32_t>(offsetof(VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9, ___orientation_1)); }
	inline HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11  get_orientation_1() const { return ___orientation_1; }
	inline HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * get_address_of_orientation_1() { return &___orientation_1; }
	inline void set_orientation_1(HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11  value)
	{
		___orientation_1 = value;
	}
};


// System.MulticastDelegate
struct  MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// System.SystemException
struct  SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782  : public Exception_t
{
public:

public:
};


// System.Type
struct  Type_t  : public MemberInfo_t
{
public:
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ____impl_9;

public:
	inline static int32_t get_offset_of__impl_9() { return static_cast<int32_t>(offsetof(Type_t, ____impl_9)); }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  get__impl_9() const { return ____impl_9; }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D * get_address_of__impl_9() { return &____impl_9; }
	inline void set__impl_9(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  value)
	{
		____impl_9 = value;
	}
};

struct Type_t_StaticFields
{
public:
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterAttribute_0;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterName_1;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterNameIgnoreCase_2;
	// System.Object System.Type::Missing
	RuntimeObject * ___Missing_3;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_4;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* ___EmptyTypes_5;
	// System.Reflection.Binder System.Type::defaultBinder
	Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * ___defaultBinder_6;

public:
	inline static int32_t get_offset_of_FilterAttribute_0() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterAttribute_0)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterAttribute_0() const { return ___FilterAttribute_0; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterAttribute_0() { return &___FilterAttribute_0; }
	inline void set_FilterAttribute_0(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterAttribute_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterAttribute_0), (void*)value);
	}

	inline static int32_t get_offset_of_FilterName_1() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterName_1)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterName_1() const { return ___FilterName_1; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterName_1() { return &___FilterName_1; }
	inline void set_FilterName_1(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterName_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterName_1), (void*)value);
	}

	inline static int32_t get_offset_of_FilterNameIgnoreCase_2() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterNameIgnoreCase_2)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterNameIgnoreCase_2() const { return ___FilterNameIgnoreCase_2; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterNameIgnoreCase_2() { return &___FilterNameIgnoreCase_2; }
	inline void set_FilterNameIgnoreCase_2(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterNameIgnoreCase_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterNameIgnoreCase_2), (void*)value);
	}

	inline static int32_t get_offset_of_Missing_3() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Missing_3)); }
	inline RuntimeObject * get_Missing_3() const { return ___Missing_3; }
	inline RuntimeObject ** get_address_of_Missing_3() { return &___Missing_3; }
	inline void set_Missing_3(RuntimeObject * value)
	{
		___Missing_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Missing_3), (void*)value);
	}

	inline static int32_t get_offset_of_Delimiter_4() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Delimiter_4)); }
	inline Il2CppChar get_Delimiter_4() const { return ___Delimiter_4; }
	inline Il2CppChar* get_address_of_Delimiter_4() { return &___Delimiter_4; }
	inline void set_Delimiter_4(Il2CppChar value)
	{
		___Delimiter_4 = value;
	}

	inline static int32_t get_offset_of_EmptyTypes_5() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___EmptyTypes_5)); }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* get_EmptyTypes_5() const { return ___EmptyTypes_5; }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F** get_address_of_EmptyTypes_5() { return &___EmptyTypes_5; }
	inline void set_EmptyTypes_5(TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* value)
	{
		___EmptyTypes_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EmptyTypes_5), (void*)value);
	}

	inline static int32_t get_offset_of_defaultBinder_6() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___defaultBinder_6)); }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * get_defaultBinder_6() const { return ___defaultBinder_6; }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 ** get_address_of_defaultBinder_6() { return &___defaultBinder_6; }
	inline void set_defaultBinder_6(Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * value)
	{
		___defaultBinder_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___defaultBinder_6), (void*)value);
	}
};


// UnityEngine.Component
struct  Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.GameObject
struct  GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean
struct  SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20  : public SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A  : public SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2  : public SteamVR_Action_In_2_t648DCC49A164ED0184532F0961391833D01917D6
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single
struct  SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81  : public SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02
{
public:

public:
};


// Valve.VR.SteamVR_Action_Source
struct  SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0  : public RuntimeObject
{
public:
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::<inputSource>k__BackingField
	int32_t ___U3CinputSourceU3Ek__BackingField_0;
	// System.UInt64 Valve.VR.SteamVR_Action_Source::inputSourceHandle
	uint64_t ___inputSourceHandle_1;
	// Valve.VR.SteamVR_Action Valve.VR.SteamVR_Action_Source::action
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action_2;

public:
	inline static int32_t get_offset_of_U3CinputSourceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___U3CinputSourceU3Ek__BackingField_0)); }
	inline int32_t get_U3CinputSourceU3Ek__BackingField_0() const { return ___U3CinputSourceU3Ek__BackingField_0; }
	inline int32_t* get_address_of_U3CinputSourceU3Ek__BackingField_0() { return &___U3CinputSourceU3Ek__BackingField_0; }
	inline void set_U3CinputSourceU3Ek__BackingField_0(int32_t value)
	{
		___U3CinputSourceU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_inputSourceHandle_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___inputSourceHandle_1)); }
	inline uint64_t get_inputSourceHandle_1() const { return ___inputSourceHandle_1; }
	inline uint64_t* get_address_of_inputSourceHandle_1() { return &___inputSourceHandle_1; }
	inline void set_inputSourceHandle_1(uint64_t value)
	{
		___inputSourceHandle_1 = value;
	}

	inline static int32_t get_offset_of_action_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___action_2)); }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * get_action_2() const { return ___action_2; }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** get_address_of_action_2() { return &___action_2; }
	inline void set_action_2(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		___action_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___action_2), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map
struct  SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_Action_Source_Map::<fullPath>k__BackingField
	String_t* ___U3CfullPathU3Ek__BackingField_0;
	// System.UInt64 Valve.VR.SteamVR_Action_Source_Map::<handle>k__BackingField
	uint64_t ___U3ChandleU3Ek__BackingField_1;
	// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source_Map::<actionSet>k__BackingField
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___U3CactionSetU3Ek__BackingField_2;
	// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::<direction>k__BackingField
	int32_t ___U3CdirectionU3Ek__BackingField_3;
	// Valve.VR.SteamVR_Action Valve.VR.SteamVR_Action_Source_Map::action
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action_4;

public:
	inline static int32_t get_offset_of_U3CfullPathU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CfullPathU3Ek__BackingField_0)); }
	inline String_t* get_U3CfullPathU3Ek__BackingField_0() const { return ___U3CfullPathU3Ek__BackingField_0; }
	inline String_t** get_address_of_U3CfullPathU3Ek__BackingField_0() { return &___U3CfullPathU3Ek__BackingField_0; }
	inline void set_U3CfullPathU3Ek__BackingField_0(String_t* value)
	{
		___U3CfullPathU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfullPathU3Ek__BackingField_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3ChandleU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3ChandleU3Ek__BackingField_1)); }
	inline uint64_t get_U3ChandleU3Ek__BackingField_1() const { return ___U3ChandleU3Ek__BackingField_1; }
	inline uint64_t* get_address_of_U3ChandleU3Ek__BackingField_1() { return &___U3ChandleU3Ek__BackingField_1; }
	inline void set_U3ChandleU3Ek__BackingField_1(uint64_t value)
	{
		___U3ChandleU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CactionSetU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CactionSetU3Ek__BackingField_2)); }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * get_U3CactionSetU3Ek__BackingField_2() const { return ___U3CactionSetU3Ek__BackingField_2; }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 ** get_address_of_U3CactionSetU3Ek__BackingField_2() { return &___U3CactionSetU3Ek__BackingField_2; }
	inline void set_U3CactionSetU3Ek__BackingField_2(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * value)
	{
		___U3CactionSetU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CactionSetU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CdirectionU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CdirectionU3Ek__BackingField_3)); }
	inline int32_t get_U3CdirectionU3Ek__BackingField_3() const { return ___U3CdirectionU3Ek__BackingField_3; }
	inline int32_t* get_address_of_U3CdirectionU3Ek__BackingField_3() { return &___U3CdirectionU3Ek__BackingField_3; }
	inline void set_U3CdirectionU3Ek__BackingField_3(int32_t value)
	{
		___U3CdirectionU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_action_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___action_4)); }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * get_action_4() const { return ___action_4; }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** get_address_of_action_4() { return &___action_4; }
	inline void set_action_4(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		___action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___action_4), (void*)value);
	}
};

struct SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields
{
public:
	// System.String Valve.VR.SteamVR_Action_Source_Map::inLowered
	String_t* ___inLowered_5;
	// System.String Valve.VR.SteamVR_Action_Source_Map::outLowered
	String_t* ___outLowered_6;

public:
	inline static int32_t get_offset_of_inLowered_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields, ___inLowered_5)); }
	inline String_t* get_inLowered_5() const { return ___inLowered_5; }
	inline String_t** get_address_of_inLowered_5() { return &___inLowered_5; }
	inline void set_inLowered_5(String_t* value)
	{
		___inLowered_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inLowered_5), (void*)value);
	}

	inline static int32_t get_offset_of_outLowered_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields, ___outLowered_6)); }
	inline String_t* get_outLowered_6() const { return ___outLowered_6; }
	inline String_t** get_address_of_outLowered_6() { return &___outLowered_6; }
	inline void set_outLowered_6(String_t* value)
	{
		___outLowered_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___outLowered_6), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vector2
struct  SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37  : public SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3
struct  SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9  : public SteamVR_Action_In_2_tFC1FB3FBCB26CEB814D8547C997DDFD01A8A0FB2
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vibration
struct  SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB  : public SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0
{
public:

public:
};


// Valve.VR.TrackedDevicePose_t
struct  TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 
{
public:
	// Valve.VR.HmdMatrix34_t Valve.VR.TrackedDevicePose_t::mDeviceToAbsoluteTracking
	HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  ___mDeviceToAbsoluteTracking_0;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vVelocity
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vVelocity_1;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vAngularVelocity
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vAngularVelocity_2;
	// Valve.VR.ETrackingResult Valve.VR.TrackedDevicePose_t::eTrackingResult
	int32_t ___eTrackingResult_3;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bPoseIsValid
	bool ___bPoseIsValid_4;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bDeviceIsConnected
	bool ___bDeviceIsConnected_5;

public:
	inline static int32_t get_offset_of_mDeviceToAbsoluteTracking_0() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___mDeviceToAbsoluteTracking_0)); }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  get_mDeviceToAbsoluteTracking_0() const { return ___mDeviceToAbsoluteTracking_0; }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * get_address_of_mDeviceToAbsoluteTracking_0() { return &___mDeviceToAbsoluteTracking_0; }
	inline void set_mDeviceToAbsoluteTracking_0(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  value)
	{
		___mDeviceToAbsoluteTracking_0 = value;
	}

	inline static int32_t get_offset_of_vVelocity_1() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___vVelocity_1)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vVelocity_1() const { return ___vVelocity_1; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vVelocity_1() { return &___vVelocity_1; }
	inline void set_vVelocity_1(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vVelocity_1 = value;
	}

	inline static int32_t get_offset_of_vAngularVelocity_2() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___vAngularVelocity_2)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vAngularVelocity_2() const { return ___vAngularVelocity_2; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vAngularVelocity_2() { return &___vAngularVelocity_2; }
	inline void set_vAngularVelocity_2(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vAngularVelocity_2 = value;
	}

	inline static int32_t get_offset_of_eTrackingResult_3() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___eTrackingResult_3)); }
	inline int32_t get_eTrackingResult_3() const { return ___eTrackingResult_3; }
	inline int32_t* get_address_of_eTrackingResult_3() { return &___eTrackingResult_3; }
	inline void set_eTrackingResult_3(int32_t value)
	{
		___eTrackingResult_3 = value;
	}

	inline static int32_t get_offset_of_bPoseIsValid_4() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___bPoseIsValid_4)); }
	inline bool get_bPoseIsValid_4() const { return ___bPoseIsValid_4; }
	inline bool* get_address_of_bPoseIsValid_4() { return &___bPoseIsValid_4; }
	inline void set_bPoseIsValid_4(bool value)
	{
		___bPoseIsValid_4 = value;
	}

	inline static int32_t get_offset_of_bDeviceIsConnected_5() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___bDeviceIsConnected_5)); }
	inline bool get_bDeviceIsConnected_5() const { return ___bDeviceIsConnected_5; }
	inline bool* get_address_of_bDeviceIsConnected_5() { return &___bDeviceIsConnected_5; }
	inline void set_bDeviceIsConnected_5(bool value)
	{
		___bDeviceIsConnected_5 = value;
	}
};


// Valve.VR.VREvent_DualAnalog_t
struct  VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137 
{
public:
	// System.Single Valve.VR.VREvent_DualAnalog_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_DualAnalog_t::y
	float ___y_1;
	// System.Single Valve.VR.VREvent_DualAnalog_t::transformedX
	float ___transformedX_2;
	// System.Single Valve.VR.VREvent_DualAnalog_t::transformedY
	float ___transformedY_3;
	// Valve.VR.EDualAnalogWhich Valve.VR.VREvent_DualAnalog_t::which
	int32_t ___which_4;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_transformedX_2() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___transformedX_2)); }
	inline float get_transformedX_2() const { return ___transformedX_2; }
	inline float* get_address_of_transformedX_2() { return &___transformedX_2; }
	inline void set_transformedX_2(float value)
	{
		___transformedX_2 = value;
	}

	inline static int32_t get_offset_of_transformedY_3() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___transformedY_3)); }
	inline float get_transformedY_3() const { return ___transformedY_3; }
	inline float* get_address_of_transformedY_3() { return &___transformedY_3; }
	inline void set_transformedY_3(float value)
	{
		___transformedY_3 = value;
	}

	inline static int32_t get_offset_of_which_4() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___which_4)); }
	inline int32_t get_which_4() const { return ___which_4; }
	inline int32_t* get_address_of_which_4() { return &___which_4; }
	inline void set_which_4(int32_t value)
	{
		___which_4 = value;
	}
};


// Valve.VR.VREvent_HDCPError_t
struct  VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E 
{
public:
	// Valve.VR.EHDCPError Valve.VR.VREvent_HDCPError_t::eCode
	int32_t ___eCode_0;

public:
	inline static int32_t get_offset_of_eCode_0() { return static_cast<int32_t>(offsetof(VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E, ___eCode_0)); }
	inline int32_t get_eCode_0() const { return ___eCode_0; }
	inline int32_t* get_address_of_eCode_0() { return &___eCode_0; }
	inline void set_eCode_0(int32_t value)
	{
		___eCode_0 = value;
	}
};


// Valve.VR.VREvent_Property_t
struct  VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5 
{
public:
	// System.UInt64 Valve.VR.VREvent_Property_t::container
	uint64_t ___container_0;
	// Valve.VR.ETrackedDeviceProperty Valve.VR.VREvent_Property_t::prop
	int32_t ___prop_1;

public:
	inline static int32_t get_offset_of_container_0() { return static_cast<int32_t>(offsetof(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5, ___container_0)); }
	inline uint64_t get_container_0() const { return ___container_0; }
	inline uint64_t* get_address_of_container_0() { return &___container_0; }
	inline void set_container_0(uint64_t value)
	{
		___container_0 = value;
	}

	inline static int32_t get_offset_of_prop_1() { return static_cast<int32_t>(offsetof(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5, ___prop_1)); }
	inline int32_t get_prop_1() const { return ___prop_1; }
	inline int32_t* get_address_of_prop_1() { return &___prop_1; }
	inline void set_prop_1(int32_t value)
	{
		___prop_1 = value;
	}
};


// Valve.VR.VREvent_ShowUI_t
struct  VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997 
{
public:
	// Valve.VR.EShowUIType Valve.VR.VREvent_ShowUI_t::eType
	int32_t ___eType_0;

public:
	inline static int32_t get_offset_of_eType_0() { return static_cast<int32_t>(offsetof(VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997, ___eType_0)); }
	inline int32_t get_eType_0() const { return ___eType_0; }
	inline int32_t* get_address_of_eType_0() { return &___eType_0; }
	inline void set_eType_0(int32_t value)
	{
		___eType_0 = value;
	}
};


// System.Action`1<System.String>
struct  Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0  : public MulticastDelegate_t
{
public:

public:
};


// System.AsyncCallback
struct  AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};


// System.NotSupportedException
struct  NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010  : public SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782
{
public:

public:
};


// UnityEngine.Behaviour
struct  Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Events.UnityAction
struct  UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Transform
struct  Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Valve.VR.InputPoseActionData_t
struct  InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 
{
public:
	// System.Boolean Valve.VR.InputPoseActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputPoseActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// Valve.VR.TrackedDevicePose_t Valve.VR.InputPoseActionData_t::pose
	TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  ___pose_2;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_pose_2() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___pose_2)); }
	inline TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  get_pose_2() const { return ___pose_2; }
	inline TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * get_address_of_pose_2() { return &___pose_2; }
	inline void set_pose_2(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  value)
	{
		___pose_2 = value;
	}
};


// Valve.VR.SteamVR_Action_Boolean_ChangeHandler
struct  ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateDownHandler
struct  StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateHandler
struct  StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateUpHandler
struct  StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_UpdateHandler
struct  UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_In_Source
struct  SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB  : public SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0
{
public:
	// System.Boolean Valve.VR.SteamVR_Action_In_Source::<isUpdating>k__BackingField
	bool ___U3CisUpdatingU3Ek__BackingField_4;
	// System.Single Valve.VR.SteamVR_Action_In_Source::<updateTime>k__BackingField
	float ___U3CupdateTimeU3Ek__BackingField_5;
	// System.Single Valve.VR.SteamVR_Action_In_Source::<changedTime>k__BackingField
	float ___U3CchangedTimeU3Ek__BackingField_6;
	// System.Int32 Valve.VR.SteamVR_Action_In_Source::<lastOriginGetFrame>k__BackingField
	int32_t ___U3ClastOriginGetFrameU3Ek__BackingField_7;
	// Valve.VR.InputOriginInfo_t Valve.VR.SteamVR_Action_In_Source::inputOriginInfo
	InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  ___inputOriginInfo_8;
	// Valve.VR.InputOriginInfo_t Valve.VR.SteamVR_Action_In_Source::lastInputOriginInfo
	InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  ___lastInputOriginInfo_9;

public:
	inline static int32_t get_offset_of_U3CisUpdatingU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CisUpdatingU3Ek__BackingField_4)); }
	inline bool get_U3CisUpdatingU3Ek__BackingField_4() const { return ___U3CisUpdatingU3Ek__BackingField_4; }
	inline bool* get_address_of_U3CisUpdatingU3Ek__BackingField_4() { return &___U3CisUpdatingU3Ek__BackingField_4; }
	inline void set_U3CisUpdatingU3Ek__BackingField_4(bool value)
	{
		___U3CisUpdatingU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CupdateTimeU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CupdateTimeU3Ek__BackingField_5)); }
	inline float get_U3CupdateTimeU3Ek__BackingField_5() const { return ___U3CupdateTimeU3Ek__BackingField_5; }
	inline float* get_address_of_U3CupdateTimeU3Ek__BackingField_5() { return &___U3CupdateTimeU3Ek__BackingField_5; }
	inline void set_U3CupdateTimeU3Ek__BackingField_5(float value)
	{
		___U3CupdateTimeU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CchangedTimeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CchangedTimeU3Ek__BackingField_6)); }
	inline float get_U3CchangedTimeU3Ek__BackingField_6() const { return ___U3CchangedTimeU3Ek__BackingField_6; }
	inline float* get_address_of_U3CchangedTimeU3Ek__BackingField_6() { return &___U3CchangedTimeU3Ek__BackingField_6; }
	inline void set_U3CchangedTimeU3Ek__BackingField_6(float value)
	{
		___U3CchangedTimeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3ClastOriginGetFrameU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3ClastOriginGetFrameU3Ek__BackingField_7)); }
	inline int32_t get_U3ClastOriginGetFrameU3Ek__BackingField_7() const { return ___U3ClastOriginGetFrameU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3ClastOriginGetFrameU3Ek__BackingField_7() { return &___U3ClastOriginGetFrameU3Ek__BackingField_7; }
	inline void set_U3ClastOriginGetFrameU3Ek__BackingField_7(int32_t value)
	{
		___U3ClastOriginGetFrameU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_inputOriginInfo_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___inputOriginInfo_8)); }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  get_inputOriginInfo_8() const { return ___inputOriginInfo_8; }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * get_address_of_inputOriginInfo_8() { return &___inputOriginInfo_8; }
	inline void set_inputOriginInfo_8(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  value)
	{
		___inputOriginInfo_8 = value;
	}

	inline static int32_t get_offset_of_lastInputOriginInfo_9() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___lastInputOriginInfo_9)); }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  get_lastInputOriginInfo_9() const { return ___lastInputOriginInfo_9; }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * get_address_of_lastInputOriginInfo_9() { return &___lastInputOriginInfo_9; }
	inline void set_lastInputOriginInfo_9(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  value)
	{
		___lastInputOriginInfo_9 = value;
	}
};

struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_In_Source::inputOriginInfo_size
	uint32_t ___inputOriginInfo_size_3;

public:
	inline static int32_t get_offset_of_inputOriginInfo_size_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields, ___inputOriginInfo_size_3)); }
	inline uint32_t get_inputOriginInfo_size_3() const { return ___inputOriginInfo_size_3; }
	inline uint32_t* get_address_of_inputOriginInfo_size_3() { return &___inputOriginInfo_size_3; }
	inline void set_inputOriginInfo_size_3(uint32_t value)
	{
		___inputOriginInfo_size_3 = value;
	}
};


// Valve.VR.SteamVR_Action_Out_Source
struct  SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6  : public SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose
struct  SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C  : public SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_ChangeHandler
struct  ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler
struct  TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_UpdateHandler
struct  UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_AxisHandler
struct  AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_ChangeHandler
struct  ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_UpdateHandler
struct  UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton
struct  SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504  : public SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2
{
public:

public:
};

struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields
{
public:
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::steamVRFixUpRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___steamVRFixUpRotation_7;

public:
	inline static int32_t get_offset_of_steamVRFixUpRotation_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields, ___steamVRFixUpRotation_7)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_steamVRFixUpRotation_7() const { return ___steamVRFixUpRotation_7; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_steamVRFixUpRotation_7() { return &___steamVRFixUpRotation_7; }
	inline void set_steamVRFixUpRotation_7(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___steamVRFixUpRotation_7 = value;
	}
};


// Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler
struct  ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_ChangeHandler
struct  ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler
struct  TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_UpdateHandler
struct  UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler
struct  ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1, ___sources_7)); }
	inline SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1, ___sources_7)); }
	inline SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct  SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899, ___sources_7)); }
	inline SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct  SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F, ___sources_7)); }
	inline SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>
struct  SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7, ___sources_7)); }
	inline SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler
struct  ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2_AxisHandler
struct  AxisHandler_t97FB692AF5465040A2929AB663941933E3567689  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2_ChangeHandler
struct  ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2_UpdateHandler
struct  UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler
struct  ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_AxisHandler
struct  AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_ChangeHandler
struct  ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_UpdateHandler
struct  UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler
struct  ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vibration_ExecuteHandler
struct  ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler
struct  ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler
struct  ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler
struct  StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_StateHandler
struct  StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler
struct  StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler
struct  UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler
struct  ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler
struct  ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler
struct  DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler
struct  TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler
struct  UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler
struct  ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Single_AxisHandler
struct  AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Single_ChangeHandler
struct  ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Single_UpdateHandler
struct  UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.VREvent_Data_t
struct  VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Reserved_t Valve.VR.VREvent_Data_t::reserved
			VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  ___reserved_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  ___reserved_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Controller_t Valve.VR.VREvent_Data_t::controller
			VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  ___controller_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  ___controller_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Mouse_t Valve.VR.VREvent_Data_t::mouse
			VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  ___mouse_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  ___mouse_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Scroll_t Valve.VR.VREvent_Data_t::scroll
			VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  ___scroll_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  ___scroll_3_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Process_t Valve.VR.VREvent_Data_t::process
			VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  ___process_4;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  ___process_4_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Notification_t Valve.VR.VREvent_Data_t::notification
			VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  ___notification_5;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  ___notification_5_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Overlay_t Valve.VR.VREvent_Data_t::overlay
			VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  ___overlay_6;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  ___overlay_6_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Status_t Valve.VR.VREvent_Data_t::status
			VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  ___status_7;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  ___status_7_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Ipd_t Valve.VR.VREvent_Data_t::ipd
			VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  ___ipd_8;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  ___ipd_8_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Chaperone_t Valve.VR.VREvent_Data_t::chaperone
			VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  ___chaperone_9;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  ___chaperone_9_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_PerformanceTest_t Valve.VR.VREvent_Data_t::performanceTest
			VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  ___performanceTest_10;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  ___performanceTest_10_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_TouchPadMove_t Valve.VR.VREvent_Data_t::touchPadMove
			VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  ___touchPadMove_11;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  ___touchPadMove_11_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_SeatedZeroPoseReset_t Valve.VR.VREvent_Data_t::seatedZeroPoseReset
			VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  ___seatedZeroPoseReset_12;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  ___seatedZeroPoseReset_12_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Screenshot_t Valve.VR.VREvent_Data_t::screenshot
			VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  ___screenshot_13;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  ___screenshot_13_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ScreenshotProgress_t Valve.VR.VREvent_Data_t::screenshotProgress
			VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  ___screenshotProgress_14;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  ___screenshotProgress_14_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ApplicationLaunch_t Valve.VR.VREvent_Data_t::applicationLaunch
			VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  ___applicationLaunch_15;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  ___applicationLaunch_15_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_EditingCameraSurface_t Valve.VR.VREvent_Data_t::cameraSurface
			VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  ___cameraSurface_16;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  ___cameraSurface_16_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_MessageOverlay_t Valve.VR.VREvent_Data_t::messageOverlay
			VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  ___messageOverlay_17;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  ___messageOverlay_17_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Property_t Valve.VR.VREvent_Data_t::property
			VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  ___property_18;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  ___property_18_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_DualAnalog_t Valve.VR.VREvent_Data_t::dualAnalog
			VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  ___dualAnalog_19;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  ___dualAnalog_19_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_HapticVibration_t Valve.VR.VREvent_Data_t::hapticVibration
			VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  ___hapticVibration_20;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  ___hapticVibration_20_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_WebConsole_t Valve.VR.VREvent_Data_t::webConsole
			VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  ___webConsole_21;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  ___webConsole_21_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_InputBindingLoad_t Valve.VR.VREvent_Data_t::inputBinding
			VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  ___inputBinding_22;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  ___inputBinding_22_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_SpatialAnchor_t Valve.VR.VREvent_Data_t::spatialAnchor
			VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  ___spatialAnchor_23;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  ___spatialAnchor_23_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_InputActionManifestLoad_t Valve.VR.VREvent_Data_t::actionManifest
			VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  ___actionManifest_24;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  ___actionManifest_24_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ProgressUpdate_t Valve.VR.VREvent_Data_t::progressUpdate
			VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  ___progressUpdate_25;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  ___progressUpdate_25_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ShowUI_t Valve.VR.VREvent_Data_t::showUi
			VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  ___showUi_26;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  ___showUi_26_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ShowDevTools_t Valve.VR.VREvent_Data_t::showDevTools
			VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  ___showDevTools_27;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  ___showDevTools_27_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_HDCPError_t Valve.VR.VREvent_Data_t::hdcpError
			VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  ___hdcpError_28;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  ___hdcpError_28_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Keyboard_t Valve.VR.VREvent_Data_t::keyboard
			VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  ___keyboard_29;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  ___keyboard_29_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_reserved_0() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___reserved_0)); }
	inline VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  get_reserved_0() const { return ___reserved_0; }
	inline VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3 * get_address_of_reserved_0() { return &___reserved_0; }
	inline void set_reserved_0(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  value)
	{
		___reserved_0 = value;
	}

	inline static int32_t get_offset_of_controller_1() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___controller_1)); }
	inline VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  get_controller_1() const { return ___controller_1; }
	inline VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05 * get_address_of_controller_1() { return &___controller_1; }
	inline void set_controller_1(VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  value)
	{
		___controller_1 = value;
	}

	inline static int32_t get_offset_of_mouse_2() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___mouse_2)); }
	inline VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  get_mouse_2() const { return ___mouse_2; }
	inline VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B * get_address_of_mouse_2() { return &___mouse_2; }
	inline void set_mouse_2(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  value)
	{
		___mouse_2 = value;
	}

	inline static int32_t get_offset_of_scroll_3() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___scroll_3)); }
	inline VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  get_scroll_3() const { return ___scroll_3; }
	inline VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160 * get_address_of_scroll_3() { return &___scroll_3; }
	inline void set_scroll_3(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  value)
	{
		___scroll_3 = value;
	}

	inline static int32_t get_offset_of_process_4() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___process_4)); }
	inline VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  get_process_4() const { return ___process_4; }
	inline VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E * get_address_of_process_4() { return &___process_4; }
	inline void set_process_4(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  value)
	{
		___process_4 = value;
	}

	inline static int32_t get_offset_of_notification_5() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___notification_5)); }
	inline VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  get_notification_5() const { return ___notification_5; }
	inline VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB * get_address_of_notification_5() { return &___notification_5; }
	inline void set_notification_5(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  value)
	{
		___notification_5 = value;
	}

	inline static int32_t get_offset_of_overlay_6() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___overlay_6)); }
	inline VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  get_overlay_6() const { return ___overlay_6; }
	inline VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C * get_address_of_overlay_6() { return &___overlay_6; }
	inline void set_overlay_6(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  value)
	{
		___overlay_6 = value;
	}

	inline static int32_t get_offset_of_status_7() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___status_7)); }
	inline VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  get_status_7() const { return ___status_7; }
	inline VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB * get_address_of_status_7() { return &___status_7; }
	inline void set_status_7(VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  value)
	{
		___status_7 = value;
	}

	inline static int32_t get_offset_of_ipd_8() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___ipd_8)); }
	inline VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  get_ipd_8() const { return ___ipd_8; }
	inline VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400 * get_address_of_ipd_8() { return &___ipd_8; }
	inline void set_ipd_8(VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  value)
	{
		___ipd_8 = value;
	}

	inline static int32_t get_offset_of_chaperone_9() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___chaperone_9)); }
	inline VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  get_chaperone_9() const { return ___chaperone_9; }
	inline VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85 * get_address_of_chaperone_9() { return &___chaperone_9; }
	inline void set_chaperone_9(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  value)
	{
		___chaperone_9 = value;
	}

	inline static int32_t get_offset_of_performanceTest_10() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___performanceTest_10)); }
	inline VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  get_performanceTest_10() const { return ___performanceTest_10; }
	inline VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA * get_address_of_performanceTest_10() { return &___performanceTest_10; }
	inline void set_performanceTest_10(VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  value)
	{
		___performanceTest_10 = value;
	}

	inline static int32_t get_offset_of_touchPadMove_11() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___touchPadMove_11)); }
	inline VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  get_touchPadMove_11() const { return ___touchPadMove_11; }
	inline VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D * get_address_of_touchPadMove_11() { return &___touchPadMove_11; }
	inline void set_touchPadMove_11(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  value)
	{
		___touchPadMove_11 = value;
	}

	inline static int32_t get_offset_of_seatedZeroPoseReset_12() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___seatedZeroPoseReset_12)); }
	inline VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  get_seatedZeroPoseReset_12() const { return ___seatedZeroPoseReset_12; }
	inline VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323 * get_address_of_seatedZeroPoseReset_12() { return &___seatedZeroPoseReset_12; }
	inline void set_seatedZeroPoseReset_12(VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  value)
	{
		___seatedZeroPoseReset_12 = value;
	}

	inline static int32_t get_offset_of_screenshot_13() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___screenshot_13)); }
	inline VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  get_screenshot_13() const { return ___screenshot_13; }
	inline VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97 * get_address_of_screenshot_13() { return &___screenshot_13; }
	inline void set_screenshot_13(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  value)
	{
		___screenshot_13 = value;
	}

	inline static int32_t get_offset_of_screenshotProgress_14() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___screenshotProgress_14)); }
	inline VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  get_screenshotProgress_14() const { return ___screenshotProgress_14; }
	inline VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED * get_address_of_screenshotProgress_14() { return &___screenshotProgress_14; }
	inline void set_screenshotProgress_14(VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  value)
	{
		___screenshotProgress_14 = value;
	}

	inline static int32_t get_offset_of_applicationLaunch_15() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___applicationLaunch_15)); }
	inline VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  get_applicationLaunch_15() const { return ___applicationLaunch_15; }
	inline VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389 * get_address_of_applicationLaunch_15() { return &___applicationLaunch_15; }
	inline void set_applicationLaunch_15(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  value)
	{
		___applicationLaunch_15 = value;
	}

	inline static int32_t get_offset_of_cameraSurface_16() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___cameraSurface_16)); }
	inline VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  get_cameraSurface_16() const { return ___cameraSurface_16; }
	inline VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC * get_address_of_cameraSurface_16() { return &___cameraSurface_16; }
	inline void set_cameraSurface_16(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  value)
	{
		___cameraSurface_16 = value;
	}

	inline static int32_t get_offset_of_messageOverlay_17() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___messageOverlay_17)); }
	inline VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  get_messageOverlay_17() const { return ___messageOverlay_17; }
	inline VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1 * get_address_of_messageOverlay_17() { return &___messageOverlay_17; }
	inline void set_messageOverlay_17(VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  value)
	{
		___messageOverlay_17 = value;
	}

	inline static int32_t get_offset_of_property_18() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___property_18)); }
	inline VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  get_property_18() const { return ___property_18; }
	inline VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5 * get_address_of_property_18() { return &___property_18; }
	inline void set_property_18(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  value)
	{
		___property_18 = value;
	}

	inline static int32_t get_offset_of_dualAnalog_19() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___dualAnalog_19)); }
	inline VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  get_dualAnalog_19() const { return ___dualAnalog_19; }
	inline VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137 * get_address_of_dualAnalog_19() { return &___dualAnalog_19; }
	inline void set_dualAnalog_19(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  value)
	{
		___dualAnalog_19 = value;
	}

	inline static int32_t get_offset_of_hapticVibration_20() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___hapticVibration_20)); }
	inline VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  get_hapticVibration_20() const { return ___hapticVibration_20; }
	inline VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F * get_address_of_hapticVibration_20() { return &___hapticVibration_20; }
	inline void set_hapticVibration_20(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  value)
	{
		___hapticVibration_20 = value;
	}

	inline static int32_t get_offset_of_webConsole_21() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___webConsole_21)); }
	inline VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  get_webConsole_21() const { return ___webConsole_21; }
	inline VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75 * get_address_of_webConsole_21() { return &___webConsole_21; }
	inline void set_webConsole_21(VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  value)
	{
		___webConsole_21 = value;
	}

	inline static int32_t get_offset_of_inputBinding_22() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___inputBinding_22)); }
	inline VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  get_inputBinding_22() const { return ___inputBinding_22; }
	inline VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED * get_address_of_inputBinding_22() { return &___inputBinding_22; }
	inline void set_inputBinding_22(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  value)
	{
		___inputBinding_22 = value;
	}

	inline static int32_t get_offset_of_spatialAnchor_23() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___spatialAnchor_23)); }
	inline VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  get_spatialAnchor_23() const { return ___spatialAnchor_23; }
	inline VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473 * get_address_of_spatialAnchor_23() { return &___spatialAnchor_23; }
	inline void set_spatialAnchor_23(VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  value)
	{
		___spatialAnchor_23 = value;
	}

	inline static int32_t get_offset_of_actionManifest_24() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___actionManifest_24)); }
	inline VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  get_actionManifest_24() const { return ___actionManifest_24; }
	inline VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76 * get_address_of_actionManifest_24() { return &___actionManifest_24; }
	inline void set_actionManifest_24(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  value)
	{
		___actionManifest_24 = value;
	}

	inline static int32_t get_offset_of_progressUpdate_25() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___progressUpdate_25)); }
	inline VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  get_progressUpdate_25() const { return ___progressUpdate_25; }
	inline VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE * get_address_of_progressUpdate_25() { return &___progressUpdate_25; }
	inline void set_progressUpdate_25(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  value)
	{
		___progressUpdate_25 = value;
	}

	inline static int32_t get_offset_of_showUi_26() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___showUi_26)); }
	inline VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  get_showUi_26() const { return ___showUi_26; }
	inline VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997 * get_address_of_showUi_26() { return &___showUi_26; }
	inline void set_showUi_26(VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  value)
	{
		___showUi_26 = value;
	}

	inline static int32_t get_offset_of_showDevTools_27() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___showDevTools_27)); }
	inline VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  get_showDevTools_27() const { return ___showDevTools_27; }
	inline VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6 * get_address_of_showDevTools_27() { return &___showDevTools_27; }
	inline void set_showDevTools_27(VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  value)
	{
		___showDevTools_27 = value;
	}

	inline static int32_t get_offset_of_hdcpError_28() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___hdcpError_28)); }
	inline VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  get_hdcpError_28() const { return ___hdcpError_28; }
	inline VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E * get_address_of_hdcpError_28() { return &___hdcpError_28; }
	inline void set_hdcpError_28(VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  value)
	{
		___hdcpError_28 = value;
	}

	inline static int32_t get_offset_of_keyboard_29() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___keyboard_29)); }
	inline VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  get_keyboard_29() const { return ___keyboard_29; }
	inline VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297 * get_address_of_keyboard_29() { return &___keyboard_29; }
	inline void set_keyboard_29(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  value)
	{
		___keyboard_29 = value;
	}
};


// UnityEngine.MonoBehaviour
struct  MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_Source
struct  SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// Valve.VR.SteamVR_Action_Boolean_StateDownHandler Valve.VR.SteamVR_Action_Boolean_Source::onStateDown
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___onStateDown_11;
	// Valve.VR.SteamVR_Action_Boolean_StateUpHandler Valve.VR.SteamVR_Action_Boolean_Source::onStateUp
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___onStateUp_12;
	// Valve.VR.SteamVR_Action_Boolean_StateHandler Valve.VR.SteamVR_Action_Boolean_Source::onState
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___onState_13;
	// Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onActiveChange
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___onActiveChange_14;
	// Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onActiveBindingChange
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___onActiveBindingChange_15;
	// Valve.VR.SteamVR_Action_Boolean_ChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onChange
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___onChange_16;
	// Valve.VR.SteamVR_Action_Boolean_UpdateHandler Valve.VR.SteamVR_Action_Boolean_Source::onUpdate
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___onUpdate_17;
	// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_18;
	// Valve.VR.InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source::actionData
	InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  ___actionData_19;
	// Valve.VR.InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source::lastActionData
	InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  ___lastActionData_20;
	// Valve.VR.SteamVR_Action_Boolean Valve.VR.SteamVR_Action_Boolean_Source::booleanAction
	SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___booleanAction_21;

public:
	inline static int32_t get_offset_of_onStateDown_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onStateDown_11)); }
	inline StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * get_onStateDown_11() const { return ___onStateDown_11; }
	inline StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 ** get_address_of_onStateDown_11() { return &___onStateDown_11; }
	inline void set_onStateDown_11(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * value)
	{
		___onStateDown_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onStateDown_11), (void*)value);
	}

	inline static int32_t get_offset_of_onStateUp_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onStateUp_12)); }
	inline StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * get_onStateUp_12() const { return ___onStateUp_12; }
	inline StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 ** get_address_of_onStateUp_12() { return &___onStateUp_12; }
	inline void set_onStateUp_12(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * value)
	{
		___onStateUp_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onStateUp_12), (void*)value);
	}

	inline static int32_t get_offset_of_onState_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onState_13)); }
	inline StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * get_onState_13() const { return ___onState_13; }
	inline StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA ** get_address_of_onState_13() { return &___onState_13; }
	inline void set_onState_13(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * value)
	{
		___onState_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onState_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onActiveChange_14)); }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * get_onActiveChange_14() const { return ___onActiveChange_14; }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** get_address_of_onActiveChange_14() { return &___onActiveChange_14; }
	inline void set_onActiveChange_14(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * value)
	{
		___onActiveChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onActiveBindingChange_15)); }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * get_onActiveBindingChange_15() const { return ___onActiveBindingChange_15; }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** get_address_of_onActiveBindingChange_15() { return &___onActiveBindingChange_15; }
	inline void set_onActiveBindingChange_15(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * value)
	{
		___onActiveBindingChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onChange_16)); }
	inline ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * get_onChange_16() const { return ___onChange_16; }
	inline ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 ** get_address_of_onChange_16() { return &___onChange_16; }
	inline void set_onChange_16(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * value)
	{
		___onChange_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_16), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onUpdate_17)); }
	inline UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * get_onUpdate_17() const { return ___onUpdate_17; }
	inline UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B ** get_address_of_onUpdate_17() { return &___onUpdate_17; }
	inline void set_onUpdate_17(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * value)
	{
		___onUpdate_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_17), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___U3ClastActiveU3Ek__BackingField_18)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_18() const { return ___U3ClastActiveU3Ek__BackingField_18; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_18() { return &___U3ClastActiveU3Ek__BackingField_18; }
	inline void set_U3ClastActiveU3Ek__BackingField_18(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_actionData_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___actionData_19)); }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  get_actionData_19() const { return ___actionData_19; }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * get_address_of_actionData_19() { return &___actionData_19; }
	inline void set_actionData_19(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  value)
	{
		___actionData_19 = value;
	}

	inline static int32_t get_offset_of_lastActionData_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___lastActionData_20)); }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  get_lastActionData_20() const { return ___lastActionData_20; }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * get_address_of_lastActionData_20() { return &___lastActionData_20; }
	inline void set_lastActionData_20(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  value)
	{
		___lastActionData_20 = value;
	}

	inline static int32_t get_offset_of_booleanAction_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___booleanAction_21)); }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * get_booleanAction_21() const { return ___booleanAction_21; }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 ** get_address_of_booleanAction_21() { return &___booleanAction_21; }
	inline void set_booleanAction_21(SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * value)
	{
		___booleanAction_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___booleanAction_21), (void*)value);
	}
};

struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Boolean_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741  : public SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_In_Source_Map_1_t65B6CC75798A38C0D5EA4E4B15FB9C8DE87145B4  : public SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t65B6CC75798A38C0D5EA4E4B15FB9C8DE87145B4, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct  SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D  : public SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct  SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253  : public SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Pose_Source
struct  SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// Valve.VR.ETrackingUniverseOrigin Valve.VR.SteamVR_Action_Pose_Source::universeOrigin
	int32_t ___universeOrigin_10;
	// System.Single Valve.VR.SteamVR_Action_Pose_Source::changeTolerance
	float ___changeTolerance_12;
	// Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onActiveChange
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onActiveBindingChange
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Pose_ChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onChange
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___onChange_15;
	// Valve.VR.SteamVR_Action_Pose_UpdateHandler Valve.VR.SteamVR_Action_Pose_Source::onUpdate
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___onUpdate_16;
	// Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onTrackingChanged
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___onTrackingChanged_17;
	// Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onValidPoseChanged
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___onValidPoseChanged_18;
	// Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onDeviceConnectedChanged
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___onDeviceConnectedChanged_19;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_22;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<localPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClocalPositionU3Ek__BackingField_23;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::<localRotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3ClocalRotationU3Ek__BackingField_24;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastLocalPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastLocalPositionU3Ek__BackingField_25;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::<lastLocalRotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3ClastLocalRotationU3Ek__BackingField_26;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<velocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CvelocityU3Ek__BackingField_27;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastVelocityU3Ek__BackingField_28;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<angularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CangularVelocityU3Ek__BackingField_29;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastAngularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastAngularVelocityU3Ek__BackingField_30;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::poseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___poseActionData_31;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::lastPoseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___lastPoseActionData_32;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::tempPoseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___tempPoseActionData_33;
	// Valve.VR.SteamVR_Action_Pose Valve.VR.SteamVR_Action_Pose_Source::poseAction
	SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___poseAction_34;

public:
	inline static int32_t get_offset_of_universeOrigin_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___universeOrigin_10)); }
	inline int32_t get_universeOrigin_10() const { return ___universeOrigin_10; }
	inline int32_t* get_address_of_universeOrigin_10() { return &___universeOrigin_10; }
	inline void set_universeOrigin_10(int32_t value)
	{
		___universeOrigin_10 = value;
	}

	inline static int32_t get_offset_of_changeTolerance_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___changeTolerance_12)); }
	inline float get_changeTolerance_12() const { return ___changeTolerance_12; }
	inline float* get_address_of_changeTolerance_12() { return &___changeTolerance_12; }
	inline void set_changeTolerance_12(float value)
	{
		___changeTolerance_12 = value;
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onChange_15)); }
	inline ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onUpdate_16)); }
	inline UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onTrackingChanged_17)); }
	inline TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * get_onTrackingChanged_17() const { return ___onTrackingChanged_17; }
	inline TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 ** get_address_of_onTrackingChanged_17() { return &___onTrackingChanged_17; }
	inline void set_onTrackingChanged_17(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * value)
	{
		___onTrackingChanged_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_17), (void*)value);
	}

	inline static int32_t get_offset_of_onValidPoseChanged_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onValidPoseChanged_18)); }
	inline ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * get_onValidPoseChanged_18() const { return ___onValidPoseChanged_18; }
	inline ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A ** get_address_of_onValidPoseChanged_18() { return &___onValidPoseChanged_18; }
	inline void set_onValidPoseChanged_18(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * value)
	{
		___onValidPoseChanged_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onValidPoseChanged_18), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceConnectedChanged_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onDeviceConnectedChanged_19)); }
	inline DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * get_onDeviceConnectedChanged_19() const { return ___onDeviceConnectedChanged_19; }
	inline DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 ** get_address_of_onDeviceConnectedChanged_19() { return &___onDeviceConnectedChanged_19; }
	inline void set_onDeviceConnectedChanged_19(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * value)
	{
		___onDeviceConnectedChanged_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceConnectedChanged_19), (void*)value);
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CchangedU3Ek__BackingField_20)); }
	inline bool get_U3CchangedU3Ek__BackingField_20() const { return ___U3CchangedU3Ek__BackingField_20; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_20() { return &___U3CchangedU3Ek__BackingField_20; }
	inline void set_U3CchangedU3Ek__BackingField_20(bool value)
	{
		___U3CchangedU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastChangedU3Ek__BackingField_21)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_21() const { return ___U3ClastChangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_21() { return &___U3ClastChangedU3Ek__BackingField_21; }
	inline void set_U3ClastChangedU3Ek__BackingField_21(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastActiveU3Ek__BackingField_22)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_22() const { return ___U3ClastActiveU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_22() { return &___U3ClastActiveU3Ek__BackingField_22; }
	inline void set_U3ClastActiveU3Ek__BackingField_22(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClocalPositionU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClocalPositionU3Ek__BackingField_23)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClocalPositionU3Ek__BackingField_23() const { return ___U3ClocalPositionU3Ek__BackingField_23; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClocalPositionU3Ek__BackingField_23() { return &___U3ClocalPositionU3Ek__BackingField_23; }
	inline void set_U3ClocalPositionU3Ek__BackingField_23(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClocalPositionU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_U3ClocalRotationU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClocalRotationU3Ek__BackingField_24)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3ClocalRotationU3Ek__BackingField_24() const { return ___U3ClocalRotationU3Ek__BackingField_24; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3ClocalRotationU3Ek__BackingField_24() { return &___U3ClocalRotationU3Ek__BackingField_24; }
	inline void set_U3ClocalRotationU3Ek__BackingField_24(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3ClocalRotationU3Ek__BackingField_24 = value;
	}

	inline static int32_t get_offset_of_U3ClastLocalPositionU3Ek__BackingField_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastLocalPositionU3Ek__BackingField_25)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastLocalPositionU3Ek__BackingField_25() const { return ___U3ClastLocalPositionU3Ek__BackingField_25; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastLocalPositionU3Ek__BackingField_25() { return &___U3ClastLocalPositionU3Ek__BackingField_25; }
	inline void set_U3ClastLocalPositionU3Ek__BackingField_25(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastLocalPositionU3Ek__BackingField_25 = value;
	}

	inline static int32_t get_offset_of_U3ClastLocalRotationU3Ek__BackingField_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastLocalRotationU3Ek__BackingField_26)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3ClastLocalRotationU3Ek__BackingField_26() const { return ___U3ClastLocalRotationU3Ek__BackingField_26; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3ClastLocalRotationU3Ek__BackingField_26() { return &___U3ClastLocalRotationU3Ek__BackingField_26; }
	inline void set_U3ClastLocalRotationU3Ek__BackingField_26(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3ClastLocalRotationU3Ek__BackingField_26 = value;
	}

	inline static int32_t get_offset_of_U3CvelocityU3Ek__BackingField_27() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CvelocityU3Ek__BackingField_27)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CvelocityU3Ek__BackingField_27() const { return ___U3CvelocityU3Ek__BackingField_27; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CvelocityU3Ek__BackingField_27() { return &___U3CvelocityU3Ek__BackingField_27; }
	inline void set_U3CvelocityU3Ek__BackingField_27(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CvelocityU3Ek__BackingField_27 = value;
	}

	inline static int32_t get_offset_of_U3ClastVelocityU3Ek__BackingField_28() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastVelocityU3Ek__BackingField_28)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastVelocityU3Ek__BackingField_28() const { return ___U3ClastVelocityU3Ek__BackingField_28; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastVelocityU3Ek__BackingField_28() { return &___U3ClastVelocityU3Ek__BackingField_28; }
	inline void set_U3ClastVelocityU3Ek__BackingField_28(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastVelocityU3Ek__BackingField_28 = value;
	}

	inline static int32_t get_offset_of_U3CangularVelocityU3Ek__BackingField_29() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CangularVelocityU3Ek__BackingField_29)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CangularVelocityU3Ek__BackingField_29() const { return ___U3CangularVelocityU3Ek__BackingField_29; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CangularVelocityU3Ek__BackingField_29() { return &___U3CangularVelocityU3Ek__BackingField_29; }
	inline void set_U3CangularVelocityU3Ek__BackingField_29(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CangularVelocityU3Ek__BackingField_29 = value;
	}

	inline static int32_t get_offset_of_U3ClastAngularVelocityU3Ek__BackingField_30() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastAngularVelocityU3Ek__BackingField_30)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastAngularVelocityU3Ek__BackingField_30() const { return ___U3ClastAngularVelocityU3Ek__BackingField_30; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastAngularVelocityU3Ek__BackingField_30() { return &___U3ClastAngularVelocityU3Ek__BackingField_30; }
	inline void set_U3ClastAngularVelocityU3Ek__BackingField_30(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastAngularVelocityU3Ek__BackingField_30 = value;
	}

	inline static int32_t get_offset_of_poseActionData_31() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___poseActionData_31)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_poseActionData_31() const { return ___poseActionData_31; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_poseActionData_31() { return &___poseActionData_31; }
	inline void set_poseActionData_31(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___poseActionData_31 = value;
	}

	inline static int32_t get_offset_of_lastPoseActionData_32() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___lastPoseActionData_32)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_lastPoseActionData_32() const { return ___lastPoseActionData_32; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_lastPoseActionData_32() { return &___lastPoseActionData_32; }
	inline void set_lastPoseActionData_32(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___lastPoseActionData_32 = value;
	}

	inline static int32_t get_offset_of_tempPoseActionData_33() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___tempPoseActionData_33)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_tempPoseActionData_33() const { return ___tempPoseActionData_33; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_tempPoseActionData_33() { return &___tempPoseActionData_33; }
	inline void set_tempPoseActionData_33(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___tempPoseActionData_33 = value;
	}

	inline static int32_t get_offset_of_poseAction_34() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___poseAction_34)); }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * get_poseAction_34() const { return ___poseAction_34; }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C ** get_address_of_poseAction_34() { return &___poseAction_34; }
	inline void set_poseAction_34(SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * value)
	{
		___poseAction_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poseAction_34), (void*)value);
	}
};

struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Pose_Source::poseActionData_size
	uint32_t ___poseActionData_size_11;
	// System.Single Valve.VR.SteamVR_Action_Pose_Source::framesAhead
	float ___framesAhead_35;

public:
	inline static int32_t get_offset_of_poseActionData_size_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields, ___poseActionData_size_11)); }
	inline uint32_t get_poseActionData_size_11() const { return ___poseActionData_size_11; }
	inline uint32_t* get_address_of_poseActionData_size_11() { return &___poseActionData_size_11; }
	inline void set_poseActionData_size_11(uint32_t value)
	{
		___poseActionData_size_11 = value;
	}

	inline static int32_t get_offset_of_framesAhead_35() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields, ___framesAhead_35)); }
	inline float get_framesAhead_35() const { return ___framesAhead_35; }
	inline float* get_address_of_framesAhead_35() { return &___framesAhead_35; }
	inline void set_framesAhead_35(float value)
	{
		___framesAhead_35 = value;
	}
};


// Valve.VR.SteamVR_Action_Single_Source
struct  SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Single_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Single_AxisHandler Valve.VR.SteamVR_Action_Single_Source::onAxis
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Single_ActiveChangeHandler Valve.VR.SteamVR_Action_Single_Source::onActiveChange
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Single_ActiveChangeHandler Valve.VR.SteamVR_Action_Single_Source::onActiveBindingChange
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Single_ChangeHandler Valve.VR.SteamVR_Action_Single_Source::onChange
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___onChange_15;
	// Valve.VR.SteamVR_Action_Single_UpdateHandler Valve.VR.SteamVR_Action_Single_Source::onUpdate
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___onUpdate_16;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_17;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_18;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_19;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Single_Source::actionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___actionData_20;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Single_Source::lastActionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___lastActionData_21;
	// Valve.VR.SteamVR_Action_Single Valve.VR.SteamVR_Action_Single_Source::singleAction
	SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___singleAction_22;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onAxis_12)); }
	inline AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onChange_15)); }
	inline ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onUpdate_16)); }
	inline UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3CchangedU3Ek__BackingField_17)); }
	inline bool get_U3CchangedU3Ek__BackingField_17() const { return ___U3CchangedU3Ek__BackingField_17; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_17() { return &___U3CchangedU3Ek__BackingField_17; }
	inline void set_U3CchangedU3Ek__BackingField_17(bool value)
	{
		___U3CchangedU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3ClastChangedU3Ek__BackingField_18)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_18() const { return ___U3ClastChangedU3Ek__BackingField_18; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_18() { return &___U3ClastChangedU3Ek__BackingField_18; }
	inline void set_U3ClastChangedU3Ek__BackingField_18(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3ClastActiveU3Ek__BackingField_19)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_19() const { return ___U3ClastActiveU3Ek__BackingField_19; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_19() { return &___U3ClastActiveU3Ek__BackingField_19; }
	inline void set_U3ClastActiveU3Ek__BackingField_19(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_actionData_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___actionData_20)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_actionData_20() const { return ___actionData_20; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_actionData_20() { return &___actionData_20; }
	inline void set_actionData_20(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___actionData_20 = value;
	}

	inline static int32_t get_offset_of_lastActionData_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___lastActionData_21)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_lastActionData_21() const { return ___lastActionData_21; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_lastActionData_21() { return &___lastActionData_21; }
	inline void set_lastActionData_21(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___lastActionData_21 = value;
	}

	inline static int32_t get_offset_of_singleAction_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___singleAction_22)); }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * get_singleAction_22() const { return ___singleAction_22; }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 ** get_address_of_singleAction_22() { return &___singleAction_22; }
	inline void set_singleAction_22(SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * value)
	{
		___singleAction_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___singleAction_22), (void*)value);
	}
};

struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Single_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Vector2_Source
struct  SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Vector2_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Vector2_AxisHandler Valve.VR.SteamVR_Action_Vector2_Source::onAxis
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onActiveChange
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onActiveBindingChange
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Vector2_ChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onChange
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___onChange_15;
	// Valve.VR.SteamVR_Action_Vector2_UpdateHandler Valve.VR.SteamVR_Action_Vector2_Source::onUpdate
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___onUpdate_16;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<axis>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CaxisU3Ek__BackingField_17;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<lastAxis>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3ClastAxisU3Ek__BackingField_18;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<delta>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CdeltaU3Ek__BackingField_19;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<lastDelta>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3ClastDeltaU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_22;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_23;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector2_Source::actionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___actionData_24;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector2_Source::lastActionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___lastActionData_25;
	// Valve.VR.SteamVR_Action_Vector2 Valve.VR.SteamVR_Action_Vector2_Source::vector2Action
	SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___vector2Action_26;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onAxis_12)); }
	inline AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onActiveChange_13)); }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onChange_15)); }
	inline ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onUpdate_16)); }
	inline UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CaxisU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CaxisU3Ek__BackingField_17)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CaxisU3Ek__BackingField_17() const { return ___U3CaxisU3Ek__BackingField_17; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CaxisU3Ek__BackingField_17() { return &___U3CaxisU3Ek__BackingField_17; }
	inline void set_U3CaxisU3Ek__BackingField_17(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CaxisU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastAxisU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastAxisU3Ek__BackingField_18)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3ClastAxisU3Ek__BackingField_18() const { return ___U3ClastAxisU3Ek__BackingField_18; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3ClastAxisU3Ek__BackingField_18() { return &___U3ClastAxisU3Ek__BackingField_18; }
	inline void set_U3ClastAxisU3Ek__BackingField_18(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3ClastAxisU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3CdeltaU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CdeltaU3Ek__BackingField_19)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CdeltaU3Ek__BackingField_19() const { return ___U3CdeltaU3Ek__BackingField_19; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CdeltaU3Ek__BackingField_19() { return &___U3CdeltaU3Ek__BackingField_19; }
	inline void set_U3CdeltaU3Ek__BackingField_19(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CdeltaU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_U3ClastDeltaU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastDeltaU3Ek__BackingField_20)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3ClastDeltaU3Ek__BackingField_20() const { return ___U3ClastDeltaU3Ek__BackingField_20; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3ClastDeltaU3Ek__BackingField_20() { return &___U3ClastDeltaU3Ek__BackingField_20; }
	inline void set_U3ClastDeltaU3Ek__BackingField_20(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3ClastDeltaU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CchangedU3Ek__BackingField_21)); }
	inline bool get_U3CchangedU3Ek__BackingField_21() const { return ___U3CchangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_21() { return &___U3CchangedU3Ek__BackingField_21; }
	inline void set_U3CchangedU3Ek__BackingField_21(bool value)
	{
		___U3CchangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastChangedU3Ek__BackingField_22)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_22() const { return ___U3ClastChangedU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_22() { return &___U3ClastChangedU3Ek__BackingField_22; }
	inline void set_U3ClastChangedU3Ek__BackingField_22(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastActiveU3Ek__BackingField_23)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_23() const { return ___U3ClastActiveU3Ek__BackingField_23; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_23() { return &___U3ClastActiveU3Ek__BackingField_23; }
	inline void set_U3ClastActiveU3Ek__BackingField_23(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_actionData_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___actionData_24)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_actionData_24() const { return ___actionData_24; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_actionData_24() { return &___actionData_24; }
	inline void set_actionData_24(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___actionData_24 = value;
	}

	inline static int32_t get_offset_of_lastActionData_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___lastActionData_25)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_lastActionData_25() const { return ___lastActionData_25; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_lastActionData_25() { return &___lastActionData_25; }
	inline void set_lastActionData_25(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___lastActionData_25 = value;
	}

	inline static int32_t get_offset_of_vector2Action_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___vector2Action_26)); }
	inline SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * get_vector2Action_26() const { return ___vector2Action_26; }
	inline SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 ** get_address_of_vector2Action_26() { return &___vector2Action_26; }
	inline void set_vector2Action_26(SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * value)
	{
		___vector2Action_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___vector2Action_26), (void*)value);
	}
};

struct SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Vector2_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Vector3_Source
struct  SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Vector3_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Vector3_AxisHandler Valve.VR.SteamVR_Action_Vector3_Source::onAxis
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler Valve.VR.SteamVR_Action_Vector3_Source::onActiveChange
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler Valve.VR.SteamVR_Action_Vector3_Source::onActiveBindingChange
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Vector3_ChangeHandler Valve.VR.SteamVR_Action_Vector3_Source::onChange
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___onChange_15;
	// Valve.VR.SteamVR_Action_Vector3_UpdateHandler Valve.VR.SteamVR_Action_Vector3_Source::onUpdate
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___onUpdate_16;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::<axis>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CaxisU3Ek__BackingField_17;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::<lastAxis>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastAxisU3Ek__BackingField_18;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::<delta>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CdeltaU3Ek__BackingField_19;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::<lastDelta>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastDeltaU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_22;
	// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_23;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector3_Source::actionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___actionData_24;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector3_Source::lastActionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___lastActionData_25;
	// Valve.VR.SteamVR_Action_Vector3 Valve.VR.SteamVR_Action_Vector3_Source::vector3Action
	SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___vector3Action_26;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___onAxis_12)); }
	inline AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___onChange_15)); }
	inline ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___onUpdate_16)); }
	inline UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CaxisU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3CaxisU3Ek__BackingField_17)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CaxisU3Ek__BackingField_17() const { return ___U3CaxisU3Ek__BackingField_17; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CaxisU3Ek__BackingField_17() { return &___U3CaxisU3Ek__BackingField_17; }
	inline void set_U3CaxisU3Ek__BackingField_17(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CaxisU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastAxisU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3ClastAxisU3Ek__BackingField_18)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastAxisU3Ek__BackingField_18() const { return ___U3ClastAxisU3Ek__BackingField_18; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastAxisU3Ek__BackingField_18() { return &___U3ClastAxisU3Ek__BackingField_18; }
	inline void set_U3ClastAxisU3Ek__BackingField_18(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastAxisU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3CdeltaU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3CdeltaU3Ek__BackingField_19)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CdeltaU3Ek__BackingField_19() const { return ___U3CdeltaU3Ek__BackingField_19; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CdeltaU3Ek__BackingField_19() { return &___U3CdeltaU3Ek__BackingField_19; }
	inline void set_U3CdeltaU3Ek__BackingField_19(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CdeltaU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_U3ClastDeltaU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3ClastDeltaU3Ek__BackingField_20)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastDeltaU3Ek__BackingField_20() const { return ___U3ClastDeltaU3Ek__BackingField_20; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastDeltaU3Ek__BackingField_20() { return &___U3ClastDeltaU3Ek__BackingField_20; }
	inline void set_U3ClastDeltaU3Ek__BackingField_20(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastDeltaU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3CchangedU3Ek__BackingField_21)); }
	inline bool get_U3CchangedU3Ek__BackingField_21() const { return ___U3CchangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_21() { return &___U3CchangedU3Ek__BackingField_21; }
	inline void set_U3CchangedU3Ek__BackingField_21(bool value)
	{
		___U3CchangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3ClastChangedU3Ek__BackingField_22)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_22() const { return ___U3ClastChangedU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_22() { return &___U3ClastChangedU3Ek__BackingField_22; }
	inline void set_U3ClastChangedU3Ek__BackingField_22(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3ClastActiveU3Ek__BackingField_23)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_23() const { return ___U3ClastActiveU3Ek__BackingField_23; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_23() { return &___U3ClastActiveU3Ek__BackingField_23; }
	inline void set_U3ClastActiveU3Ek__BackingField_23(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_actionData_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___actionData_24)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_actionData_24() const { return ___actionData_24; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_actionData_24() { return &___actionData_24; }
	inline void set_actionData_24(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___actionData_24 = value;
	}

	inline static int32_t get_offset_of_lastActionData_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___lastActionData_25)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_lastActionData_25() const { return ___lastActionData_25; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_lastActionData_25() { return &___lastActionData_25; }
	inline void set_lastActionData_25(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___lastActionData_25 = value;
	}

	inline static int32_t get_offset_of_vector3Action_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___vector3Action_26)); }
	inline SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * get_vector3Action_26() const { return ___vector3Action_26; }
	inline SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 ** get_address_of_vector3Action_26() { return &___vector3Action_26; }
	inline void set_vector3Action_26(SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * value)
	{
		___vector3Action_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___vector3Action_26), (void*)value);
	}
};

struct SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Vector3_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Vibration_Source
struct  SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151  : public SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6
{
public:
	// Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler Valve.VR.SteamVR_Action_Vibration_Source::onActiveChange
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___onActiveChange_3;
	// Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler Valve.VR.SteamVR_Action_Vibration_Source::onActiveBindingChange
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___onActiveBindingChange_4;
	// Valve.VR.SteamVR_Action_Vibration_ExecuteHandler Valve.VR.SteamVR_Action_Vibration_Source::onExecute
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___onExecute_5;
	// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_6;
	// System.Single Valve.VR.SteamVR_Action_Vibration_Source::<timeLastExecuted>k__BackingField
	float ___U3CtimeLastExecutedU3Ek__BackingField_7;
	// Valve.VR.SteamVR_Action_Vibration Valve.VR.SteamVR_Action_Vibration_Source::vibrationAction
	SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___vibrationAction_8;

public:
	inline static int32_t get_offset_of_onActiveChange_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___onActiveChange_3)); }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * get_onActiveChange_3() const { return ___onActiveChange_3; }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** get_address_of_onActiveChange_3() { return &___onActiveChange_3; }
	inline void set_onActiveChange_3(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * value)
	{
		___onActiveChange_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_3), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___onActiveBindingChange_4)); }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * get_onActiveBindingChange_4() const { return ___onActiveBindingChange_4; }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** get_address_of_onActiveBindingChange_4() { return &___onActiveBindingChange_4; }
	inline void set_onActiveBindingChange_4(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * value)
	{
		___onActiveBindingChange_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_4), (void*)value);
	}

	inline static int32_t get_offset_of_onExecute_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___onExecute_5)); }
	inline ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * get_onExecute_5() const { return ___onExecute_5; }
	inline ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 ** get_address_of_onExecute_5() { return &___onExecute_5; }
	inline void set_onExecute_5(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * value)
	{
		___onExecute_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onExecute_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___U3ClastActiveU3Ek__BackingField_6)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_6() const { return ___U3ClastActiveU3Ek__BackingField_6; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_6() { return &___U3ClastActiveU3Ek__BackingField_6; }
	inline void set_U3ClastActiveU3Ek__BackingField_6(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CtimeLastExecutedU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___U3CtimeLastExecutedU3Ek__BackingField_7)); }
	inline float get_U3CtimeLastExecutedU3Ek__BackingField_7() const { return ___U3CtimeLastExecutedU3Ek__BackingField_7; }
	inline float* get_address_of_U3CtimeLastExecutedU3Ek__BackingField_7() { return &___U3CtimeLastExecutedU3Ek__BackingField_7; }
	inline void set_U3CtimeLastExecutedU3Ek__BackingField_7(float value)
	{
		___U3CtimeLastExecutedU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_vibrationAction_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___vibrationAction_8)); }
	inline SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * get_vibrationAction_8() const { return ___vibrationAction_8; }
	inline SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB ** get_address_of_vibrationAction_8() { return &___vibrationAction_8; }
	inline void set_vibrationAction_8(SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * value)
	{
		___vibrationAction_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___vibrationAction_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vibration_Source_Map
struct  SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A  : public SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7
{
public:

public:
};


// Valve.VR.VREvent_t
struct  VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C 
{
public:
	// System.UInt32 Valve.VR.VREvent_t::eventType
	uint32_t ___eventType_0;
	// System.UInt32 Valve.VR.VREvent_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Single Valve.VR.VREvent_t::eventAgeSeconds
	float ___eventAgeSeconds_2;
	// Valve.VR.VREvent_Data_t Valve.VR.VREvent_t::data
	VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  ___data_3;

public:
	inline static int32_t get_offset_of_eventType_0() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___eventType_0)); }
	inline uint32_t get_eventType_0() const { return ___eventType_0; }
	inline uint32_t* get_address_of_eventType_0() { return &___eventType_0; }
	inline void set_eventType_0(uint32_t value)
	{
		___eventType_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_eventAgeSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___eventAgeSeconds_2)); }
	inline float get_eventAgeSeconds_2() const { return ___eventAgeSeconds_2; }
	inline float* get_address_of_eventAgeSeconds_2() { return &___eventAgeSeconds_2; }
	inline void set_eventAgeSeconds_2(float value)
	{
		___eventAgeSeconds_2 = value;
	}

	inline static int32_t get_offset_of_data_3() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___data_3)); }
	inline VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  get_data_3() const { return ___data_3; }
	inline VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0 * get_address_of_data_3() { return &___data_3; }
	inline void set_data_3(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  value)
	{
		___data_3 = value;
	}
};


// UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>
struct  UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125  : public SteamVR_Action_In_Source_Map_1_t65B6CC75798A38C0D5EA4E4B15FB9C8DE87145B4
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_Source_Map
struct  SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37  : public SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_Source
struct  SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72  : public SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27
{
public:
	// Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onActiveChange
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___onActiveChange_37;
	// Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onActiveBindingChange
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___onActiveBindingChange_38;
	// Valve.VR.SteamVR_Action_Skeleton_ChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onChange
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___onChange_39;
	// Valve.VR.SteamVR_Action_Skeleton_UpdateHandler Valve.VR.SteamVR_Action_Skeleton_Source::onUpdate
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___onUpdate_40;
	// Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onTrackingChanged
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___onTrackingChanged_41;
	// Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onValidPoseChanged
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___onValidPoseChanged_42;
	// Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onDeviceConnectedChanged
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___onDeviceConnectedChanged_43;
	// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::<bonePositions>k__BackingField
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3CbonePositionsU3Ek__BackingField_44;
	// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::<boneRotations>k__BackingField
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___U3CboneRotationsU3Ek__BackingField_45;
	// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastBonePositions>k__BackingField
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3ClastBonePositionsU3Ek__BackingField_46;
	// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastBoneRotations>k__BackingField
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___U3ClastBoneRotationsU3Ek__BackingField_47;
	// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton_Source::<rangeOfMotion>k__BackingField
	int32_t ___U3CrangeOfMotionU3Ek__BackingField_48;
	// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton_Source::<skeletalTransformSpace>k__BackingField
	int32_t ___U3CskeletalTransformSpaceU3Ek__BackingField_49;
	// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton_Source::<summaryDataType>k__BackingField
	int32_t ___U3CsummaryDataTypeU3Ek__BackingField_50;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<fingerCurls>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3CfingerCurlsU3Ek__BackingField_51;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<fingerSplays>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3CfingerSplaysU3Ek__BackingField_52;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastFingerCurls>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3ClastFingerCurlsU3Ek__BackingField_53;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastFingerSplays>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3ClastFingerSplaysU3Ek__BackingField_54;
	// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::<poseChanged>k__BackingField
	bool ___U3CposeChangedU3Ek__BackingField_55;
	// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::<onlyUpdateSummaryData>k__BackingField
	bool ___U3ConlyUpdateSummaryDataU3Ek__BackingField_56;
	// Valve.VR.VRSkeletalSummaryData_t Valve.VR.SteamVR_Action_Skeleton_Source::skeletalSummaryData
	VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  ___skeletalSummaryData_57;
	// Valve.VR.VRSkeletalSummaryData_t Valve.VR.SteamVR_Action_Skeleton_Source::lastSkeletalSummaryData
	VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  ___lastSkeletalSummaryData_58;
	// Valve.VR.SteamVR_Action_Skeleton Valve.VR.SteamVR_Action_Skeleton_Source::skeletonAction
	SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___skeletonAction_59;
	// Valve.VR.VRBoneTransform_t[] Valve.VR.SteamVR_Action_Skeleton_Source::tempBoneTransforms
	VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* ___tempBoneTransforms_60;
	// Valve.VR.InputSkeletalActionData_t Valve.VR.SteamVR_Action_Skeleton_Source::skeletonActionData
	InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  ___skeletonActionData_61;
	// Valve.VR.InputSkeletalActionData_t Valve.VR.SteamVR_Action_Skeleton_Source::lastSkeletonActionData
	InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  ___lastSkeletonActionData_62;
	// Valve.VR.InputSkeletalActionData_t Valve.VR.SteamVR_Action_Skeleton_Source::tempSkeletonActionData
	InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  ___tempSkeletonActionData_63;

public:
	inline static int32_t get_offset_of_onActiveChange_37() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onActiveChange_37)); }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * get_onActiveChange_37() const { return ___onActiveChange_37; }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** get_address_of_onActiveChange_37() { return &___onActiveChange_37; }
	inline void set_onActiveChange_37(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * value)
	{
		___onActiveChange_37 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_37), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_38() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onActiveBindingChange_38)); }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * get_onActiveBindingChange_38() const { return ___onActiveBindingChange_38; }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** get_address_of_onActiveBindingChange_38() { return &___onActiveBindingChange_38; }
	inline void set_onActiveBindingChange_38(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * value)
	{
		___onActiveBindingChange_38 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_38), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_39() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onChange_39)); }
	inline ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * get_onChange_39() const { return ___onChange_39; }
	inline ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 ** get_address_of_onChange_39() { return &___onChange_39; }
	inline void set_onChange_39(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * value)
	{
		___onChange_39 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_39), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_40() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onUpdate_40)); }
	inline UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * get_onUpdate_40() const { return ___onUpdate_40; }
	inline UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 ** get_address_of_onUpdate_40() { return &___onUpdate_40; }
	inline void set_onUpdate_40(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * value)
	{
		___onUpdate_40 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_40), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_41() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onTrackingChanged_41)); }
	inline TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * get_onTrackingChanged_41() const { return ___onTrackingChanged_41; }
	inline TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 ** get_address_of_onTrackingChanged_41() { return &___onTrackingChanged_41; }
	inline void set_onTrackingChanged_41(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * value)
	{
		___onTrackingChanged_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_41), (void*)value);
	}

	inline static int32_t get_offset_of_onValidPoseChanged_42() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onValidPoseChanged_42)); }
	inline ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * get_onValidPoseChanged_42() const { return ___onValidPoseChanged_42; }
	inline ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 ** get_address_of_onValidPoseChanged_42() { return &___onValidPoseChanged_42; }
	inline void set_onValidPoseChanged_42(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * value)
	{
		___onValidPoseChanged_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onValidPoseChanged_42), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceConnectedChanged_43() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onDeviceConnectedChanged_43)); }
	inline DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * get_onDeviceConnectedChanged_43() const { return ___onDeviceConnectedChanged_43; }
	inline DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 ** get_address_of_onDeviceConnectedChanged_43() { return &___onDeviceConnectedChanged_43; }
	inline void set_onDeviceConnectedChanged_43(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * value)
	{
		___onDeviceConnectedChanged_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceConnectedChanged_43), (void*)value);
	}

	inline static int32_t get_offset_of_U3CbonePositionsU3Ek__BackingField_44() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CbonePositionsU3Ek__BackingField_44)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3CbonePositionsU3Ek__BackingField_44() const { return ___U3CbonePositionsU3Ek__BackingField_44; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3CbonePositionsU3Ek__BackingField_44() { return &___U3CbonePositionsU3Ek__BackingField_44; }
	inline void set_U3CbonePositionsU3Ek__BackingField_44(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3CbonePositionsU3Ek__BackingField_44 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CbonePositionsU3Ek__BackingField_44), (void*)value);
	}

	inline static int32_t get_offset_of_U3CboneRotationsU3Ek__BackingField_45() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CboneRotationsU3Ek__BackingField_45)); }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* get_U3CboneRotationsU3Ek__BackingField_45() const { return ___U3CboneRotationsU3Ek__BackingField_45; }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3** get_address_of_U3CboneRotationsU3Ek__BackingField_45() { return &___U3CboneRotationsU3Ek__BackingField_45; }
	inline void set_U3CboneRotationsU3Ek__BackingField_45(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* value)
	{
		___U3CboneRotationsU3Ek__BackingField_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CboneRotationsU3Ek__BackingField_45), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastBonePositionsU3Ek__BackingField_46() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastBonePositionsU3Ek__BackingField_46)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3ClastBonePositionsU3Ek__BackingField_46() const { return ___U3ClastBonePositionsU3Ek__BackingField_46; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3ClastBonePositionsU3Ek__BackingField_46() { return &___U3ClastBonePositionsU3Ek__BackingField_46; }
	inline void set_U3ClastBonePositionsU3Ek__BackingField_46(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3ClastBonePositionsU3Ek__BackingField_46 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastBonePositionsU3Ek__BackingField_46), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastBoneRotationsU3Ek__BackingField_47() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastBoneRotationsU3Ek__BackingField_47)); }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* get_U3ClastBoneRotationsU3Ek__BackingField_47() const { return ___U3ClastBoneRotationsU3Ek__BackingField_47; }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3** get_address_of_U3ClastBoneRotationsU3Ek__BackingField_47() { return &___U3ClastBoneRotationsU3Ek__BackingField_47; }
	inline void set_U3ClastBoneRotationsU3Ek__BackingField_47(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* value)
	{
		___U3ClastBoneRotationsU3Ek__BackingField_47 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastBoneRotationsU3Ek__BackingField_47), (void*)value);
	}

	inline static int32_t get_offset_of_U3CrangeOfMotionU3Ek__BackingField_48() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CrangeOfMotionU3Ek__BackingField_48)); }
	inline int32_t get_U3CrangeOfMotionU3Ek__BackingField_48() const { return ___U3CrangeOfMotionU3Ek__BackingField_48; }
	inline int32_t* get_address_of_U3CrangeOfMotionU3Ek__BackingField_48() { return &___U3CrangeOfMotionU3Ek__BackingField_48; }
	inline void set_U3CrangeOfMotionU3Ek__BackingField_48(int32_t value)
	{
		___U3CrangeOfMotionU3Ek__BackingField_48 = value;
	}

	inline static int32_t get_offset_of_U3CskeletalTransformSpaceU3Ek__BackingField_49() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CskeletalTransformSpaceU3Ek__BackingField_49)); }
	inline int32_t get_U3CskeletalTransformSpaceU3Ek__BackingField_49() const { return ___U3CskeletalTransformSpaceU3Ek__BackingField_49; }
	inline int32_t* get_address_of_U3CskeletalTransformSpaceU3Ek__BackingField_49() { return &___U3CskeletalTransformSpaceU3Ek__BackingField_49; }
	inline void set_U3CskeletalTransformSpaceU3Ek__BackingField_49(int32_t value)
	{
		___U3CskeletalTransformSpaceU3Ek__BackingField_49 = value;
	}

	inline static int32_t get_offset_of_U3CsummaryDataTypeU3Ek__BackingField_50() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CsummaryDataTypeU3Ek__BackingField_50)); }
	inline int32_t get_U3CsummaryDataTypeU3Ek__BackingField_50() const { return ___U3CsummaryDataTypeU3Ek__BackingField_50; }
	inline int32_t* get_address_of_U3CsummaryDataTypeU3Ek__BackingField_50() { return &___U3CsummaryDataTypeU3Ek__BackingField_50; }
	inline void set_U3CsummaryDataTypeU3Ek__BackingField_50(int32_t value)
	{
		___U3CsummaryDataTypeU3Ek__BackingField_50 = value;
	}

	inline static int32_t get_offset_of_U3CfingerCurlsU3Ek__BackingField_51() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CfingerCurlsU3Ek__BackingField_51)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3CfingerCurlsU3Ek__BackingField_51() const { return ___U3CfingerCurlsU3Ek__BackingField_51; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3CfingerCurlsU3Ek__BackingField_51() { return &___U3CfingerCurlsU3Ek__BackingField_51; }
	inline void set_U3CfingerCurlsU3Ek__BackingField_51(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3CfingerCurlsU3Ek__BackingField_51 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfingerCurlsU3Ek__BackingField_51), (void*)value);
	}

	inline static int32_t get_offset_of_U3CfingerSplaysU3Ek__BackingField_52() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CfingerSplaysU3Ek__BackingField_52)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3CfingerSplaysU3Ek__BackingField_52() const { return ___U3CfingerSplaysU3Ek__BackingField_52; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3CfingerSplaysU3Ek__BackingField_52() { return &___U3CfingerSplaysU3Ek__BackingField_52; }
	inline void set_U3CfingerSplaysU3Ek__BackingField_52(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3CfingerSplaysU3Ek__BackingField_52 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfingerSplaysU3Ek__BackingField_52), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastFingerCurlsU3Ek__BackingField_53() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastFingerCurlsU3Ek__BackingField_53)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3ClastFingerCurlsU3Ek__BackingField_53() const { return ___U3ClastFingerCurlsU3Ek__BackingField_53; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3ClastFingerCurlsU3Ek__BackingField_53() { return &___U3ClastFingerCurlsU3Ek__BackingField_53; }
	inline void set_U3ClastFingerCurlsU3Ek__BackingField_53(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3ClastFingerCurlsU3Ek__BackingField_53 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastFingerCurlsU3Ek__BackingField_53), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastFingerSplaysU3Ek__BackingField_54() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastFingerSplaysU3Ek__BackingField_54)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3ClastFingerSplaysU3Ek__BackingField_54() const { return ___U3ClastFingerSplaysU3Ek__BackingField_54; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3ClastFingerSplaysU3Ek__BackingField_54() { return &___U3ClastFingerSplaysU3Ek__BackingField_54; }
	inline void set_U3ClastFingerSplaysU3Ek__BackingField_54(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3ClastFingerSplaysU3Ek__BackingField_54 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastFingerSplaysU3Ek__BackingField_54), (void*)value);
	}

	inline static int32_t get_offset_of_U3CposeChangedU3Ek__BackingField_55() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CposeChangedU3Ek__BackingField_55)); }
	inline bool get_U3CposeChangedU3Ek__BackingField_55() const { return ___U3CposeChangedU3Ek__BackingField_55; }
	inline bool* get_address_of_U3CposeChangedU3Ek__BackingField_55() { return &___U3CposeChangedU3Ek__BackingField_55; }
	inline void set_U3CposeChangedU3Ek__BackingField_55(bool value)
	{
		___U3CposeChangedU3Ek__BackingField_55 = value;
	}

	inline static int32_t get_offset_of_U3ConlyUpdateSummaryDataU3Ek__BackingField_56() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ConlyUpdateSummaryDataU3Ek__BackingField_56)); }
	inline bool get_U3ConlyUpdateSummaryDataU3Ek__BackingField_56() const { return ___U3ConlyUpdateSummaryDataU3Ek__BackingField_56; }
	inline bool* get_address_of_U3ConlyUpdateSummaryDataU3Ek__BackingField_56() { return &___U3ConlyUpdateSummaryDataU3Ek__BackingField_56; }
	inline void set_U3ConlyUpdateSummaryDataU3Ek__BackingField_56(bool value)
	{
		___U3ConlyUpdateSummaryDataU3Ek__BackingField_56 = value;
	}

	inline static int32_t get_offset_of_skeletalSummaryData_57() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___skeletalSummaryData_57)); }
	inline VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  get_skeletalSummaryData_57() const { return ___skeletalSummaryData_57; }
	inline VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * get_address_of_skeletalSummaryData_57() { return &___skeletalSummaryData_57; }
	inline void set_skeletalSummaryData_57(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  value)
	{
		___skeletalSummaryData_57 = value;
	}

	inline static int32_t get_offset_of_lastSkeletalSummaryData_58() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___lastSkeletalSummaryData_58)); }
	inline VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  get_lastSkeletalSummaryData_58() const { return ___lastSkeletalSummaryData_58; }
	inline VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * get_address_of_lastSkeletalSummaryData_58() { return &___lastSkeletalSummaryData_58; }
	inline void set_lastSkeletalSummaryData_58(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  value)
	{
		___lastSkeletalSummaryData_58 = value;
	}

	inline static int32_t get_offset_of_skeletonAction_59() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___skeletonAction_59)); }
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * get_skeletonAction_59() const { return ___skeletonAction_59; }
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 ** get_address_of_skeletonAction_59() { return &___skeletonAction_59; }
	inline void set_skeletonAction_59(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * value)
	{
		___skeletonAction_59 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___skeletonAction_59), (void*)value);
	}

	inline static int32_t get_offset_of_tempBoneTransforms_60() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___tempBoneTransforms_60)); }
	inline VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* get_tempBoneTransforms_60() const { return ___tempBoneTransforms_60; }
	inline VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B** get_address_of_tempBoneTransforms_60() { return &___tempBoneTransforms_60; }
	inline void set_tempBoneTransforms_60(VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* value)
	{
		___tempBoneTransforms_60 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___tempBoneTransforms_60), (void*)value);
	}

	inline static int32_t get_offset_of_skeletonActionData_61() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___skeletonActionData_61)); }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  get_skeletonActionData_61() const { return ___skeletonActionData_61; }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * get_address_of_skeletonActionData_61() { return &___skeletonActionData_61; }
	inline void set_skeletonActionData_61(InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  value)
	{
		___skeletonActionData_61 = value;
	}

	inline static int32_t get_offset_of_lastSkeletonActionData_62() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___lastSkeletonActionData_62)); }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  get_lastSkeletonActionData_62() const { return ___lastSkeletonActionData_62; }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * get_address_of_lastSkeletonActionData_62() { return &___lastSkeletonActionData_62; }
	inline void set_lastSkeletonActionData_62(InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  value)
	{
		___lastSkeletonActionData_62 = value;
	}

	inline static int32_t get_offset_of_tempSkeletonActionData_63() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___tempSkeletonActionData_63)); }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  get_tempSkeletonActionData_63() const { return ___tempSkeletonActionData_63; }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * get_address_of_tempSkeletonActionData_63() { return &___tempSkeletonActionData_63; }
	inline void set_tempSkeletonActionData_63(InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  value)
	{
		___tempSkeletonActionData_63 = value;
	}
};

struct SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Skeleton_Source::skeletonActionData_size
	uint32_t ___skeletonActionData_size_36;

public:
	inline static int32_t get_offset_of_skeletonActionData_size_36() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields, ___skeletonActionData_size_36)); }
	inline uint32_t get_skeletonActionData_size_36() const { return ___skeletonActionData_size_36; }
	inline uint32_t* get_address_of_skeletonActionData_size_36() { return &___skeletonActionData_size_36; }
	inline void set_skeletonActionData_size_36(uint32_t value)
	{
		___skeletonActionData_size_36 = value;
	}
};


// Valve.VR.SteamVR_Action_Vector2_Source_Map
struct  SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3  : public SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_Source_Map
struct  SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95  : public SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253
{
public:

public:
};


// Valve.VR.SteamVR_ActivateActionSetOnLoad
struct  SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_ActivateActionSetOnLoad::actionSet
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___actionSet_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_ActivateActionSetOnLoad::forSources
	int32_t ___forSources_5;
	// System.Boolean Valve.VR.SteamVR_ActivateActionSetOnLoad::disableAllOtherActionSets
	bool ___disableAllOtherActionSets_6;
	// System.Boolean Valve.VR.SteamVR_ActivateActionSetOnLoad::activateOnStart
	bool ___activateOnStart_7;
	// System.Boolean Valve.VR.SteamVR_ActivateActionSetOnLoad::deactivateOnDestroy
	bool ___deactivateOnDestroy_8;

public:
	inline static int32_t get_offset_of_actionSet_4() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___actionSet_4)); }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * get_actionSet_4() const { return ___actionSet_4; }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 ** get_address_of_actionSet_4() { return &___actionSet_4; }
	inline void set_actionSet_4(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * value)
	{
		___actionSet_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSet_4), (void*)value);
	}

	inline static int32_t get_offset_of_forSources_5() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___forSources_5)); }
	inline int32_t get_forSources_5() const { return ___forSources_5; }
	inline int32_t* get_address_of_forSources_5() { return &___forSources_5; }
	inline void set_forSources_5(int32_t value)
	{
		___forSources_5 = value;
	}

	inline static int32_t get_offset_of_disableAllOtherActionSets_6() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___disableAllOtherActionSets_6)); }
	inline bool get_disableAllOtherActionSets_6() const { return ___disableAllOtherActionSets_6; }
	inline bool* get_address_of_disableAllOtherActionSets_6() { return &___disableAllOtherActionSets_6; }
	inline void set_disableAllOtherActionSets_6(bool value)
	{
		___disableAllOtherActionSets_6 = value;
	}

	inline static int32_t get_offset_of_activateOnStart_7() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___activateOnStart_7)); }
	inline bool get_activateOnStart_7() const { return ___activateOnStart_7; }
	inline bool* get_address_of_activateOnStart_7() { return &___activateOnStart_7; }
	inline void set_activateOnStart_7(bool value)
	{
		___activateOnStart_7 = value;
	}

	inline static int32_t get_offset_of_deactivateOnDestroy_8() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___deactivateOnDestroy_8)); }
	inline bool get_deactivateOnDestroy_8() const { return ___deactivateOnDestroy_8; }
	inline bool* get_address_of_deactivateOnDestroy_8() { return &___deactivateOnDestroy_8; }
	inline void set_deactivateOnDestroy_8(bool value)
	{
		___deactivateOnDestroy_8 = value;
	}
};


// Valve.VR.SteamVR_Behaviour
struct  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Valve.VR.SteamVR_Behaviour::initializeSteamVROnAwake
	bool ___initializeSteamVROnAwake_7;
	// System.Boolean Valve.VR.SteamVR_Behaviour::doNotDestroy
	bool ___doNotDestroy_8;
	// Valve.VR.SteamVR_Render Valve.VR.SteamVR_Behaviour::steamvr_render
	SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * ___steamvr_render_9;
	// UnityEngine.Coroutine Valve.VR.SteamVR_Behaviour::initializeCoroutine
	Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * ___initializeCoroutine_12;
	// System.Boolean Valve.VR.SteamVR_Behaviour::loadedOpenVRDeviceSuccess
	bool ___loadedOpenVRDeviceSuccess_13;

public:
	inline static int32_t get_offset_of_initializeSteamVROnAwake_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___initializeSteamVROnAwake_7)); }
	inline bool get_initializeSteamVROnAwake_7() const { return ___initializeSteamVROnAwake_7; }
	inline bool* get_address_of_initializeSteamVROnAwake_7() { return &___initializeSteamVROnAwake_7; }
	inline void set_initializeSteamVROnAwake_7(bool value)
	{
		___initializeSteamVROnAwake_7 = value;
	}

	inline static int32_t get_offset_of_doNotDestroy_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___doNotDestroy_8)); }
	inline bool get_doNotDestroy_8() const { return ___doNotDestroy_8; }
	inline bool* get_address_of_doNotDestroy_8() { return &___doNotDestroy_8; }
	inline void set_doNotDestroy_8(bool value)
	{
		___doNotDestroy_8 = value;
	}

	inline static int32_t get_offset_of_steamvr_render_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___steamvr_render_9)); }
	inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * get_steamvr_render_9() const { return ___steamvr_render_9; }
	inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 ** get_address_of_steamvr_render_9() { return &___steamvr_render_9; }
	inline void set_steamvr_render_9(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * value)
	{
		___steamvr_render_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___steamvr_render_9), (void*)value);
	}

	inline static int32_t get_offset_of_initializeCoroutine_12() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___initializeCoroutine_12)); }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * get_initializeCoroutine_12() const { return ___initializeCoroutine_12; }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC ** get_address_of_initializeCoroutine_12() { return &___initializeCoroutine_12; }
	inline void set_initializeCoroutine_12(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * value)
	{
		___initializeCoroutine_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___initializeCoroutine_12), (void*)value);
	}

	inline static int32_t get_offset_of_loadedOpenVRDeviceSuccess_13() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___loadedOpenVRDeviceSuccess_13)); }
	inline bool get_loadedOpenVRDeviceSuccess_13() const { return ___loadedOpenVRDeviceSuccess_13; }
	inline bool* get_address_of_loadedOpenVRDeviceSuccess_13() { return &___loadedOpenVRDeviceSuccess_13; }
	inline void set_loadedOpenVRDeviceSuccess_13(bool value)
	{
		___loadedOpenVRDeviceSuccess_13 = value;
	}
};

struct SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR_Behaviour::forcingInitialization
	bool ___forcingInitialization_5;
	// Valve.VR.SteamVR_Behaviour Valve.VR.SteamVR_Behaviour::_instance
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * ____instance_6;
	// System.Boolean Valve.VR.SteamVR_Behaviour::isPlaying
	bool ___isPlaying_10;
	// System.Boolean Valve.VR.SteamVR_Behaviour::initializing
	bool ___initializing_11;
	// System.Int32 Valve.VR.SteamVR_Behaviour::lastFrameCount
	int32_t ___lastFrameCount_14;

public:
	inline static int32_t get_offset_of_forcingInitialization_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___forcingInitialization_5)); }
	inline bool get_forcingInitialization_5() const { return ___forcingInitialization_5; }
	inline bool* get_address_of_forcingInitialization_5() { return &___forcingInitialization_5; }
	inline void set_forcingInitialization_5(bool value)
	{
		___forcingInitialization_5 = value;
	}

	inline static int32_t get_offset_of__instance_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ____instance_6)); }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * get__instance_6() const { return ____instance_6; }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 ** get_address_of__instance_6() { return &____instance_6; }
	inline void set__instance_6(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * value)
	{
		____instance_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____instance_6), (void*)value);
	}

	inline static int32_t get_offset_of_isPlaying_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___isPlaying_10)); }
	inline bool get_isPlaying_10() const { return ___isPlaying_10; }
	inline bool* get_address_of_isPlaying_10() { return &___isPlaying_10; }
	inline void set_isPlaying_10(bool value)
	{
		___isPlaying_10 = value;
	}

	inline static int32_t get_offset_of_initializing_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___initializing_11)); }
	inline bool get_initializing_11() const { return ___initializing_11; }
	inline bool* get_address_of_initializing_11() { return &___initializing_11; }
	inline void set_initializing_11(bool value)
	{
		___initializing_11 = value;
	}

	inline static int32_t get_offset_of_lastFrameCount_14() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___lastFrameCount_14)); }
	inline int32_t get_lastFrameCount_14() const { return ___lastFrameCount_14; }
	inline int32_t* get_address_of_lastFrameCount_14() { return &___lastFrameCount_14; }
	inline void set_lastFrameCount_14(int32_t value)
	{
		___lastFrameCount_14 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_Boolean
struct  SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Boolean Valve.VR.SteamVR_Behaviour_Boolean::booleanAction
	SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___booleanAction_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Boolean::inputSource
	int32_t ___inputSource_5;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onChange
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onChange_6;
	// Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler Valve.VR.SteamVR_Behaviour_Boolean::onChangeEvent
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * ___onChangeEvent_7;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onUpdate
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onUpdate_8;
	// Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler Valve.VR.SteamVR_Behaviour_Boolean::onUpdateEvent
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * ___onUpdateEvent_9;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onPress
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onPress_10;
	// Valve.VR.SteamVR_Behaviour_Boolean_StateHandler Valve.VR.SteamVR_Behaviour_Boolean::onPressEvent
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * ___onPressEvent_11;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onPressDown
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onPressDown_12;
	// Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler Valve.VR.SteamVR_Behaviour_Boolean::onPressDownEvent
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * ___onPressDownEvent_13;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onPressUp
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onPressUp_14;
	// Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler Valve.VR.SteamVR_Behaviour_Boolean::onPressUpEvent
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * ___onPressUpEvent_15;

public:
	inline static int32_t get_offset_of_booleanAction_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___booleanAction_4)); }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * get_booleanAction_4() const { return ___booleanAction_4; }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 ** get_address_of_booleanAction_4() { return &___booleanAction_4; }
	inline void set_booleanAction_4(SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * value)
	{
		___booleanAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___booleanAction_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_onChange_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onChange_6)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onChange_6() const { return ___onChange_6; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onChange_6() { return &___onChange_6; }
	inline void set_onChange_6(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onChange_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_6), (void*)value);
	}

	inline static int32_t get_offset_of_onChangeEvent_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onChangeEvent_7)); }
	inline ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * get_onChangeEvent_7() const { return ___onChangeEvent_7; }
	inline ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 ** get_address_of_onChangeEvent_7() { return &___onChangeEvent_7; }
	inline void set_onChangeEvent_7(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * value)
	{
		___onChangeEvent_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChangeEvent_7), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onUpdate_8)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onUpdate_8() const { return ___onUpdate_8; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onUpdate_8() { return &___onUpdate_8; }
	inline void set_onUpdate_8(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onUpdate_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_8), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdateEvent_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onUpdateEvent_9)); }
	inline UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * get_onUpdateEvent_9() const { return ___onUpdateEvent_9; }
	inline UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 ** get_address_of_onUpdateEvent_9() { return &___onUpdateEvent_9; }
	inline void set_onUpdateEvent_9(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * value)
	{
		___onUpdateEvent_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdateEvent_9), (void*)value);
	}

	inline static int32_t get_offset_of_onPress_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPress_10)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onPress_10() const { return ___onPress_10; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onPress_10() { return &___onPress_10; }
	inline void set_onPress_10(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onPress_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPress_10), (void*)value);
	}

	inline static int32_t get_offset_of_onPressEvent_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressEvent_11)); }
	inline StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * get_onPressEvent_11() const { return ___onPressEvent_11; }
	inline StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D ** get_address_of_onPressEvent_11() { return &___onPressEvent_11; }
	inline void set_onPressEvent_11(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * value)
	{
		___onPressEvent_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressEvent_11), (void*)value);
	}

	inline static int32_t get_offset_of_onPressDown_12() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressDown_12)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onPressDown_12() const { return ___onPressDown_12; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onPressDown_12() { return &___onPressDown_12; }
	inline void set_onPressDown_12(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onPressDown_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressDown_12), (void*)value);
	}

	inline static int32_t get_offset_of_onPressDownEvent_13() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressDownEvent_13)); }
	inline StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * get_onPressDownEvent_13() const { return ___onPressDownEvent_13; }
	inline StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 ** get_address_of_onPressDownEvent_13() { return &___onPressDownEvent_13; }
	inline void set_onPressDownEvent_13(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * value)
	{
		___onPressDownEvent_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressDownEvent_13), (void*)value);
	}

	inline static int32_t get_offset_of_onPressUp_14() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressUp_14)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onPressUp_14() const { return ___onPressUp_14; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onPressUp_14() { return &___onPressUp_14; }
	inline void set_onPressUp_14(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onPressUp_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressUp_14), (void*)value);
	}

	inline static int32_t get_offset_of_onPressUpEvent_15() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressUpEvent_15)); }
	inline StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * get_onPressUpEvent_15() const { return ___onPressUpEvent_15; }
	inline StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 ** get_address_of_onPressUpEvent_15() { return &___onPressUpEvent_15; }
	inline void set_onPressUpEvent_15(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * value)
	{
		___onPressUpEvent_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressUpEvent_15), (void*)value);
	}
};


// Valve.VR.SteamVR_Behaviour_Pose
struct  SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Pose Valve.VR.SteamVR_Behaviour_Pose::poseAction
	SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___poseAction_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Pose::inputSource
	int32_t ___inputSource_5;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Pose::origin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___origin_6;
	// Valve.VR.SteamVR_Behaviour_PoseEvent Valve.VR.SteamVR_Behaviour_Pose::onTransformUpdated
	SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * ___onTransformUpdated_7;
	// Valve.VR.SteamVR_Behaviour_PoseEvent Valve.VR.SteamVR_Behaviour_Pose::onTransformChanged
	SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * ___onTransformChanged_8;
	// Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent Valve.VR.SteamVR_Behaviour_Pose::onConnectedChanged
	SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * ___onConnectedChanged_9;
	// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent Valve.VR.SteamVR_Behaviour_Pose::onTrackingChanged
	SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * ___onTrackingChanged_10;
	// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent Valve.VR.SteamVR_Behaviour_Pose::onDeviceIndexChanged
	SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * ___onDeviceIndexChanged_11;
	// Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler Valve.VR.SteamVR_Behaviour_Pose::onTransformUpdatedEvent
	UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * ___onTransformUpdatedEvent_12;
	// Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler Valve.VR.SteamVR_Behaviour_Pose::onTransformChangedEvent
	ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * ___onTransformChangedEvent_13;
	// Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler Valve.VR.SteamVR_Behaviour_Pose::onConnectedChangedEvent
	DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * ___onConnectedChangedEvent_14;
	// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler Valve.VR.SteamVR_Behaviour_Pose::onTrackingChangedEvent
	TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * ___onTrackingChangedEvent_15;
	// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler Valve.VR.SteamVR_Behaviour_Pose::onDeviceIndexChangedEvent
	DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * ___onDeviceIndexChangedEvent_16;
	// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::broadcastDeviceChanges
	bool ___broadcastDeviceChanges_17;
	// System.Int32 Valve.VR.SteamVR_Behaviour_Pose::deviceIndex
	int32_t ___deviceIndex_18;
	// Valve.VR.SteamVR_HistoryBuffer Valve.VR.SteamVR_Behaviour_Pose::historyBuffer
	SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * ___historyBuffer_19;
	// System.Int32 Valve.VR.SteamVR_Behaviour_Pose::lastFrameUpdated
	int32_t ___lastFrameUpdated_20;

public:
	inline static int32_t get_offset_of_poseAction_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___poseAction_4)); }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * get_poseAction_4() const { return ___poseAction_4; }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C ** get_address_of_poseAction_4() { return &___poseAction_4; }
	inline void set_poseAction_4(SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * value)
	{
		___poseAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poseAction_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_origin_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___origin_6)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_origin_6() const { return ___origin_6; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_origin_6() { return &___origin_6; }
	inline void set_origin_6(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___origin_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___origin_6), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformUpdated_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformUpdated_7)); }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * get_onTransformUpdated_7() const { return ___onTransformUpdated_7; }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 ** get_address_of_onTransformUpdated_7() { return &___onTransformUpdated_7; }
	inline void set_onTransformUpdated_7(SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * value)
	{
		___onTransformUpdated_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformUpdated_7), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformChanged_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformChanged_8)); }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * get_onTransformChanged_8() const { return ___onTransformChanged_8; }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 ** get_address_of_onTransformChanged_8() { return &___onTransformChanged_8; }
	inline void set_onTransformChanged_8(SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * value)
	{
		___onTransformChanged_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformChanged_8), (void*)value);
	}

	inline static int32_t get_offset_of_onConnectedChanged_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onConnectedChanged_9)); }
	inline SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * get_onConnectedChanged_9() const { return ___onConnectedChanged_9; }
	inline SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 ** get_address_of_onConnectedChanged_9() { return &___onConnectedChanged_9; }
	inline void set_onConnectedChanged_9(SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * value)
	{
		___onConnectedChanged_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onConnectedChanged_9), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTrackingChanged_10)); }
	inline SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * get_onTrackingChanged_10() const { return ___onTrackingChanged_10; }
	inline SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E ** get_address_of_onTrackingChanged_10() { return &___onTrackingChanged_10; }
	inline void set_onTrackingChanged_10(SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * value)
	{
		___onTrackingChanged_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_10), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceIndexChanged_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onDeviceIndexChanged_11)); }
	inline SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * get_onDeviceIndexChanged_11() const { return ___onDeviceIndexChanged_11; }
	inline SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 ** get_address_of_onDeviceIndexChanged_11() { return &___onDeviceIndexChanged_11; }
	inline void set_onDeviceIndexChanged_11(SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * value)
	{
		___onDeviceIndexChanged_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceIndexChanged_11), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformUpdatedEvent_12() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformUpdatedEvent_12)); }
	inline UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * get_onTransformUpdatedEvent_12() const { return ___onTransformUpdatedEvent_12; }
	inline UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D ** get_address_of_onTransformUpdatedEvent_12() { return &___onTransformUpdatedEvent_12; }
	inline void set_onTransformUpdatedEvent_12(UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * value)
	{
		___onTransformUpdatedEvent_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformUpdatedEvent_12), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformChangedEvent_13() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformChangedEvent_13)); }
	inline ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * get_onTransformChangedEvent_13() const { return ___onTransformChangedEvent_13; }
	inline ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 ** get_address_of_onTransformChangedEvent_13() { return &___onTransformChangedEvent_13; }
	inline void set_onTransformChangedEvent_13(ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * value)
	{
		___onTransformChangedEvent_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformChangedEvent_13), (void*)value);
	}

	inline static int32_t get_offset_of_onConnectedChangedEvent_14() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onConnectedChangedEvent_14)); }
	inline DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * get_onConnectedChangedEvent_14() const { return ___onConnectedChangedEvent_14; }
	inline DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB ** get_address_of_onConnectedChangedEvent_14() { return &___onConnectedChangedEvent_14; }
	inline void set_onConnectedChangedEvent_14(DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * value)
	{
		___onConnectedChangedEvent_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onConnectedChangedEvent_14), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChangedEvent_15() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTrackingChangedEvent_15)); }
	inline TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * get_onTrackingChangedEvent_15() const { return ___onTrackingChangedEvent_15; }
	inline TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 ** get_address_of_onTrackingChangedEvent_15() { return &___onTrackingChangedEvent_15; }
	inline void set_onTrackingChangedEvent_15(TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * value)
	{
		___onTrackingChangedEvent_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChangedEvent_15), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceIndexChangedEvent_16() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onDeviceIndexChangedEvent_16)); }
	inline DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * get_onDeviceIndexChangedEvent_16() const { return ___onDeviceIndexChangedEvent_16; }
	inline DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 ** get_address_of_onDeviceIndexChangedEvent_16() { return &___onDeviceIndexChangedEvent_16; }
	inline void set_onDeviceIndexChangedEvent_16(DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * value)
	{
		___onDeviceIndexChangedEvent_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceIndexChangedEvent_16), (void*)value);
	}

	inline static int32_t get_offset_of_broadcastDeviceChanges_17() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___broadcastDeviceChanges_17)); }
	inline bool get_broadcastDeviceChanges_17() const { return ___broadcastDeviceChanges_17; }
	inline bool* get_address_of_broadcastDeviceChanges_17() { return &___broadcastDeviceChanges_17; }
	inline void set_broadcastDeviceChanges_17(bool value)
	{
		___broadcastDeviceChanges_17 = value;
	}

	inline static int32_t get_offset_of_deviceIndex_18() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___deviceIndex_18)); }
	inline int32_t get_deviceIndex_18() const { return ___deviceIndex_18; }
	inline int32_t* get_address_of_deviceIndex_18() { return &___deviceIndex_18; }
	inline void set_deviceIndex_18(int32_t value)
	{
		___deviceIndex_18 = value;
	}

	inline static int32_t get_offset_of_historyBuffer_19() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___historyBuffer_19)); }
	inline SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * get_historyBuffer_19() const { return ___historyBuffer_19; }
	inline SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 ** get_address_of_historyBuffer_19() { return &___historyBuffer_19; }
	inline void set_historyBuffer_19(SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * value)
	{
		___historyBuffer_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___historyBuffer_19), (void*)value);
	}

	inline static int32_t get_offset_of_lastFrameUpdated_20() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___lastFrameUpdated_20)); }
	inline int32_t get_lastFrameUpdated_20() const { return ___lastFrameUpdated_20; }
	inline int32_t* get_address_of_lastFrameUpdated_20() { return &___lastFrameUpdated_20; }
	inline void set_lastFrameUpdated_20(int32_t value)
	{
		___lastFrameUpdated_20 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_Single
struct  SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Single Valve.VR.SteamVR_Behaviour_Single::singleAction
	SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___singleAction_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Single::inputSource
	int32_t ___inputSource_5;
	// Valve.VR.SteamVR_Behaviour_SingleEvent Valve.VR.SteamVR_Behaviour_Single::onChange
	SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * ___onChange_6;
	// Valve.VR.SteamVR_Behaviour_SingleEvent Valve.VR.SteamVR_Behaviour_Single::onUpdate
	SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * ___onUpdate_7;
	// Valve.VR.SteamVR_Behaviour_SingleEvent Valve.VR.SteamVR_Behaviour_Single::onAxis
	SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * ___onAxis_8;
	// Valve.VR.SteamVR_Behaviour_Single_ChangeHandler Valve.VR.SteamVR_Behaviour_Single::onChangeEvent
	ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * ___onChangeEvent_9;
	// Valve.VR.SteamVR_Behaviour_Single_UpdateHandler Valve.VR.SteamVR_Behaviour_Single::onUpdateEvent
	UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * ___onUpdateEvent_10;
	// Valve.VR.SteamVR_Behaviour_Single_AxisHandler Valve.VR.SteamVR_Behaviour_Single::onAxisEvent
	AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * ___onAxisEvent_11;

public:
	inline static int32_t get_offset_of_singleAction_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___singleAction_4)); }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * get_singleAction_4() const { return ___singleAction_4; }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 ** get_address_of_singleAction_4() { return &___singleAction_4; }
	inline void set_singleAction_4(SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * value)
	{
		___singleAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___singleAction_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_onChange_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onChange_6)); }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * get_onChange_6() const { return ___onChange_6; }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 ** get_address_of_onChange_6() { return &___onChange_6; }
	inline void set_onChange_6(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * value)
	{
		___onChange_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_6), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onUpdate_7)); }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * get_onUpdate_7() const { return ___onUpdate_7; }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 ** get_address_of_onUpdate_7() { return &___onUpdate_7; }
	inline void set_onUpdate_7(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * value)
	{
		___onUpdate_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_7), (void*)value);
	}

	inline static int32_t get_offset_of_onAxis_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onAxis_8)); }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * get_onAxis_8() const { return ___onAxis_8; }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 ** get_address_of_onAxis_8() { return &___onAxis_8; }
	inline void set_onAxis_8(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * value)
	{
		___onAxis_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_8), (void*)value);
	}

	inline static int32_t get_offset_of_onChangeEvent_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onChangeEvent_9)); }
	inline ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * get_onChangeEvent_9() const { return ___onChangeEvent_9; }
	inline ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 ** get_address_of_onChangeEvent_9() { return &___onChangeEvent_9; }
	inline void set_onChangeEvent_9(ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * value)
	{
		___onChangeEvent_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChangeEvent_9), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdateEvent_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onUpdateEvent_10)); }
	inline UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * get_onUpdateEvent_10() const { return ___onUpdateEvent_10; }
	inline UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 ** get_address_of_onUpdateEvent_10() { return &___onUpdateEvent_10; }
	inline void set_onUpdateEvent_10(UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * value)
	{
		___onUpdateEvent_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdateEvent_10), (void*)value);
	}

	inline static int32_t get_offset_of_onAxisEvent_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onAxisEvent_11)); }
	inline AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * get_onAxisEvent_11() const { return ___onAxisEvent_11; }
	inline AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C ** get_address_of_onAxisEvent_11() { return &___onAxisEvent_11; }
	inline void set_onAxisEvent_11(AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * value)
	{
		___onAxisEvent_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxisEvent_11), (void*)value);
	}
};


// Valve.VR.SteamVR_Render
struct  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_ExternalCamera Valve.VR.SteamVR_Render::externalCamera
	SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D * ___externalCamera_4;
	// System.String Valve.VR.SteamVR_Render::externalCameraConfigPath
	String_t* ___externalCameraConfigPath_5;
	// Valve.VR.SteamVR_Camera[] Valve.VR.SteamVR_Render::cameras
	SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3* ___cameras_8;
	// Valve.VR.TrackedDevicePose_t[] Valve.VR.SteamVR_Render::poses
	TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* ___poses_9;
	// Valve.VR.TrackedDevicePose_t[] Valve.VR.SteamVR_Render::gamePoses
	TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* ___gamePoses_10;
	// UnityEngine.WaitForEndOfFrame Valve.VR.SteamVR_Render::waitForEndOfFrame
	WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA * ___waitForEndOfFrame_12;
	// System.Nullable`1<System.Boolean> Valve.VR.SteamVR_Render::doesPathExist
	Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___doesPathExist_13;
	// System.Single Valve.VR.SteamVR_Render::sceneResolutionScale
	float ___sceneResolutionScale_14;
	// System.Single Valve.VR.SteamVR_Render::timeScale
	float ___timeScale_15;
	// Valve.VR.EVRScreenshotType[] Valve.VR.SteamVR_Render::screenshotTypes
	EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* ___screenshotTypes_16;

public:
	inline static int32_t get_offset_of_externalCamera_4() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___externalCamera_4)); }
	inline SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D * get_externalCamera_4() const { return ___externalCamera_4; }
	inline SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D ** get_address_of_externalCamera_4() { return &___externalCamera_4; }
	inline void set_externalCamera_4(SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D * value)
	{
		___externalCamera_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___externalCamera_4), (void*)value);
	}

	inline static int32_t get_offset_of_externalCameraConfigPath_5() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___externalCameraConfigPath_5)); }
	inline String_t* get_externalCameraConfigPath_5() const { return ___externalCameraConfigPath_5; }
	inline String_t** get_address_of_externalCameraConfigPath_5() { return &___externalCameraConfigPath_5; }
	inline void set_externalCameraConfigPath_5(String_t* value)
	{
		___externalCameraConfigPath_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___externalCameraConfigPath_5), (void*)value);
	}

	inline static int32_t get_offset_of_cameras_8() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___cameras_8)); }
	inline SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3* get_cameras_8() const { return ___cameras_8; }
	inline SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3** get_address_of_cameras_8() { return &___cameras_8; }
	inline void set_cameras_8(SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3* value)
	{
		___cameras_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cameras_8), (void*)value);
	}

	inline static int32_t get_offset_of_poses_9() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___poses_9)); }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* get_poses_9() const { return ___poses_9; }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196** get_address_of_poses_9() { return &___poses_9; }
	inline void set_poses_9(TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* value)
	{
		___poses_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poses_9), (void*)value);
	}

	inline static int32_t get_offset_of_gamePoses_10() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___gamePoses_10)); }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* get_gamePoses_10() const { return ___gamePoses_10; }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196** get_address_of_gamePoses_10() { return &___gamePoses_10; }
	inline void set_gamePoses_10(TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* value)
	{
		___gamePoses_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gamePoses_10), (void*)value);
	}

	inline static int32_t get_offset_of_waitForEndOfFrame_12() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___waitForEndOfFrame_12)); }
	inline WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA * get_waitForEndOfFrame_12() const { return ___waitForEndOfFrame_12; }
	inline WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA ** get_address_of_waitForEndOfFrame_12() { return &___waitForEndOfFrame_12; }
	inline void set_waitForEndOfFrame_12(WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA * value)
	{
		___waitForEndOfFrame_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___waitForEndOfFrame_12), (void*)value);
	}

	inline static int32_t get_offset_of_doesPathExist_13() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___doesPathExist_13)); }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  get_doesPathExist_13() const { return ___doesPathExist_13; }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * get_address_of_doesPathExist_13() { return &___doesPathExist_13; }
	inline void set_doesPathExist_13(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  value)
	{
		___doesPathExist_13 = value;
	}

	inline static int32_t get_offset_of_sceneResolutionScale_14() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___sceneResolutionScale_14)); }
	inline float get_sceneResolutionScale_14() const { return ___sceneResolutionScale_14; }
	inline float* get_address_of_sceneResolutionScale_14() { return &___sceneResolutionScale_14; }
	inline void set_sceneResolutionScale_14(float value)
	{
		___sceneResolutionScale_14 = value;
	}

	inline static int32_t get_offset_of_timeScale_15() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___timeScale_15)); }
	inline float get_timeScale_15() const { return ___timeScale_15; }
	inline float* get_address_of_timeScale_15() { return &___timeScale_15; }
	inline void set_timeScale_15(float value)
	{
		___timeScale_15 = value;
	}

	inline static int32_t get_offset_of_screenshotTypes_16() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___screenshotTypes_16)); }
	inline EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* get_screenshotTypes_16() const { return ___screenshotTypes_16; }
	inline EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E** get_address_of_screenshotTypes_16() { return &___screenshotTypes_16; }
	inline void set_screenshotTypes_16(EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* value)
	{
		___screenshotTypes_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___screenshotTypes_16), (void*)value);
	}
};

struct SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields
{
public:
	// Valve.VR.EVREye Valve.VR.SteamVR_Render::<eye>k__BackingField
	int32_t ___U3CeyeU3Ek__BackingField_6;
	// System.Boolean Valve.VR.SteamVR_Render::isQuitting
	bool ___isQuitting_7;
	// System.Boolean Valve.VR.SteamVR_Render::_pauseRendering
	bool ____pauseRendering_11;

public:
	inline static int32_t get_offset_of_U3CeyeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields, ___U3CeyeU3Ek__BackingField_6)); }
	inline int32_t get_U3CeyeU3Ek__BackingField_6() const { return ___U3CeyeU3Ek__BackingField_6; }
	inline int32_t* get_address_of_U3CeyeU3Ek__BackingField_6() { return &___U3CeyeU3Ek__BackingField_6; }
	inline void set_U3CeyeU3Ek__BackingField_6(int32_t value)
	{
		___U3CeyeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_isQuitting_7() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields, ___isQuitting_7)); }
	inline bool get_isQuitting_7() const { return ___isQuitting_7; }
	inline bool* get_address_of_isQuitting_7() { return &___isQuitting_7; }
	inline void set_isQuitting_7(bool value)
	{
		___isQuitting_7 = value;
	}

	inline static int32_t get_offset_of__pauseRendering_11() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields, ____pauseRendering_11)); }
	inline bool get__pauseRendering_11() const { return ____pauseRendering_11; }
	inline bool* get_address_of__pauseRendering_11() { return &____pauseRendering_11; }
	inline void set__pauseRendering_11(bool value)
	{
		____pauseRendering_11 = value;
	}
};


// Valve.VR.SteamVR_Action_Skeleton_Source_Map
struct  SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB  : public SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  m_Items[1];

public:
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Quaternion[]
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  m_Items[1];

public:
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		m_Items[index] = value;
	}
};
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) float m_Items[1];

public:
	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
};
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// SteamVR_Utils_RigidTransform[]
struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  m_Items[1];

public:
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.EVRInputStringBits[]
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.SteamVR_Skeleton_FingerIndexEnum[]
struct SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum[]
struct SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) String_t* m_Items[1];

public:
	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.VRBoneTransform_t[]
struct VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9  m_Items[1];

public:
	inline VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9  value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_Action_Skeleton_Source[]
struct SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * m_Items[1];

public:
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.SteamVR_Input_Sources[]
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_Action_Vibration_Source[]
struct SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * m_Items[1];

public:
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};


// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Map_1__ctor_mA777437FDF48094346227E72C185C4F6703872B6_gshared (SteamVR_Action_In_Source_Map_1_tE23DCA7E159C6009D8EE8C1BB585F7939266D2C4 * __this, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<System.Object>::get_Item(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * SteamVR_Action_Source_Map_1_get_Item_mB034B2596B39A1DB5B5BA1ADA63292FDE8DBF9D9_gshared (SteamVR_Action_Source_Map_1_tF6CD4E2DA9FBD867B5F22D6A040FC06A0BFE5CCA * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Base_2__ctor_m04E553A324B788E71DB9C8AD50C13FB88D945BC7_gshared (SteamVR_Action_Pose_Base_2_t243A518FFFF5F7018B4C37F5EE6AA104F20ABB3C * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>::UpdateTransform(Valve.VR.SteamVR_Input_Sources,UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Base_2_UpdateTransform_m1262386ECE6A5BF84EEC593432A2442588797FFC_gshared (SteamVR_Action_Pose_Base_2_t243A518FFFF5F7018B4C37F5EE6AA104F20ABB3C * __this, int32_t ___inputSource0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<System.Object,System.Object>::InitAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_2_InitAfterDeserialize_m97D226DB0464C3D2CF67AC71B588420741A770F6_gshared (SteamVR_Action_2_t67EA892F0F7F8FCEB40A807AEF2569E6E8BA4B41 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Map_1__ctor_mCFDE07E4D042B1DC990A94DC5AC250B75E5BCED8_gshared (SteamVR_Action_Pose_Source_Map_1_t8B8C4568BBAB9035BBC38B347ADCF1969560FDC9 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_2__ctor_mE8D7F48E48E81915F85312A869B9F905CAF9B986_gshared (SteamVR_Action_In_2_t6581D04BE16752D2B9D8A37860D18FCB02755CA0 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Out`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Out_2__ctor_mB77B8471ACC3E31271EC6CBBCB014D7809B077B8_gshared (SteamVR_Action_Out_2_t26EDDF8FCADB8A7F06F67CBC5DD201ED6716EB68 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_1__ctor_m2A7CDEF37045DF1A11A62CE29A48F11C11274029_gshared (SteamVR_Action_Source_Map_1_tF6CD4E2DA9FBD867B5F22D6A040FC06A0BFE5CCA * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Object_FindObjectOfType_TisRuntimeObject_mE3957366B74863C807E6E8A23D239A0CB079BB9C_gshared (const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::AddComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_AddComponent_TisRuntimeObject_m80EDFEAC4927F588A7A702F81524EDBFA8603FE2_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_GetComponent_TisRuntimeObject_mD4382B2843BA9A61A01A8F9D7B9813D060F9C9CA_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction_1__ctor_m6EB8530A97D512C3B138A2E6D2E3AC341BF52772_gshared (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Listen(UnityEngine.Events.UnityAction`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Event_1_Listen_m8A8805251599A69638ED15A0D6BE0714AA0A69EF_gshared (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Remove(UnityEngine.Events.UnityAction`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Event_1_Remove_m8F5B244890D81ADF723423B17F09C474EC362C4E_gshared (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method);
// System.Void System.Action`1<System.Object>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Action_1__ctor_mAFC7442D9D3CEC6701C3C5599F8CF12476095510_gshared (Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Boolean>::Invoke(!0,!1,!2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_Invoke_mA446E8872131E8C56B5C9995FF10F9F63B8334DA_gshared (UnityEvent_3_tC10A55EF4A513BB7F34ECD3783FCCD6CBD41E2F2 * __this, RuntimeObject * ___arg00, int32_t ___arg11, bool ___arg22, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_mCE7BB17414DA443FA6D668A990CA9E74155AB27D_gshared (SteamVR_Action_In_2_t6581D04BE16752D2B9D8A37860D18FCB02755CA0 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Boolean>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3__ctor_mC0BE18C870B24A3C20C849DAA302A31BAEFA9D71_gshared (UnityEvent_3_tC10A55EF4A513BB7F34ECD3783FCCD6CBD41E2F2 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_RingBuffer`1<System.Object>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_RingBuffer_1_Clear_m5528DA1A5C57E5F48EE17EF2B2B73ED0ACDF66EE_gshared (SteamVR_RingBuffer_1_t353935239BF163A78AC80BF35E82548FDC5DA1EA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<System.Object,System.Int32Enum>::Invoke(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_2_Invoke_mE003BB5BE38016CA479D13E0D5DA06758009E796_gshared (UnityEvent_2_tCD04AC1BC9C3ABDC6DB6482B553FABA50231BF26 * __this, RuntimeObject * ___arg00, int32_t ___arg11, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32Enum>::Invoke(!0,!1,!2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_Invoke_m54B5912104B3776D094958037AD7B363652AF435_gshared (UnityEvent_3_tB967FE6E76ED69407EEAC01619C1EC8B20C01C79 * __this, RuntimeObject * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32>::Invoke(!0,!1,!2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_Invoke_m2E40BAB9F1CF768310837623A89E444FAE9A168C_gshared (UnityEvent_3_t26033F10C623A8B4593B2474D360FE554E09E5B8 * __this, RuntimeObject * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method);
// T Valve.VR.SteamVR_Input::GetAction<System.Object>(System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * SteamVR_Input_GetAction_TisRuntimeObject_mA044FE454DF4C33DFBF7D8FDCE1CD3043A0B8229_gshared (String_t* ___actionName0, bool ___caseSensitive1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<System.Object,System.Int32Enum>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_2__ctor_m4FD0B1A839EF587282C8A066EE6F458D216262D3_gshared (UnityEvent_2_tCD04AC1BC9C3ABDC6DB6482B553FABA50231BF26 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3__ctor_m96A207D8DE143F181AC391B7F9F97A9128650ADE_gshared (UnityEvent_3_t26033F10C623A8B4593B2474D360FE554E09E5B8 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32Enum>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3__ctor_m79023AE6DD61357B99DCBA8BD8DBAE28A21FF079_gshared (UnityEvent_3_tB967FE6E76ED69407EEAC01619C1EC8B20C01C79 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`4<System.Object,System.Int32Enum,System.Single,System.Single>::Invoke(!0,!1,!2,!3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_4_Invoke_mC209313FB4EE7365736CCA7C0562F2E14BC9AD5D_gshared (UnityEvent_4_t983F7AB7F1666BF509BC5D8984BA74878BBB8CD8 * __this, RuntimeObject * ___arg00, int32_t ___arg11, float ___arg22, float ___arg33, const RuntimeMethod* method);

// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>::.ctor()
inline void SteamVR_Action_In_Source_Map_1__ctor_mB77B525B66B2B2D0584C98822837286DF43B701B (SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741 *, const RuntimeMethod*))SteamVR_Action_In_Source_Map_1__ctor_mA777437FDF48094346227E72C185C4F6703872B6_gshared)(__this, method);
}
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2 (SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * (*) (SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mB034B2596B39A1DB5B5BA1ADA63292FDE8DBF9D9_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_mBA9217A7856EEA2B9346304FF33C00F3D35E381D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m928BE406E004801B903336174AD71858077B4C31 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onChange(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onChange(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onUpdate(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>::.ctor()
inline void SteamVR_Action_Pose_Base_2__ctor_m24086345D5295A3360CF25DCB9922CA2CC4ECF61 (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 *, const RuntimeMethod*))SteamVR_Action_Pose_Base_2__ctor_m04E553A324B788E71DB9C8AD50C13FB88D945BC7_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>::UpdateTransform(Valve.VR.SteamVR_Input_Sources,UnityEngine.Transform)
inline void SteamVR_Action_Pose_Base_2_UpdateTransform_mA2326B217389FE7C35FA7067EC5CB94B949791CD (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 * __this, int32_t ___inputSource0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate1, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 *, int32_t, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, const RuntimeMethod*))SteamVR_Action_Pose_Base_2_UpdateTransform_m1262386ECE6A5BF84EEC593432A2442588797FFC_gshared)(__this, ___inputSource0, ___transformToUpdate1, method);
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_bonePositions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_boneRotations()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBonePositions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBoneRotations()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton_Source::get_rangeOfMotion()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_rangeOfMotion_mCEFC5B01B736A3B6218C5C91A0AEF272FFD88B47_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_rangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_rangeOfMotion_mD5E750C97DF02D77264C6215272D1982987A1483_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTransformSpace()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m0D9D61CC1BC50CC7FA1F9AD5192FBC418009F3F3_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_skeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_mF6B1E1B08AE63F49B66DDCFA097DA28DB8378783_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton_Source::get_summaryDataType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_summaryDataType(Valve.VR.EVRSummaryType)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_summaryDataType_mC513A7AACFFC7DC686764E9A982DFAC02EC5B2F5_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTrackingLevel_mD592F4C9B67DBFB75FD15DF4755E51FC24C32769 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbCurl_m1E1B3EB8065D36CC07FD3D3F81142DE18117571D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexCurl_m23B7090B54104226A276B2DA6F9AF05D8A87F4C4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleCurl_mF2DB6D3C537BDA649730D9DED5FD8C158792A99E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringCurl_mB1080317044EB9464CBFA2AB4D579481889A4DF6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_pinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_pinkyCurl_mDCB73847A197AC4E4F55DF28D27857EE71F131B3 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbIndexSplay_m8A48CFB2D8446B92D1ACD230A06CCADEADAF90D8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexMiddleSplay_m032F314FF2441AF7819CD080BAC24BD7EA1D25B2 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleRingSplay_m8F9D81F3B1CB80C0DD82485A54DB100FF1B0E546 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringPinkySplay_m1A57999FB132953BE3265B6C3AB7E274A1D10DE0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbCurl_mE893135DF37D02B74C7B190331E8A214C5350AC4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexCurl_mB7429964CAA0C0A16B0C98F8FEADEFFD8466CE30 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleCurl_m1EC63B41C764BED847913534AFA8D939FE64686A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingCurl_m243A9EC6EA188AA107D23B07BA8BEFCABC3EEAA8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastPinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastPinkyCurl_m67226B9DF4D046AFFC83ED7FB6B9BD8678C0B306 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbIndexSplay_mFECABD9313D9F50354F74393A9A22B3DCF0C991B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexMiddleSplay_mC780C06D5EFBB2E006D57433B5813666CABE8684 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleRingSplay_mF7BD21EE49B81B5326424FEA0EBB2191171BCDC6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingPinkySplay_mE15C84D9E609B6A7941C2C96AAAF10514D3808B1 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerCurls()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerSplays()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerCurls()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerSplays()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_poseChanged()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_poseChanged_mBBFFCD8FF3AB5998C3B5053499A253E137EB6B01_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_onlyUpdateSummaryData()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_onlyUpdateSummaryData(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m02A775C0CAB57C16D4A673019586873F7C0B3CFB_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_ActionSet::IsActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___source0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m2FB2A8F8F97750A6CAD390348AAE8E9DF94B9B69 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime2, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetPoseAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_mB6CC830F3A16661AADD4A98BBA70E69ED8C98480 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___positionAtTime1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotationAtTime2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime3, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime4, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_localPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_localRotation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_velocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_angularVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_deviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_poseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_trackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalRotation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastAngularVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m54D89CD952536E4C6CC1B31D732F097A78FC6D83 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastPoseIsValid_m7CC61D5F85FD1334CFC6F917EECDA224FA903D0E (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_lastTrackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_GetBoneCount_mD2B27CC695DB970DE6F2FE9F57747306854185FC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method);
// System.Object System.Array::Clone()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176 (RuntimeArray * __this, const RuntimeMethod* method);
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneName(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_Source_GetBoneName_m464D8D3413D7782356433F03C854B062E0080488 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___boneIndex0, const RuntimeMethod* method);
// SteamVR_Utils/RigidTransform[] Valve.VR.SteamVR_Action_Skeleton_Source::GetReferenceTransforms(Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* SteamVR_Action_Skeleton_Source_GetReferenceTransforms_mD97ED9032334370252095D9ABCED25D4D5533B92 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___transformSpace0, int32_t ___referencePose1, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::GetSkeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetFingerCurl_mC08596A16D1F47B97BFC0DC8D9089F761751C1A6 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetSplay_m66C049355DEC070185248558C8532BA370F5B14F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastFingerCurl_mEB8760CBAD65388E4ECCD999150C3D6287171762 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastSplay_mD9365C49755E9D59DBB8F2F9F42EBFA2EAC6DFD5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In_Source::GetLocalizedOriginPart(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_GetLocalizedOriginPart_m3439D4CD3B788C67CA290081280CFB128F6AE1ED (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_m6328CD572A94DA88CD2DF7764B1C54660D864650 (SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_m97D226DB0464C3D2CF67AC71B588420741A770F6_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Vector3::get_up()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7 (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::AngleAxis(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0 (float ___angle0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis1, const RuntimeMethod* method);
// System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1 (Delegate_t * ___a0, Delegate_t * ___b1, const RuntimeMethod* method);
// System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D (Delegate_t * ___source0, Delegate_t * ___value1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Preinitialize_mF8A86BF078F169380E7A1C75DA6C20B49380AE9B (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_bonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_bonePositions_m96408532FED1D966DE56612099B679DA8FBBF8D9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBonePositions_m8E63D828A81C99EEA6A4C55BA74D48F7C7F19CBF_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_boneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_boneRotations_m2B92E87BC6C9E456075204D69BD82CAE759F46E2_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBoneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mF1526AAAFE4506F1F70D22BED03D04083E75E3F8_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerCurls(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerCurls_m2A1933C7FE83EB6B654B248354B4438B1B15C0BD_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerSplays(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerSplays_mB8BA373C6A1A65E39FD6D8AF1566A31F18BA7055_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerCurls(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerCurls_mA6CF9BCD46F49F1A95627142A70D9FA3C4F490E5_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerSplays(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerSplays_m1E2D198E4627EA80F69A67AB26943144BD45DC70_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Initialize_m36604AB0F3E49250F5761A885B005CB8CEE2DBD1 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6 (RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ___handle0, const RuntimeMethod* method);
// System.Int32 System.Runtime.InteropServices.Marshal::SizeOf(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130 (Type_t * ___t0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_UpdateValue_mC4B5455237B6CD71DD565F71267D8EB3AE3681F0 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_poseChanged(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_poseChanged_m359037EAC8B53761892E89E13D0A1FCC31A222EC_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method);
// Valve.VR.CVRInput Valve.VR.OpenVR::get_Input()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414 (const RuntimeMethod* method);
// System.UInt64 Valve.VR.SteamVR_Action_Source::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalActionData(System.UInt64,Valve.VR.InputSkeletalActionData_t&,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalActionData_m40D44AADDBF05DD553A8AD447AAAF10EFBE504EE (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * ___pActionData1, uint32_t ___unActionDataSize2, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.String System.UInt64::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672 (uint64_t* __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___values0, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalBoneData(System.UInt64,Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalMotionRange,Valve.VR.VRBoneTransform_t[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalBoneData_mC4C625F0314C6AAAD88B5F0913D65C81B7D8D344 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t ___eTransformSpace1, int32_t ___eMotionRange2, VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* ___pTransformArray3, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___lhs0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rhs1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateSkeletalSummaryData(Valve.VR.EVRSummaryType,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m2E5AB154AD8698F22D1DDBE5D414EDD879C5FADE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___summaryType0, bool ___force1, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Distance(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// System.Single UnityEngine.Quaternion::Angle(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Quaternion_Angle_m09599D660B724D330E5C7FE2FB1C8716161B3DD1 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___a0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___b1, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_realtimeSinceStartup()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::set_changedTime(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetBoneCount(System.UInt64,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetBoneCount_m78883020EAE71196181E31E2B7CC2738DC6E6C49 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, uint32_t* ___pBoneCount1, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetBoneHierarchy(System.UInt64,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetBoneHierarchy_m02CC64E1724470CA3A3ECF28FB5B9A4F7035511A (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___pParentIndices1, const RuntimeMethod* method);
// System.Void System.Text.StringBuilder::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StringBuilder__ctor_m1C0F2D97B838537A2D0F64033AE4EF02D150A956 (StringBuilder_t * __this, int32_t ___capacity0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetBoneName(System.UInt64,System.Int32,System.Text.StringBuilder,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetBoneName_mBA7734E10D0E85104A3F34B4EC42279348BAB54E (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t ___nBoneIndex1, StringBuilder_t * ___pchBoneName2, uint32_t ___unNameBufferSize3, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalReferenceTransforms(System.UInt64,Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose,Valve.VR.VRBoneTransform_t[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalReferenceTransforms_mF56CD65341070846CD59B514BC0DD3653FA042A2 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t ___eTransformSpace1, int32_t ___eReferencePose2, VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* ___pTransformArray3, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// System.Void UnityEngine.Quaternion::.ctor(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Quaternion__ctor_m7502F0C38E04C6DE24C965D1CAF278DDD02B9D61 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * __this, float ___x0, float ___y1, float ___z2, float ___w3, const RuntimeMethod* method);
// System.Void SteamVR_Utils/RigidTransform::.ctor(UnityEngine.Vector3,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RigidTransform__ctor_mD0AE3AAF6BDAE1EC463E2EA22DD1988DCA16A62B (RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rot1, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalTrackingLevel(System.UInt64,Valve.VR.EVRSkeletalTrackingLevel&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalTrackingLevel_m531BD36546E0F657B1F0F1B9C658E38661D991BF (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t* ___pSkeletalTrackingLevel1, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalSummaryData(System.UInt64,Valve.VR.EVRSummaryType,Valve.VR.VRSkeletalSummaryData_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalSummaryData_m43552CEEDBD7CE51B10EB4A1D897FF6712D55D01 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t ___eSummaryType1, VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * ___pSkeletalSummaryData2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m89965E0633657EBCC691B7466FC1BC06B64848F2 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, int32_t ___trackingState1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m69178B26D45FE5B6E566495EFD02D1CD56AED888 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___validPose1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_mB57708EA08D45928D64D09652CE8A71248A92E1B (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___deviceConnected1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mC5722DBE5AEDF8568E9849292C01588014D154EA (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m8F250A3B8449F2D46328A69B028001585024506D (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___active1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m175C6770DB8B17FD5E716BA08127EEA22FDCA465 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source__ctor_mF1DE2EFD35F9F2DE84EFAEE2308E35D274D93C6E (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>::.ctor()
inline void SteamVR_Action_Pose_Source_Map_1__ctor_m01AFE5DB1C492BA28D7FDCC30F55DF0575D12510 (SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125 *, const RuntimeMethod*))SteamVR_Action_Pose_Source_Map_1__ctor_mCFDE07E4D042B1DC990A94DC5AC250B75E5BCED8_gshared)(__this, method);
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Action_Source_get_actionSet_mF2BE8CE30F960A11115AD000921BBF16088CF5B2 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::get_inputSource()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::set_inputSource(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_set_inputSource_m9871BD4130FD7649FAF628248DCAEAE32B19236E_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// System.UInt64 Valve.VR.SteamVR_Input_Source::GetHandle(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Input_Source_GetHandle_m0FAD747327B66172ACE9A9C1CD14FEDF685C7D3B (int32_t ___inputSource0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_fullPath(System.String)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_fullPath_m7532C77C62FC0CE955B4CF3581815398179B33EF_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, String_t* ___value0, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source_Map::GetActionSetPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_GetActionSetPath_m9313321D0AA1100C49D6281C5078CABA46ABA787 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Input::GetActionSetFromPath(System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Input_GetActionSetFromPath_mC6422D2A975439C138435CAFF70D2277EA94CA61 (String_t* ___path0, bool ___caseSensitive1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_actionSet(Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_actionSet_mB40E957F963E0E3755C77F78B2094A06834B366F_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::GetActionDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_direction(Valve.VR.SteamVR_ActionDirections)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_direction_m952BA1C44972F3D692FB1E5A53B275A397B86F02_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_Input_Sources[] Valve.VR.SteamVR_Input_Source::GetAllSources()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* SteamVR_Input_Source_GetAllSources_m3FEDAE791D389B6ED4E1A7665B1F6381780C8352 (const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source_Map::get_fullPath()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method);
// System.String System.String::ToLowerInvariant()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLowerInvariant_m197BD65B6582DC546FF1BC398161EEFA708F799E (String_t* __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetActionHandle(System.String,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetActionHandle_mF2A82BF273790C37B9268EBC1BD39CF90EC258B0 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, String_t* ___pchActionName0, uint64_t* ___pHandle1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_handle(System.UInt64)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_handle_mD2434905F9AA79607DC207C7C7855E0DCDFAF417_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, uint64_t ___value0, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64 (String_t* ___str00, String_t* ___str11, String_t* ___str22, String_t* ___str33, const RuntimeMethod* method);
// System.Int32 System.String::IndexOf(System.Char,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D (String_t* __this, Il2CppChar ___value0, int32_t ___startIndex1, const RuntimeMethod* method);
// System.String System.String::Substring(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Substring_mB593C0A320C683E6E47EFFC0A12B7A465E5E43BB (String_t* __this, int32_t ___startIndex0, int32_t ___length1, const RuntimeMethod* method);
// System.Boolean System.String::op_Equality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE (String_t* ___str00, String_t* ___str11, const RuntimeMethod* method);
// System.Globalization.CultureInfo System.Globalization.CultureInfo::get_CurrentCulture()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * CultureInfo_get_CurrentCulture_mD86F3D8E5D332FB304F80D9B9CA4DE849C2A6831 (const RuntimeMethod* method);
// System.String System.String::ToLower(System.Globalization.CultureInfo)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLower_m91732DBE4AE31B77EA3BB2C185E66513919968A5 (String_t* __this, CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___culture0, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573 (SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * (*) (SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mB034B2596B39A1DB5B5BA1ADA63292FDE8DBF9D9_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_axis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastAxis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_delta()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastDelta()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::.ctor()
inline void SteamVR_Action_In_2__ctor_mC337EE2FE20E16CE0DE3BC0FB61364B227330B64 (SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C *, const RuntimeMethod*))SteamVR_Action_In_2__ctor_mE8D7F48E48E81915F85312A869B9F905CAF9B986_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_mF196A84C3451B66EB3C0442338565F96747D1BDD (SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_m97D226DB0464C3D2CF67AC71B588420741A770F6_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastAxis(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastAxis_m28E7093728C01D3ABBF9871752E734D022101498_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastDelta(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastDelta_m1140772DB3236B7C53E1B0723623DC3F564FC5BE_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetAnalogActionData(System.UInt64,Valve.VR.InputAnalogActionData_t&,System.UInt32,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetAnalogActionData_mD66B59E77195699C364DA07926CA524C55708FCD (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * ___pActionData1, uint32_t ___unActionDataSize2, uint64_t ___ulRestrictToDevice3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::set_updateTime(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Vector2::.ctor(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, float ___x0, float ___y1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_axis(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_axis_m5714B37391AC92E5DB0BB3E1D600280B054A063D_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_delta(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_delta_mE23EC73FCF0BFAAE785BFED2A3E3DF99A7A0A824_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector2::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector2_get_magnitude_m66097AFDF9696BD3E88467D4398D4F82B8A4C7DF (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m664C8AE96DAF8EAB9BD99C79452FCD0B50D91645 (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector2::op_Inequality(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lhs0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rhs1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/AxisHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m483B11CC81D9E82CDE50D9629D580788C464A29C (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m5BB2427CCB8050DF5F86E52782DBE6A180B6481C (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m5A3352BD144AFB3158E26F423D73B6392B2138A5 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source__ctor_mE238DF9510354C14124DF4D1973356C078DAE3BB (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>::.ctor()
inline void SteamVR_Action_In_Source_Map_1__ctor_m170B052F1C8F4630A0EA0945BFBD16741CE154F8 (SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D *, const RuntimeMethod*))SteamVR_Action_In_Source_Map_1__ctor_mA777437FDF48094346227E72C185C4F6703872B6_gshared)(__this, method);
}
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A (SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * (*) (SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mB034B2596B39A1DB5B5BA1ADA63292FDE8DBF9D9_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onChange(Valve.VR.SteamVR_Action_Vector3/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onChange_mBC0D15F379F129D8B26B395AA54FEA447711BFCB (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector3/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onChange_m8A33FE53328AAE0025BDAEC35D22FB0F9113CA0A (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector3/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onUpdate_mE9FEAEF2D8870D9CCB4E2C7DE9E75061D706A4EE (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector3/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onUpdate_m38E4C3064DFE3725CE69DC446A6F10192C1F5B1E (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector3/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onAxis_mCBBF665AB546060F4E654D9FC0E79FE4ED5D5A49 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector3/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onAxis_m8BCC7D535B497B755AC3CB8EDB997BD6CB92099C (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onActiveChange_m852AB08B89861ACB66FE7688DC14A3BDB15C3681 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onActiveChange_m2C0CA1E525F84DE742C9F16077EFA4222F43B1D9 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onActiveBindingChange_m562401793E091E0F7334C655471E49B47D379296 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_mA2C523EA1DFFAAD99B982082A2CE53D1D061B5D8 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_axis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_lastAxis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastAxis_mB5307EA9C41A76639B02A5FB7C775E14C7E8BE8E_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_delta()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_lastDelta()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastDelta_mBCB31D8D0D5F3B64784F01EAFFC7311F1E07B467_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>::.ctor()
inline void SteamVR_Action_In_2__ctor_m84A0B8D072E249A2404A01F576F10FAED065E6EF (SteamVR_Action_In_2_tFC1FB3FBCB26CEB814D8547C997DDFD01A8A0FB2 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_2_tFC1FB3FBCB26CEB814D8547C997DDFD01A8A0FB2 *, const RuntimeMethod*))SteamVR_Action_In_2__ctor_mE8D7F48E48E81915F85312A869B9F905CAF9B986_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_m115A20871F3A2469AFA25F1296BEA571EEA164D1 (SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_m97D226DB0464C3D2CF67AC71B588420741A770F6_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastAxis(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastAxis_m28F3924C1B15B865D8AEFAF67281F05757648473_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastDelta(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastDelta_m7BEEB33B48E2BE301807AA1D6A754858D4BB1FFA_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_axis(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_axis_mB9D09CB96B3545F03A433FBFF015D9112D4D9ED1_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_delta(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_delta_m264245821BC9CC75826758D185828BE590B6A1B6_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mFC8F10B8AA67939364C81F4F91B268C6A50D80D8 (ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Inequality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3/AxisHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m7796C560153E4FEB49C1200E64AC426FE450B4D5 (AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mB72DF15E0A1450D4EA146924A0E51BB848DDC4C4 (UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mAB21A23BC632397BB13F970F87C8C8C33A32D42D (ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>::.ctor()
inline void SteamVR_Action_In_Source_Map_1__ctor_mF16C47EF3F671810A76B7E558CB85E5E00A66F32 (SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253 *, const RuntimeMethod*))SteamVR_Action_In_Source_Map_1__ctor_mA777437FDF48094346227E72C185C4F6703872B6_gshared)(__this, method);
}
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82 (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * (*) (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mB034B2596B39A1DB5B5BA1ADA63292FDE8DBF9D9_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveChange_m9BC2B487CBED1D7127ED45293CA941D72E3E12B2 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveChange_mC23DE0386F09EAF989BC23BF469B87675CC633F2 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m5456DA7FADEDDED32977C854D76BB7765EEF72C1 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m26A0079B8CE2B2725D05363380786A0FBADBA58B (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onExecute(Valve.VR.SteamVR_Action_Vibration/ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onExecute_m3A0C48B0C709153E82F1C7F964229831D1A5A5AD (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onExecute(Valve.VR.SteamVR_Action_Vibration/ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onExecute_mFD0DF79D91B2517D1BE827AF43192488BF95BB97 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Out`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>::.ctor()
inline void SteamVR_Action_Out_2__ctor_m0B60E31B563031DBD26BE2EA86C691DF168BA8A7 (SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0 *, const RuntimeMethod*))SteamVR_Action_Out_2__ctor_mB77B8471ACC3E31271EC6CBBCB014D7809B077B8_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Execute(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Execute_m2E924325EBC74765BD87DB04F35D3B2889653FFD (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___secondsFromNow0, float ___durationSeconds1, float ___frequency2, float ___amplitude3, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Vibration_Source::get_timeLastExecuted()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_Source_get_timeLastExecuted_m0813BD23177FE42617BF97C01D592865C6464465_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_m321165E7CC9DEF1DA851D90AED76EA3A1530D817 (SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_m97D226DB0464C3D2CF67AC71B588420741A770F6_gshared)(__this, method);
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source_Map::IsUpdating(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_Map_IsUpdating_m8D4BDB964FBB68E827D661BA701EDDF9E5949FF6 (SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Source::get_setActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Source_get_setActive_mB8D4F2911446984A8CE574F8A13206FCD3AD9125 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Initialize_m2F3A973A4338854E06EA51D28CA96DAB1E5D29C9 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Input::get_isStartupFrame()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Input_get_isStartupFrame_m58C4100EE4FBE44FA46B00ED8FD6B413355084EC (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::set_timeLastExecuted(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_timeLastExecuted_m1C13828DAEAC810794E69F6D684765E023131834_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___value0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::TriggerHapticVibrationAction(System.UInt64,System.Single,System.Single,System.Single,System.Single,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_TriggerHapticVibrationAction_m22B166A7C1A1D939E04BA46F4F0289457808DF84 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, float ___fStartSecondsFromNow1, float ___fDurationSeconds2, float ___fFrequency3, float ___fAmplitude4, uint64_t ___ulRestrictToDevice5, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration/ExecuteHandler::Invoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler_Invoke_mEE7B3BA7814F683DFFA60635413CD85B7EB3BBBC (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, float ___secondsFromNow2, float ___durationSeconds3, float ___frequency4, float ___amplitude5, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Out_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Out_Source__ctor_mD40E6B0CF3B2080FC36785E990954B083BF07387 (SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>::.ctor()
inline void SteamVR_Action_Source_Map_1__ctor_m6C1A695791C6F45BCFC9ADC7DCB97B87B3EC146A (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 *, const RuntimeMethod*))SteamVR_Action_Source_Map_1__ctor_m2A7CDEF37045DF1A11A62CE29A48F11C11274029_gshared)(__this, method);
}
// System.Boolean Valve.VR.SteamVR_ActionSet::op_Inequality(Valve.VR.SteamVR_ActionSet,Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_op_Inequality_m721A47D369C12591F695554F548A4AED339DCD98 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set10, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set21, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet::Activate(Valve.VR.SteamVR_Input_Sources,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Activate_m9E7B583FB5B8625931642D12873FD1A9AD38C3D8 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___activateForSource0, int32_t ___priority1, bool ___disableAllOtherActionSets2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet::Deactivate(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Deactivate_m0CADB6A6829335596DD5C60C7B5B702341BCE79F (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___forSource0, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Input::GetActionSet(System.String,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Input_GetActionSet_m3D32BFAF8D4C4B88664C21668840E4A34A53F47B (String_t* ___actionSetName0, bool ___caseSensitive1, bool ___returnsNulls2, const RuntimeMethod* method);
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour::Initialize(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Initialize_m528617B3FCC69EFDCE02D8F4FDC31A912864393B (bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<Valve.VR.SteamVR_Render>()
inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1 (const RuntimeMethod* method)
{
	return ((  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * (*) (const RuntimeMethod*))Object_FindObjectOfType_TisRuntimeObject_mE3957366B74863C807E6E8A23D239A0CB079BB9C_gshared)(method);
}
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<Valve.VR.SteamVR_Behaviour>()
inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034 (const RuntimeMethod* method)
{
	return ((  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * (*) (const RuntimeMethod*))Object_FindObjectOfType_TisRuntimeObject_mE3957366B74863C807E6E8A23D239A0CB079BB9C_gshared)(method);
}
// System.Void UnityEngine.GameObject::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject__ctor_mBB454E679AD9CF0B84D3609A01E6A9753ACF4686 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, String_t* ___name0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::AddComponent<Valve.VR.SteamVR_Behaviour>()
inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_m80EDFEAC4927F588A7A702F81524EDBFA8603FE2_gshared)(__this, method);
}
// !!0 UnityEngine.GameObject::AddComponent<Valve.VR.SteamVR_Render>()
inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_m80EDFEAC4927F588A7A702F81524EDBFA8603FE2_gshared)(__this, method);
}
// !!0 UnityEngine.GameObject::GetComponent<Valve.VR.SteamVR_Behaviour>()
inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mD4382B2843BA9A61A01A8F9D7B9813D060F9C9CA_gshared)(__this, method);
}
// !!0 UnityEngine.GameObject::GetComponent<Valve.VR.SteamVR_Render>()
inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mD4382B2843BA9A61A01A8F9D7B9813D060F9C9CA_gshared)(__this, method);
}
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::get_root()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_root_m101A8B5C2CC6D868B6B66EEDBD5336FC1EB5DDD6 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Object::DontDestroyOnLoad(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_DontDestroyOnLoad_m4DC90770AD6084E4B1B8489C6B41205DC020C207 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___target0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour::InitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_InitializeSteamVR_mE61CA86A8346EE3801DD80B936BB0ECFB6685B12 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method);
// System.Void UnityEngine.MonoBehaviour::StopCoroutine(UnityEngine.Coroutine)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour_StopCoroutine_mC465FFA3C386BA22384F7AFA5495FF2286510562 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * ___routine0, const RuntimeMethod* method);
// System.String UnityEngine.XR.XRSettings::get_loadedDeviceName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* XRSettings_get_loadedDeviceName_m952D46346306FD9477B13992E5797A85CCD3C98C (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour::EnableOpenVR()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_EnableOpenVR_m7D05792DA3B94D1C9553D65294F10BCD68AEFEDA (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method);
// System.Collections.IEnumerator Valve.VR.SteamVR_Behaviour::DoInitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SteamVR_Behaviour_DoInitializeSteamVR_m6381B3BE347375855EB5B57333EA5DBB73227676 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method);
// UnityEngine.Coroutine UnityEngine.MonoBehaviour::StartCoroutine(System.Collections.IEnumerator)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, RuntimeObject* ___routine0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR::Initialize(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Initialize_mACC3A05E160D196A04EF693265E13E9930A1FC02 (bool ___forceUnityVRMode0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour/<DoInitializeSteamVR>d__15::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15__ctor_m476D34AD9FAB52D415A5F7BE548FA68F1C5D2A4F (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51 (RuntimeObject * ___message0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___context1, const RuntimeMethod* method);
// System.Void UnityEngine.XR.XRSettings::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRSettings_set_enabled_m9180DFDC2B9EF502DEB9503C98A0D53B4B9F8E1B (bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void UnityEngine.Application::add_onBeforeRender(UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_add_onBeforeRender_mC00950B8FC35DB9048121D43BE8F69D55BCB4723 (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t> Valve.VR.SteamVR_Events::System(Valve.VR.EVREventType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * SteamVR_Events_System_mA00E549D3CEB4BB6C027399D29DBEC0DF774891B (int32_t ___eventType0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>::.ctor(System.Object,System.IntPtr)
inline void UnityAction_1__ctor_m6EB8530A97D512C3B138A2E6D2E3AC341BF52772 (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *, RuntimeObject *, intptr_t, const RuntimeMethod*))UnityAction_1__ctor_m6EB8530A97D512C3B138A2E6D2E3AC341BF52772_gshared)(__this, ___object0, ___method1, method);
}
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Listen(UnityEngine.Events.UnityAction`1<T>)
inline void Event_1_Listen_m8A8805251599A69638ED15A0D6BE0714AA0A69EF (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method)
{
	((  void (*) (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 *, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *, const RuntimeMethod*))Event_1_Listen_m8A8805251599A69638ED15A0D6BE0714AA0A69EF_gshared)(__this, ___action0, method);
}
// System.Void UnityEngine.Application::remove_onBeforeRender(UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_remove_onBeforeRender_m4601D9804BC86F64FB071348EC1CF448C55CBA3B (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Remove(UnityEngine.Events.UnityAction`1<T>)
inline void Event_1_Remove_m8F5B244890D81ADF723423B17F09C474EC362C4E (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method)
{
	((  void (*) (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 *, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *, const RuntimeMethod*))Event_1_Remove_m8F5B244890D81ADF723423B17F09C474EC362C4E_gshared)(__this, ___action0, method);
}
// System.Void Valve.VR.SteamVR_Behaviour::PreCull()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_PreCull_m6646FC73833D0F3506A42D22CB6F7565D88783DE (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.Time::get_frameCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::OnPreCull()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_OnPreCull_mA4CD4296BCD557431B499AC0AC0C58493D01D169 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::FixedUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_FixedUpdate_m177FE3CA7F1B8732DF3FE5F3E56A1E0E2422DCE0 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_LateUpdate_mFA45F1D6538FD33644A2FC421DBDDB3D491EFA80 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_Update_mF5146B4D36CF2D1B1EF27991EC46FA8A06F2B25B (const RuntimeMethod* method);
// System.Void UnityEngine.Application::Quit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_Quit_mA005EB22CB989AC3794334754F15E1C0D2FF1C95 (const RuntimeMethod* method);
// System.Void System.Action`1<System.String>::.ctor(System.Object,System.IntPtr)
inline void Action_1__ctor_mD9D4E02AEE600236E03EBAB2449B68B482FAC69B (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 *, RuntimeObject *, intptr_t, const RuntimeMethod*))Action_1__ctor_mAFC7442D9D3CEC6701C3C5599F8CF12476095510_gshared)(__this, ___object0, ___method1, method);
}
// System.Void UnityEngine.XR.XRDevice::add_deviceLoaded(System.Action`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRDevice_add_deviceLoaded_m26813F2791F89E1058B14D5932BD00C2A009A74C (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.XR.XRSettings::LoadDeviceByName(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRSettings_LoadDeviceByName_m39BADCB8CB3C59E2DB929CEF7DFBF6CFA1209095 (String_t* ___deviceName0, const RuntimeMethod* method);
// System.Void UnityEngine.XR.XRDevice::remove_deviceLoaded(System.Action`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRDevice_remove_deviceLoaded_mC3D6CF39606865E78F1F19CA21613A8DD1B8EDDF (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * ___value0, const RuntimeMethod* method);
// System.Void System.NotSupportedException::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33 (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action::op_Inequality(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_op_Inequality_mFB76099464A8AAA9236C698A42B175537F5EF4FE (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action10, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action21, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action::op_Equality(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_op_Equality_m3F980F171D77E1CF1D953F9E7EE4EDC800E44BF7 (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action10, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action21, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_AddHandlers_m823CFF107CF1AD53DE4C9EC1F9D4C176A82BB7B5 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_RemoveHandlers_mAC5DA1A3504CFE75A437DECA78C182AFAAAF525F (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mE13407DCCC32DE335A641BBEEB5EE2565AAA7052 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onUpdate(Valve.VR.SteamVR_Action_Boolean/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onUpdate_m43D27C8A8B7DFC39F24F31768AC83B87F380AA98 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m821738C90ED208E453FEBEE39FB4CD78EF6C4A08 (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onChange(Valve.VR.SteamVR_Action_Boolean/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onChange_m14AB5553E5BEE97154D1ACE90FF20DFDEDED40E7 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler__ctor_m4258DE1F7D0DE8DA40762C0935553B32B6841E57 (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onState_m9F952DE795F0A1BC8F161BE03F877894EA973823 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateDownHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler__ctor_m6271CC07935F4139DF0D5F88F608F7DBF82FF6F5 (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateDown_m134E6EC8C9B791AA70682D015A0975D4DEA78149 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateUpHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler__ctor_m1D72844DE26B6E55070A8D0DFB88A31A09F0820F (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateUp_m12CDC2DD35ED4AC1CCD9C42AB149576D195B31C1 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Boolean/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onUpdate_mAC0DFDB074F54D52DFE402808FB2235809562B85 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onChange(Valve.VR.SteamVR_Action_Boolean/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onChange_mC157DE7645416252EEC96DFEECBC80CE7294CDED (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onState_mE7577EF4670E0BB1EC939B92D024E29C825AD60E (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateDown_m69EDBBEE11F60CD90D69A36C2146CD3532EA504F (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateUp_mA8DFD7672CA1FBA47512E22F6A5E8CA357FCFCB8 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A (UnityEvent_3_t40081F2EF697F552E8C4A377AC5C3B4C2E7A2A5A * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___arg00, int32_t ___arg11, bool ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t40081F2EF697F552E8C4A377AC5C3B4C2E7A2A5A *, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*))UnityEvent_3_Invoke_mA446E8872131E8C56B5C9995FF10F9F63B8334DA_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/StateUpHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_Invoke_m50FCB23C7A7A474D85188C5AD6C1258AFB6289EF (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/StateDownHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_Invoke_m9143FE3FB36ABDF2E97E78C1D47E21EE240E953B (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/StateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_Invoke_mC044280A789605C2CA717034981A510E46E94B92 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mAB0C8158A79B1F5B6B53B06FD58EA18B2BEBCFCB (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mCD22516E5D9E57224F5705B66C987FD9E73769AB (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
inline String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_m7946F1E5B03F2BC1C2E8890A4C6288540608CAB7 (SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method)
{
	return ((  String_t* (*) (SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9 *, int32_t, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*, const RuntimeMethod*))SteamVR_Action_In_2_GetLocalizedOriginPart_mCE7BB17414DA443FA6D668A990CA9E74155AB27D_gshared)(__this, ___inputSource0, ___localizedParts1, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>::.ctor()
inline void UnityEvent_3__ctor_m91B112A0D14C5CA7DDDF2595028DEA1CDF5486E7 (UnityEvent_3_t40081F2EF697F552E8C4A377AC5C3B4C2E7A2A5A * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t40081F2EF697F552E8C4A377AC5C3B4C2E7A2A5A *, const RuntimeMethod*))UnityEvent_3__ctor_mC0BE18C870B24A3C20C849DAA302A31BAEFA9D71_gshared)(__this, method);
}
// UnityEngine.Transform UnityEngine.Transform::get_parent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mB229E4D4E00FE9946266DE5EF6387E240FA96D6D (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onUpdate_mD30D3D18C58E9FD060B58868A4D66478C06FCADD (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_mA41805A0B436012CFB19EAB0D88336B275CC206C (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m26FF6E86E0FC25279D9DF124C3A00DA48AA22C6C (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m349218462C65472313178FCB53D7C385ECF381D8 (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onTrackingChanged_m916FC64B7E280897083BF516B0A2B10BC4034499 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m282D0F5DA54AA20DC12B31D0AC3F914C3B5382F8 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onChange_m86F9A8C49AAB74EFBED5F82F2BD450687C529567 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onUpdate_m600E90F3012E310B2178CB34B8E3C3A35380A579 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mC9B0E9333A8B27427E1197B77C6D287FD2C687F5 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onTrackingChanged_m664E1FD884A6B739CF4BCAD82EE1168E234B0AAF (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onChange_mB962374F5363148A48D573F22C5E1B385411E27F (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_RingBuffer`1<Valve.VR.SteamVR_HistoryStep>::Clear()
inline void SteamVR_RingBuffer_1_Clear_m2C7D896B3858292039808C7E01DF664897B475FF (SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4 *, const RuntimeMethod*))SteamVR_RingBuffer_1_Clear_m5528DA1A5C57E5F48EE17EF2B2B73ED0ACDF66EE_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateHistoryBuffer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE5965D2F04585896D0B4555AB7379C732AB045B6 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>::Invoke(!0,!1)
inline void UnityEvent_2_Invoke_mDC3ABD7C6EF5EC88E0AE0923288A39DD09F6FA90 (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*))UnityEvent_2_Invoke_mE003BB5BE38016CA479D13E0D5DA06758009E796_gshared)(__this, ___arg00, ___arg11, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mDDA906529471A51F856EB671F5A44826ABE33068 (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::TransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Pose/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m08F52092C2F8FD9116F4F4A94A2B9062C9735815 (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_m3A78EF6BF93EE4D499650755D51FDC077326A4F3 (UnityEvent_3_t71F1FA1B2F643E879720744F46B639680D8085B7 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, bool ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t71F1FA1B2F643E879720744F46B639680D8085B7 *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*))UnityEvent_3_Invoke_mA446E8872131E8C56B5C9995FF10F9F63B8334DA_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_m637148C39A2326D56FC7B774FF3E4EDF6F6355F0 (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_m85D272CC49BAAEA486833C6EF0950B82842CEF5F (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*))UnityEvent_3_Invoke_m54B5912104B3776D094958037AD7B363652AF435_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m8DFF53BE0761028A6D670B44B4A14CCF3D8A848C (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, const RuntimeMethod* method);
// System.UInt32 Valve.VR.SteamVR_Action_In_Source::get_trackedDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_In_Source_get_trackedDeviceIndex_m3AE971D28C54215B8531E9D35CE939CCA3927947 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject_BroadcastMessage_mDF70A40A7E27DF70B4338EBB840500A54060E33D (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, String_t* ___methodName0, RuntimeObject * ___parameter1, int32_t ___options2, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_mD4A4C2D0CA068E45CD98111CAE832D288E038E98 (UnityEvent_3_t41E2F467D883C365FE208841F67E87C4295808B5 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t41E2F467D883C365FE208841F67E87C4295808B5 *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*))UnityEvent_3_Invoke_m2E40BAB9F1CF768310837623A89E444FAE9A168C_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/DeviceIndexChangedHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler_Invoke_mC7F54C10D012458FDE950B3349945FE096798356 (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___newDeviceIndex2, const RuntimeMethod* method);
// System.Int32 Valve.VR.SteamVR_HistoryBuffer::GetTopVelocity(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_HistoryBuffer_GetTopVelocity_m9879A66440CD7741F7032B4EA29EB7807A54663E (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, int32_t ___forFrames0, int32_t ___addFrames1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_HistoryBuffer::GetAverageVelocities(UnityEngine.Vector3&,UnityEngine.Vector3&,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_HistoryBuffer_GetAverageVelocities_mA06C8875232AF8B028643E48DF4824828E809ED7 (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity1, int32_t ___forFrames2, int32_t ___startFrame3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_HistoryBuffer::Update(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_HistoryBuffer_Update_m1725BFA78088B923B0A9A9EEB4552AE27DE167B0 (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___velocity2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___angularVelocity3, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
inline String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_m6B8853113B1DDDB2FA182A1A68D34C62C7DE0B0D (SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method)
{
	return ((  String_t* (*) (SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199 *, int32_t, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*, const RuntimeMethod*))SteamVR_Action_In_2_GetLocalizedOriginPart_mCE7BB17414DA443FA6D668A990CA9E74155AB27D_gshared)(__this, ___inputSource0, ___localizedParts1, method);
}
// T Valve.VR.SteamVR_Input::GetAction<Valve.VR.SteamVR_Action_Pose>(System.String,System.Boolean)
inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m023E8D67A6FE7772CBA906DD9D78CF46E68507A6 (String_t* ___actionName0, bool ___caseSensitive1, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * (*) (String_t*, bool, const RuntimeMethod*))SteamVR_Input_GetAction_TisRuntimeObject_mA044FE454DF4C33DFBF7D8FDCE1CD3043A0B8229_gshared)(___actionName0, ___caseSensitive1, method);
}
// System.Void Valve.VR.SteamVR_HistoryBuffer::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_HistoryBuffer__ctor_mE5FCF2AC8A1DC7776A467E386A5DF05D5B58C543 (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, int32_t ___size0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>::.ctor()
inline void UnityEvent_2__ctor_m137357246070AFA3B17FB19910C2A1185E6D8621 (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E *, const RuntimeMethod*))UnityEvent_2__ctor_m4FD0B1A839EF587282C8A066EE6F458D216262D3_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>::.ctor()
inline void UnityEvent_3__ctor_mCD47DA05DC1F58F7F16CC19983F3A4496808D370 (UnityEvent_3_t71F1FA1B2F643E879720744F46B639680D8085B7 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t71F1FA1B2F643E879720744F46B639680D8085B7 *, const RuntimeMethod*))UnityEvent_3__ctor_mC0BE18C870B24A3C20C849DAA302A31BAEFA9D71_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>::.ctor()
inline void UnityEvent_3__ctor_m66C9678D0591A0E9192455E02726644C922DA272 (UnityEvent_3_t41E2F467D883C365FE208841F67E87C4295808B5 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t41E2F467D883C365FE208841F67E87C4295808B5 *, const RuntimeMethod*))UnityEvent_3__ctor_m96A207D8DE143F181AC391B7F9F97A9128650ADE_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>::.ctor()
inline void UnityEvent_3__ctor_m10F71AE70BD85BB8601FBA6614DDB9C0F985F2EE (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE *, const RuntimeMethod*))UnityEvent_3__ctor_m79023AE6DD61357B99DCBA8BD8DBAE28A21FF079_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_AddHandlers_m33DFA219D2F2AD321D3959EF6F374EB90DE9A545 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Single::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_RemoveHandlers_m823BF0CB040DDBD5205EDF83C240384A0155A928 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m6B04127973436C135BDB28626E480F28EF3FD6F5 (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onUpdate_m5598F5E0ABEB41135E942BD9590CA88A5E89A167 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mCF2663657392E7296C21F3A6E3F8DB6A77A94CAD (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onChange_m293210E1B8395F5C75302844AF1B4AE74DD2F3A8 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m13D20337BE85E01A8B0DA46EC96C10B767B0D1F7 (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onAxis_m61631AE5B07E5BA034D52ED44590597E6A13AC24 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onUpdate_mB6B6416FED4DA773EFB6D97EE7E6C9ED8F4CA16C (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onChange_m416E274F58D3F80F3E2AC77BC933E1D1F8BBDECD (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onAxis_m75F1ECD8DFD59FAFE831C580F22F1E2A0039D742 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single>::Invoke(!0,!1,!2,!3)
inline void UnityEvent_4_Invoke_m0BEEA262F9A9CB9B641A2FD8F786D8E254B63030 (UnityEvent_4_t27B5A01BBE9C4FCF8B974D92F4D411CFC467A294 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___arg00, int32_t ___arg11, float ___arg22, float ___arg33, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_4_t27B5A01BBE9C4FCF8B974D92F4D411CFC467A294 *, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*))UnityEvent_4_Invoke_mC209313FB4EE7365736CCA7C0562F2E14BC9AD5D_gshared)(__this, ___arg00, ___arg11, ___arg22, ___arg33, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m50B155030C06D9169010AFE5AFDB2CCF06B98907 (UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Single/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mD29E394EC0C784FB63674CE10FA7A33CA8B6446E (ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Single/AxisHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m4B47C4900401208173B5B125531557B156F37DD6 (AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
inline String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_m529B61D802BBCF28F2C092C5346383AEA75A3668 (SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method)
{
	return ((  String_t* (*) (SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02 *, int32_t, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*, const RuntimeMethod*))SteamVR_Action_In_2_GetLocalizedOriginPart_mCE7BB17414DA443FA6D668A990CA9E74155AB27D_gshared)(__this, ___inputSource0, ___localizedParts1, method);
}
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_Map__ctor_m5230AC179899A005416BDED17CA57813E46D3095 (SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_Map__ctor_m5230AC179899A005416BDED17CA57813E46D3095_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_In_Source_Map_1__ctor_mB77B525B66B2B2D0584C98822837286DF43B701B(__this, /*hidden argument*/SteamVR_Action_In_Source_Map_1__ctor_mB77B525B66B2B2D0584C98822837286DF43B701B_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onActiveChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onActiveChange_m40D17716AE011C3C546D9311644DBD3FB039CD2A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onActiveChange_m40D17716AE011C3C546D9311644DBD3FB039CD2A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onActiveChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onActiveChange_m339C2BDD69B4C1D1B1B7FFCA026A61BACEFD7189 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onActiveChange_m339C2BDD69B4C1D1B1B7FFCA026A61BACEFD7189_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onActiveBindingChange_m8D5A4BC261C88609DCE5DC6C6ACA319CF096AE3F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onActiveBindingChange_m8D5A4BC261C88609DCE5DC6C6ACA319CF096AE3F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_mBA9217A7856EEA2B9346304FF33C00F3D35E381D(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onActiveBindingChange_m848BD10A1A87309B1DF4069572CE76F5F239F466 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onActiveBindingChange_m848BD10A1A87309B1DF4069572CE76F5F239F466_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m928BE406E004801B903336174AD71858077B4C31(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onChange(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onChange_m12A9C8A760977D5F6A2B691B27F130DDF53AC3D3 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onChange_m12A9C8A760977D5F6A2B691B27F130DDF53AC3D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onChange(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onChange_mDA1FBCD9AF09E3137213E323678DB53BA516C55F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onChange_mDA1FBCD9AF09E3137213E323678DB53BA516C55F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onUpdate(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onUpdate_m89B6922E93039BB28782F32834DA94C7BCD71B93 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onUpdate_m89B6922E93039BB28782F32834DA94C7BCD71B93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onUpdate(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onUpdate_m0E36BACC29D6E1A0EDD1D71A7A8FCACB8AD9BE12 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onUpdate_m0E36BACC29D6E1A0EDD1D71A7A8FCACB8AD9BE12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onTrackingChanged_mB96616276E5D48F8D8B4FDDC7EB5FDDBB05EC51F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onTrackingChanged_mB96616276E5D48F8D8B4FDDC7EB5FDDBB05EC51F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onTrackingChanged_mD222AA9F12ADA54BAE92CF73C3F29AB76394B216 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onTrackingChanged_mD222AA9F12ADA54BAE92CF73C3F29AB76394B216_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onValidPoseChanged_m8A1E87644531826367E6DE4A764001078158B278 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onValidPoseChanged_m8A1E87644531826367E6DE4A764001078158B278_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onValidPoseChanged_mE939F9AB63558D460288EB13C9AB8BA094CE5EAA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onValidPoseChanged_mE939F9AB63558D460288EB13C9AB8BA094CE5EAA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m2FD37E10C687951C71A4A79F55C2A0AB37599130 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m2FD37E10C687951C71A4A79F55C2A0AB37599130_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_m6FBB5C7942C93C9C82500CD1A245E867B5D9BEEF (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_m6FBB5C7942C93C9C82500CD1A245E867B5D9BEEF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton__ctor_mE6AACBF536160DEB2EF9E0D179D7E92A652D1AAC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton__ctor_mE6AACBF536160DEB2EF9E0D179D7E92A652D1AAC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Skeleton() { }
		SteamVR_Action_Pose_Base_2__ctor_m24086345D5295A3360CF25DCB9922CA2CC4ECF61(__this, /*hidden argument*/SteamVR_Action_Pose_Base_2__ctor_m24086345D5295A3360CF25DCB9922CA2CC4ECF61_RuntimeMethod_var);
		// public SteamVR_Action_Skeleton() { }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UpdateValue_mE62B79C272C41DD238C9CA81CEF61DF2B877217F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UpdateValue_mE62B79C272C41DD238C9CA81CEF61DF2B877217F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].UpdateValue(skipStateAndEventUpdates);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		bool L_2 = ___skipStateAndEventUpdates0;
		NullCheck(L_1);
		VirtActionInvoker1< bool >::Invoke(50 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, L_1, L_2);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UpdateValueWithoutEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UpdateValueWithoutEvents_m80B8E2671A00A7299A9E0FEF4010A8D87B01A782 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UpdateValueWithoutEvents_m80B8E2671A00A7299A9E0FEF4010A8D87B01A782_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].UpdateValue(true);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		VirtActionInvoker1< bool >::Invoke(50 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, L_1, (bool)1);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UpdateTransform(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UpdateTransform_mF3D00D161725EB90B155367C2485D7D092FF7650 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UpdateTransform_mF3D00D161725EB90B155367C2485D7D092FF7650_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.UpdateTransform(SteamVR_Input_Sources.Any, transformToUpdate);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___transformToUpdate0;
		SteamVR_Action_Pose_Base_2_UpdateTransform_mA2326B217389FE7C35FA7067EC5CB94B949791CD(__this, 0, L_0, /*hidden argument*/SteamVR_Action_Pose_Base_2_UpdateTransform_mA2326B217389FE7C35FA7067EC5CB94B949791CD_RuntimeMethod_var);
		// }
		return;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::get_bonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_get_bonePositions_m0CA06F68C8E3D40036C298CE992C74A79C7DA80B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_bonePositions_m0CA06F68C8E3D40036C298CE992C74A79C7DA80B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3[] bonePositions { get { return sourceMap[SteamVR_Input_Sources.Any].bonePositions; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_2 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::get_boneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_get_boneRotations_m3FF8C259CBA6EF38DF309362206C2871EB754A4E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_boneRotations_m3FF8C259CBA6EF38DF309362206C2871EB754A4E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Quaternion[] boneRotations { get { return sourceMap[SteamVR_Input_Sources.Any].boneRotations; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_2 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::get_lastBonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_get_lastBonePositions_m5BB686C5104B6A2CC970239A84B0DD48EED00005 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastBonePositions_m5BB686C5104B6A2CC970239A84B0DD48EED00005_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3[] lastBonePositions { get { return sourceMap[SteamVR_Input_Sources.Any].lastBonePositions; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_2 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::get_lastBoneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_get_lastBoneRotations_m116F9E698A5C9DF460DD49FBEAB7580913027F9A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastBoneRotations_m116F9E698A5C9DF460DD49FBEAB7580913027F9A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Quaternion[] lastBoneRotations { get { return sourceMap[SteamVR_Input_Sources.Any].lastBoneRotations; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_2 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton::get_rangeOfMotion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_rangeOfMotion_m67729E8AE1AA6F85CB507D08500E43B64DF76785 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_rangeOfMotion_m67729E8AE1AA6F85CB507D08500E43B64DF76785_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_rangeOfMotion_mCEFC5B01B736A3B6218C5C91A0AEF272FFD88B47_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_rangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_rangeOfMotion_mCC7941D0B8CE86B51609ABF9804D181ED390EB99 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_rangeOfMotion_mCC7941D0B8CE86B51609ABF9804D181ED390EB99_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// set { sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion = value; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_rangeOfMotion_mD5E750C97DF02D77264C6215272D1982987A1483_inline(L_1, L_2, /*hidden argument*/NULL);
		// set { sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion = value; }
		return;
	}
}
// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton::get_skeletalTransformSpace()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_skeletalTransformSpace_mD90A3FC93A8F0BEF500E54EBE0AC67E323950B35 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_skeletalTransformSpace_mD90A3FC93A8F0BEF500E54EBE0AC67E323950B35_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m0D9D61CC1BC50CC7FA1F9AD5192FBC418009F3F3_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_skeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_skeletalTransformSpace_m39DBCAE0F9F39E5CDBD826BE8B6C50CC7DC78AB5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_skeletalTransformSpace_m39DBCAE0F9F39E5CDBD826BE8B6C50CC7DC78AB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// set { sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace = value; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_mF6B1E1B08AE63F49B66DDCFA097DA28DB8378783_inline(L_1, L_2, /*hidden argument*/NULL);
		// set { sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace = value; }
		return;
	}
}
// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton::get_summaryDataType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_summaryDataType_mD93DEF103A25384272D6EC1915F2B794806F4519 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_summaryDataType_mD93DEF103A25384272D6EC1915F2B794806F4519_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].summaryDataType; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_summaryDataType(Valve.VR.EVRSummaryType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_summaryDataType_m13115F91144A13888FD3AB33CD4FFCB4A599E001 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_summaryDataType_m13115F91144A13888FD3AB33CD4FFCB4A599E001_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// set { sourceMap[SteamVR_Input_Sources.Any].summaryDataType = value; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_summaryDataType_mC513A7AACFFC7DC686764E9A982DFAC02EC5B2F5_inline(L_1, L_2, /*hidden argument*/NULL);
		// set { sourceMap[SteamVR_Input_Sources.Any].summaryDataType = value; }
		return;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_skeletalTrackingLevel_m42CDC3C3C98C91065325A4C71510B9B8B6FBAA14 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_skeletalTrackingLevel_m42CDC3C3C98C91065325A4C71510B9B8B6FBAA14_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].skeletalTrackingLevel; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_skeletalTrackingLevel_mD592F4C9B67DBFB75FD15DF4755E51FC24C32769(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_thumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_thumbCurl_m1BD464F774C52E7239B4B82F4E56084F4CC1A8CC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_thumbCurl_m1BD464F774C52E7239B4B82F4E56084F4CC1A8CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float thumbCurl { get { return sourceMap[SteamVR_Input_Sources.Any].thumbCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_thumbCurl_m1E1B3EB8065D36CC07FD3D3F81142DE18117571D(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_indexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_indexCurl_mD40CFB5149D41DB9D401BA6316815F76D18E0862 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_indexCurl_mD40CFB5149D41DB9D401BA6316815F76D18E0862_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float indexCurl { get { return sourceMap[SteamVR_Input_Sources.Any].indexCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_indexCurl_m23B7090B54104226A276B2DA6F9AF05D8A87F4C4(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_middleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_middleCurl_m62D5CADF36971682033F53297E0BCCAE2F9291A6 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_middleCurl_m62D5CADF36971682033F53297E0BCCAE2F9291A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float middleCurl { get { return sourceMap[SteamVR_Input_Sources.Any].middleCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_middleCurl_mF2DB6D3C537BDA649730D9DED5FD8C158792A99E(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_ringCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_ringCurl_m772FE608FCBB514FFB5AC088EB6A8562E76EE96B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_ringCurl_m772FE608FCBB514FFB5AC088EB6A8562E76EE96B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float ringCurl { get { return sourceMap[SteamVR_Input_Sources.Any].ringCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_ringCurl_mB1080317044EB9464CBFA2AB4D579481889A4DF6(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_pinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_pinkyCurl_m64F91EE4141BACF0FB606F58E150CCD42ED15685 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_pinkyCurl_m64F91EE4141BACF0FB606F58E150CCD42ED15685_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float pinkyCurl { get { return sourceMap[SteamVR_Input_Sources.Any].pinkyCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_pinkyCurl_mDCB73847A197AC4E4F55DF28D27857EE71F131B3(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_thumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_thumbIndexSplay_mE7F58F6BB1309EEB6BAF6048DCEF95FD7CDB7F7F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_thumbIndexSplay_mE7F58F6BB1309EEB6BAF6048DCEF95FD7CDB7F7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float thumbIndexSplay { get { return sourceMap[SteamVR_Input_Sources.Any].thumbIndexSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_thumbIndexSplay_m8A48CFB2D8446B92D1ACD230A06CCADEADAF90D8(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_indexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_indexMiddleSplay_mCEF74F281F6E5AA8CEB2B6C38C4521E6A5504CD3 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_indexMiddleSplay_mCEF74F281F6E5AA8CEB2B6C38C4521E6A5504CD3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float indexMiddleSplay { get { return sourceMap[SteamVR_Input_Sources.Any].indexMiddleSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_indexMiddleSplay_m032F314FF2441AF7819CD080BAC24BD7EA1D25B2(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_middleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_middleRingSplay_mBBA68EE0F20B15BE029B99BF161B6EF769D7D8B1 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_middleRingSplay_mBBA68EE0F20B15BE029B99BF161B6EF769D7D8B1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float middleRingSplay { get { return sourceMap[SteamVR_Input_Sources.Any].middleRingSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_middleRingSplay_m8F9D81F3B1CB80C0DD82485A54DB100FF1B0E546(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_ringPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_ringPinkySplay_mE8F0CDC0FEF2E9B5574DE4052C71992CE0C056E3 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_ringPinkySplay_mE8F0CDC0FEF2E9B5574DE4052C71992CE0C056E3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float ringPinkySplay { get { return sourceMap[SteamVR_Input_Sources.Any].ringPinkySplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_ringPinkySplay_m1A57999FB132953BE3265B6C3AB7E274A1D10DE0(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastThumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastThumbCurl_mA1ADB215014FA9B424CBE9C69873CF3F0C09178F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastThumbCurl_mA1ADB215014FA9B424CBE9C69873CF3F0C09178F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastThumbCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastThumbCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastThumbCurl_mE893135DF37D02B74C7B190331E8A214C5350AC4(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastIndexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastIndexCurl_mCB8D286E38817E71154F868F20D34781520D2342 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastIndexCurl_mCB8D286E38817E71154F868F20D34781520D2342_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastIndexCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastIndexCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastIndexCurl_mB7429964CAA0C0A16B0C98F8FEADEFFD8466CE30(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastMiddleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastMiddleCurl_mC6A14E91B4ACA78451639E2A12A0236CB8D4355A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastMiddleCurl_mC6A14E91B4ACA78451639E2A12A0236CB8D4355A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastMiddleCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastMiddleCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastMiddleCurl_m1EC63B41C764BED847913534AFA8D939FE64686A(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastRingCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastRingCurl_m49EEA025CDB4F42177A323C4669EE312C2EA104C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastRingCurl_m49EEA025CDB4F42177A323C4669EE312C2EA104C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastRingCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastRingCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastRingCurl_m243A9EC6EA188AA107D23B07BA8BEFCABC3EEAA8(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastPinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastPinkyCurl_mCDDB123CC3232A31CDEA442F98F1CD266DFB9473 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastPinkyCurl_mCDDB123CC3232A31CDEA442F98F1CD266DFB9473_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastPinkyCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastPinkyCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastPinkyCurl_m67226B9DF4D046AFFC83ED7FB6B9BD8678C0B306(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastThumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastThumbIndexSplay_mAA1B4AB36A8AE75C12693D14E837471F029582D7 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastThumbIndexSplay_mAA1B4AB36A8AE75C12693D14E837471F029582D7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastThumbIndexSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastThumbIndexSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastThumbIndexSplay_mFECABD9313D9F50354F74393A9A22B3DCF0C991B(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastIndexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastIndexMiddleSplay_m537358EC0290F43CF54E6D59908B747203917385 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastIndexMiddleSplay_m537358EC0290F43CF54E6D59908B747203917385_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastIndexMiddleSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastIndexMiddleSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastIndexMiddleSplay_mC780C06D5EFBB2E006D57433B5813666CABE8684(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastMiddleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastMiddleRingSplay_mC7DEA2B768D213209132AC1104490CE3A03225FF (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastMiddleRingSplay_mC7DEA2B768D213209132AC1104490CE3A03225FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastMiddleRingSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastMiddleRingSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastMiddleRingSplay_mF7BD21EE49B81B5326424FEA0EBB2191171BCDC6(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastRingPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastRingPinkySplay_mFE5B99D86267CAE5489CC5E38E519A9B703130EA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastRingPinkySplay_mFE5B99D86267CAE5489CC5E38E519A9B703130EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastRingPinkySplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastRingPinkySplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastRingPinkySplay_mE15C84D9E609B6A7941C2C96AAAF10514D3808B1(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_fingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_fingerCurls_m3543777AFAE62C3BDA5BD87296938A0A35968571 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_fingerCurls_m3543777AFAE62C3BDA5BD87296938A0A35968571_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float[] fingerCurls { get { return sourceMap[SteamVR_Input_Sources.Any].fingerCurls; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_fingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_fingerSplays_m9832D47FA8272304A06D1EA2D5983C6A0335C727 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_fingerSplays_m9832D47FA8272304A06D1EA2D5983C6A0335C727_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float[] fingerSplays { get { return sourceMap[SteamVR_Input_Sources.Any].fingerSplays; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_lastFingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_lastFingerCurls_m5845169E9581C6D1C559916C9FE6B0D3BD88F569 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastFingerCurls_m5845169E9581C6D1C559916C9FE6B0D3BD88F569_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float[] lastFingerCurls { get { return sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_lastFingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_lastFingerSplays_m1E58D2AB027C4777F5CF744CB81DA5D20AAE272B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastFingerSplays_m1E58D2AB027C4777F5CF744CB81DA5D20AAE272B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float[] lastFingerSplays { get { return sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::get_poseChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_get_poseChanged_mF300E3B9442ECA6F8E85323A6273F2D2BEDE7EBA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_poseChanged_mF300E3B9442ECA6F8E85323A6273F2D2BEDE7EBA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool poseChanged { get { return sourceMap[SteamVR_Input_Sources.Any].poseChanged; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Skeleton_Source_get_poseChanged_mBBFFCD8FF3AB5998C3B5053499A253E137EB6B01_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::get_onlyUpdateSummaryData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_get_onlyUpdateSummaryData_m57BB2B0F924B60931DB89E6519BD6D5DDC004366 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_onlyUpdateSummaryData_m57BB2B0F924B60931DB89E6519BD6D5DDC004366_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool onlyUpdateSummaryData { get { return sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData; } set { sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData = value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_onlyUpdateSummaryData(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_onlyUpdateSummaryData_mBE77FD96B7AE53E0FA0679F6C3F88016BF0643ED (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_onlyUpdateSummaryData_mBE77FD96B7AE53E0FA0679F6C3F88016BF0643ED_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool onlyUpdateSummaryData { get { return sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData; } set { sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData = value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		bool L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m02A775C0CAB57C16D4A673019586873F7C0B3CFB_inline(L_1, L_2, /*hidden argument*/NULL);
		// public bool onlyUpdateSummaryData { get { return sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData; } set { sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData = value; } }
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetActive_m1090332A342CFB41EB88E6BA50BBF8C696743A69 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetActive_m1090332A342CFB41EB88E6BA50BBF8C696743A69_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].active;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_1);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetSetActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetSetActive_m99514F836DE26CBCFE97A6C63F0057396E94932B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	{
		// return actionSet.IsActive(SteamVR_Input_Sources.Any);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, __this);
		NullCheck(L_0);
		bool L_1 = SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127(L_0, 0, /*hidden argument*/NULL);
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetVelocitiesAtTimeOffset_mA16A4DD85A3A182D61A4FBAA4FC09417857D6CC2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetVelocitiesAtTimeOffset_mA16A4DD85A3A182D61A4FBAA4FC09417857D6CC2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetVelocitiesAtTimeOffset(secondsFromNow, out velocity, out angularVelocity);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		float L_2 = ___secondsFromNow0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = ___velocity1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___angularVelocity2;
		NullCheck(L_1);
		bool L_5 = SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m2FB2A8F8F97750A6CAD390348AAE8E9DF94B9B69(L_1, L_2, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_3, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetPoseAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetPoseAtTimeOffset_m180DEFDDB1EBE9F66B1E68EA11C534AE1F963844 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___position1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotation2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity3, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetPoseAtTimeOffset_m180DEFDDB1EBE9F66B1E68EA11C534AE1F963844_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetPoseAtTimeOffset(secondsFromNow, out position, out rotation, out velocity, out angularVelocity);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		float L_2 = ___secondsFromNow0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = ___position1;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_4 = ___rotation2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_5 = ___velocity3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_6 = ___angularVelocity4;
		NullCheck(L_1);
		bool L_7 = SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_mB6CC830F3A16661AADD4A98BBA70E69ED8C98480(L_1, L_2, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_3, (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_4, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_5, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].localPosition;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::GetLocalRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].localRotation;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetVelocity_m9E1BECFF847AF4E2FB1AEF786886D9A1A5F42E38 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetVelocity_m9E1BECFF847AF4E2FB1AEF786886D9A1A5F42E38_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].velocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetAngularVelocity_mFC20208B5BBBA5BA921F1541BFBD1126A2850946 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetAngularVelocity_mFC20208B5BBBA5BA921F1541BFBD1126A2850946_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].angularVelocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetDeviceIsConnected_m2EFB10F62BBFDDCA14A353A0BFEA9DE26BFEDB72 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetDeviceIsConnected_m2EFB10F62BBFDDCA14A353A0BFEA9DE26BFEDB72_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].deviceIsConnected;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetPoseIsValid_m99410844A085C144FE9679FF756ADC2B0D030B74 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetPoseIsValid_m99410844A085C144FE9679FF756ADC2B0D030B74_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].poseIsValid;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Skeleton::GetTrackingResult()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_GetTrackingResult_mC2E4F3F2683D8B4AAB82B16F36D49F3FD81B5BE7 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetTrackingResult_mC2E4F3F2683D8B4AAB82B16F36D49F3FD81B5BE7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].trackingState;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLastLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLastLocalPosition_m47A225F07BE521AE0BCE352D6D9DC51EB1D3C367 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastLocalPosition_m47A225F07BE521AE0BCE352D6D9DC51EB1D3C367_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastLocalPosition;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::GetLastLocalRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Skeleton_GetLastLocalRotation_m99CAC6CCFA012EAA3DEF73BA8DC2B781E6F95542 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastLocalRotation_m99CAC6CCFA012EAA3DEF73BA8DC2B781E6F95542_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastLocalRotation;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLastVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLastVelocity_m578B56041101A994C9D60A31B9F360B7E0C63AAF (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastVelocity_m578B56041101A994C9D60A31B9F360B7E0C63AAF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastVelocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLastAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLastAngularVelocity_m0F6189A5D1B1F5400F4725891F1B7FB6B6A724BD (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastAngularVelocity_m0F6189A5D1B1F5400F4725891F1B7FB6B6A724BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastAngularVelocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetLastDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetLastDeviceIsConnected_mDE11523435C378EA5D5CDFD18DA2E613A7B3C84A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastDeviceIsConnected_mDE11523435C378EA5D5CDFD18DA2E613A7B3C84A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastDeviceIsConnected;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m54D89CD952536E4C6CC1B31D732F097A78FC6D83(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetLastPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetLastPoseIsValid_m59F5349322FB99412B3D1169B6529CBC47045464 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastPoseIsValid_m59F5349322FB99412B3D1169B6529CBC47045464_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastPoseIsValid;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_lastPoseIsValid_m7CC61D5F85FD1334CFC6F917EECDA224FA903D0E(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Skeleton::GetLastTrackingResult()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_GetLastTrackingResult_m37C8D9BEA0568AA117E7F4A9A6C25E36D08D628F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastTrackingResult_m37C8D9BEA0568AA117E7F4A9A6C25E36D08D628F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastTrackingState;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Int32 Valve.VR.SteamVR_Action_Skeleton::get_boneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_boneCount_mD9298F3DA3A9E0B9590359E9C79A2F382478B0AD (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	{
		// public int boneCount { get { return (int)GetBoneCount(); } }
		uint32_t L_0 = SteamVR_Action_Skeleton_GetBoneCount_mD2B27CC695DB970DE6F2FE9F57747306854185FC(__this, /*hidden argument*/NULL);
		return L_0;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::GetBonePositions(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_GetBonePositions_m3255642E4D3CFB08DC2AE68FEA234FD6BBCCD138 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBonePositions_m3255642E4D3CFB08DC2AE68FEA234FD6BBCCD138_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (Vector3[])sourceMap[SteamVR_Input_Sources.Any].bonePositions.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)Castclass((RuntimeObject*)L_4, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].bonePositions;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_7 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::GetBoneRotations(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_GetBoneRotations_mC23759032EEAB4D83EC4A90A7A438EA436291C78 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneRotations_mC23759032EEAB4D83EC4A90A7A438EA436291C78_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (Quaternion[])sourceMap[SteamVR_Input_Sources.Any].boneRotations.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_3 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)Castclass((RuntimeObject*)L_4, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].boneRotations;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_7 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::GetLastBonePositions(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_GetLastBonePositions_mE1AA5295248A42DA26F2BA67C7995CDE65111CD4 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastBonePositions_mE1AA5295248A42DA26F2BA67C7995CDE65111CD4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (Vector3[])sourceMap[SteamVR_Input_Sources.Any].lastBonePositions.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)Castclass((RuntimeObject*)L_4, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastBonePositions;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_7 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::GetLastBoneRotations(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_GetLastBoneRotations_mA7A7CBCB0B61367EBB09C9970C85A174877AF694 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastBoneRotations_mA7A7CBCB0B61367EBB09C9970C85A174877AF694_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (Quaternion[])sourceMap[SteamVR_Input_Sources.Any].lastBoneRotations.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_3 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)Castclass((RuntimeObject*)L_4, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastBoneRotations;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_7 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::SetRangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_SetRangeOfMotion_m017F4F1ED06300A3E9020E197317C7CCF8E1DF9B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___range0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_SetRangeOfMotion_m017F4F1ED06300A3E9020E197317C7CCF8E1DF9B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion = range;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___range0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_rangeOfMotion_mD5E750C97DF02D77264C6215272D1982987A1483_inline(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::SetSkeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_SetSkeletalTransformSpace_m61B2E3EEAC4B192918171C8B2963D560C650C73C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___space0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_SetSkeletalTransformSpace_m61B2E3EEAC4B192918171C8B2963D560C650C73C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace = space;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___space0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_mF6B1E1B08AE63F49B66DDCFA097DA28DB8378783_inline(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_GetBoneCount_mD2B27CC695DB970DE6F2FE9F57747306854185FC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneCount_mD2B27CC695DB970DE6F2FE9F57747306854185FC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetBoneCount();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		uint32_t L_2 = SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton::GetBoneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_GetBoneHierarchy_m7D18FB8905FF1D89946B28716C590188E1F6FC10 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneHierarchy_m7D18FB8905FF1D89946B28716C590188E1F6FC10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetBoneHierarchy();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_2 = SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.String Valve.VR.SteamVR_Action_Skeleton::GetBoneName(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_GetBoneName_mEA597D8F1EF33A996E2E155F72D403299BD01303 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___boneIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneName_mEA597D8F1EF33A996E2E155F72D403299BD01303_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetBoneName(boneIndex);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___boneIndex0;
		NullCheck(L_1);
		String_t* L_3 = SteamVR_Action_Skeleton_Source_GetBoneName_m464D8D3413D7782356433F03C854B062E0080488(L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// SteamVR_Utils_RigidTransform[] Valve.VR.SteamVR_Action_Skeleton::GetReferenceTransforms(Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* SteamVR_Action_Skeleton_GetReferenceTransforms_m003738CB3D282D68A3B67970CDF7F508117FD296 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___transformSpace0, int32_t ___referencePose1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetReferenceTransforms_m003738CB3D282D68A3B67970CDF7F508117FD296_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetReferenceTransforms(transformSpace, referencePose);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___transformSpace0;
		int32_t L_3 = ___referencePose1;
		NullCheck(L_1);
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_4 = SteamVR_Action_Skeleton_Source_GetReferenceTransforms_mD97ED9032334370252095D9ABCED25D4D5533B92(L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton::GetSkeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_GetSkeletalTrackingLevel_m6C574D1BBEA110C4DF8A5CEEF03E4987709F73E2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetSkeletalTrackingLevel_m6C574D1BBEA110C4DF8A5CEEF03E4987709F73E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetSkeletalTrackingLevel();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetFingerCurls(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetFingerCurls_m2C47FBB4DDBD822E30CDE306DB8C42EC1FB263EC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetFingerCurls_m2C47FBB4DDBD822E30CDE306DB8C42EC1FB263EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].fingerCurls.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_4, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerCurls;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_7 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurls(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetLastFingerCurls_m837D08CB5F33E924DD18D57A5336BB79C1F11E8E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastFingerCurls_m837D08CB5F33E924DD18D57A5336BB79C1F11E8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_4, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_7 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetFingerSplays(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetFingerSplays_mF382477166C698F55CD9295969DCB4CCC3E50358 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetFingerSplays_mF382477166C698F55CD9295969DCB4CCC3E50358_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].fingerSplays.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_4, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerSplays;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_7 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetLastFingerSplays(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetLastFingerSplays_mDE773B4D09E1BD573E61E51F68DBD2C539F7A5E6 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastFingerSplays_mDE773B4D09E1BD573E61E51F68DBD2C539F7A5E6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_4, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_7 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetFingerCurl_mC08596A16D1F47B97BFC0DC8D9089F761751C1A6 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetFingerCurl_mC08596A16D1F47B97BFC0DC8D9089F761751C1A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerCurls[finger];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___finger0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		return L_5;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetSplay_m66C049355DEC070185248558C8532BA370F5B14F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetSplay_m66C049355DEC070185248558C8532BA370F5B14F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerSplays[fingerGapIndex];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___fingerGapIndex0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		return L_5;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetFingerCurl(Valve.VR.SteamVR_Skeleton_FingerIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetFingerCurl_mF356A74E4AA4067E7C677F7355712E8D5333CC20 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	{
		// return GetFingerCurl((int)finger);
		int32_t L_0 = ___finger0;
		float L_1 = SteamVR_Action_Skeleton_GetFingerCurl_mC08596A16D1F47B97BFC0DC8D9089F761751C1A6(__this, L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetSplay(Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetSplay_m0B9CCE0033BD4171286613892126CB466820DB57 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerSplay0, const RuntimeMethod* method)
{
	{
		// return GetSplay((int)fingerSplay);
		int32_t L_0 = ___fingerSplay0;
		float L_1 = SteamVR_Action_Skeleton_GetSplay_m66C049355DEC070185248558C8532BA370F5B14F(__this, L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastFingerCurl_mEB8760CBAD65388E4ECCD999150C3D6287171762 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastFingerCurl_mEB8760CBAD65388E4ECCD999150C3D6287171762_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls[finger];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___finger0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		return L_5;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastSplay_mD9365C49755E9D59DBB8F2F9F42EBFA2EAC6DFD5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastSplay_mD9365C49755E9D59DBB8F2F9F42EBFA2EAC6DFD5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays[fingerGapIndex];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___fingerGapIndex0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		return L_5;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurl(Valve.VR.SteamVR_Skeleton_FingerIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastFingerCurl_mD523348413E650711C34942D88B83E098335A539 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	{
		// return GetLastFingerCurl((int)finger);
		int32_t L_0 = ___finger0;
		float L_1 = SteamVR_Action_Skeleton_GetLastFingerCurl_mEB8760CBAD65388E4ECCD999150C3D6287171762(__this, L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastSplay(Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastSplay_m4D66148602094F6F5B2E0BD20BB5F0734C17F68B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerSplay0, const RuntimeMethod* method)
{
	{
		// return GetLastSplay((int)fingerSplay);
		int32_t L_0 = ___fingerSplay0;
		float L_1 = SteamVR_Action_Skeleton_GetLastSplay_mD9365C49755E9D59DBB8F2F9F42EBFA2EAC6DFD5(__this, L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
// System.String Valve.VR.SteamVR_Action_Skeleton::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_GetLocalizedName_mCA0837A292A587208047FBE2124BC489489AD867 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLocalizedName_mCA0837A292A587208047FBE2124BC489489AD867_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetLocalizedOriginPart(localizedParts);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_2 = ___localizedParts0;
		NullCheck(L_1);
		String_t* L_3 = SteamVR_Action_In_Source_GetLocalizedOriginPart_m3439D4CD3B788C67CA290081280CFB128F6AE1ED(L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnDeviceConnectedChanged_m3F6920BBAA979A2A0EDB59218966A88E6668CA14 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnDeviceConnectedChanged_m3F6920BBAA979A2A0EDB59218966A88E6668CA14_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnDeviceConnectedChanged_mA18F4C31F9CFC1776A1AAC396D3C1119A628C9F7 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnDeviceConnectedChanged_mA18F4C31F9CFC1776A1AAC396D3C1119A628C9F7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnTrackingChanged_m402EAA963427FA4B649E5CD85AD98003FF7AE894 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnTrackingChanged_m402EAA963427FA4B649E5CD85AD98003FF7AE894_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnTrackingChanged_m84311EDF54C6CF314A1458A5E9F5770D0F03CD80 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnTrackingChanged_m84311EDF54C6CF314A1458A5E9F5770D0F03CD80_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnValidPoseChanged_m0B6DFA419BB885643B320E96B7B878EBE921B39B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnValidPoseChanged_m0B6DFA419BB885643B320E96B7B878EBE921B39B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnValidPoseChanged_mF9850F2CF5D7E5BB5227391356781343755A1A1A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnValidPoseChanged_mF9850F2CF5D7E5BB5227391356781343755A1A1A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnActiveChangeListener_m968F5A067EEF273C13B96DA27DA642DC6A66B7C2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnActiveChangeListener_m968F5A067EEF273C13B96DA27DA642DC6A66B7C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onActiveChange += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnActiveChangeListener_m5EEB8B05019E4FA1D263D5298C7BED8CC507AB70 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnActiveChangeListener_m5EEB8B05019E4FA1D263D5298C7BED8CC507AB70_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnChangeListener(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnChangeListener_m015ECED2A9A19D9CB71C6EFC04BF7D1AD88D9290 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnChangeListener_m015ECED2A9A19D9CB71C6EFC04BF7D1AD88D9290_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onChange += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnChangeListener_mB2F9897205C80AF6D1559591895B282C44FD5EBE (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnChangeListener_mB2F9897205C80AF6D1559591895B282C44FD5EBE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onChange -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnUpdateListener(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnUpdateListener_mF20419DDD629D27354EF32069FE666DBF37C1883 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnUpdateListener_mF20419DDD629D27354EF32069FE666DBF37C1883_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onUpdate += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnUpdateListener_m22D3BD60FDA20067C6BA839C23D845E6D8435CBC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnUpdateListener_m22D3BD60FDA20067C6BA839C23D845E6D8435CBC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onUpdate -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_mA131084E41123B14C2CD67034D5049B7FD565B4E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD478BABEFF9FCACC6B15E5540EEB66A8F7B4B545 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD478BABEFF9FCACC6B15E5540EEB66A8F7B4B545_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_m6328CD572A94DA88CD2DF7764B1C54660D864650(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_m6328CD572A94DA88CD2DF7764B1C54660D864650_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton__cctor_m0A753A149C76699E9C1789D16079474F9935338E (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton__cctor_m0A753A149C76699E9C1789D16079474F9935338E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public static Quaternion steamVRFixUpRotation = Quaternion.AngleAxis(Mathf.PI * Mathf.Rad2Deg, Vector3.up);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_1 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0((180.0f), L_0, /*hidden argument*/NULL);
		((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var))->set_steamVRFixUpRotation_7(L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m071BCD3292886C28C53DC005ECC6897B0EB4A350 (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m8F250A3B8449F2D46328A69B028001585024506D (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___active1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___active1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___active1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___active1);
					else
						GenericVirtActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___active1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___active1);
					else
						VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___active1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___active1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___active1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___active1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___active1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___active1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___active1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___active1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___active1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___active1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_mAE3B1385B2D13895DA61F41F44F316C1ECC3C209 (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___active1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_mAE3B1385B2D13895DA61F41F44F316C1ECC3C209_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mCFD786F18C141CF9FE3EAE55BB3895A471C8E63F (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mE892C787CDC661D25C4ECD07410B943BA18A46B7 (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mC5722DBE5AEDF8568E9849292C01588014D154EA (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker0::Invoke(targetMethod, ___fromAction0);
					else
						GenericVirtActionInvoker0::Invoke(targetMethod, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0);
					else
						VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0);
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
					else
						GenericVirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0);
					else
						VirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_mB5ED4E69460674FE062FDB9B1F9A35613419708C (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___fromAction0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m1629C88C6C408129CD9DE94782A3A395265B623A (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_m166361B45CC41B8D809ADD49F49E090602BF2A09 (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_mB57708EA08D45928D64D09652CE8A71248A92E1B (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___deviceConnected1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___deviceConnected1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___deviceConnected1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___deviceConnected1);
					else
						GenericVirtActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___deviceConnected1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___deviceConnected1);
					else
						VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___deviceConnected1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___deviceConnected1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___deviceConnected1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___deviceConnected1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___deviceConnected1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___deviceConnected1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___deviceConnected1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___deviceConnected1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___deviceConnected1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___deviceConnected1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceConnectedChangeHandler_BeginInvoke_m209513DF91AD3196C36A63A497FF6E8225010C5F (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___deviceConnected1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceConnectedChangeHandler_BeginInvoke_m209513DF91AD3196C36A63A497FF6E8225010C5F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___deviceConnected1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_EndInvoke_m453734257B244DE00E6A2448E7536265FD866651 (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m3260D8BCE1826F529B176F0C0269EFAB71BE23F5 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m89965E0633657EBCC691B7466FC1BC06B64848F2 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, int32_t ___trackingState1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___trackingState1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___trackingState1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___trackingState1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___trackingState1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___trackingState1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___trackingState1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___trackingState1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___trackingState1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___trackingState1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___trackingState1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___trackingState1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___trackingState1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___trackingState1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___trackingState1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___trackingState1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.ETrackingResult,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TrackingChangeHandler_BeginInvoke_m43201E583133A2E3850C37D9AA95590B794E0279 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, int32_t ___trackingState1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TrackingChangeHandler_BeginInvoke_m43201E583133A2E3850C37D9AA95590B794E0279_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var, &___trackingState1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_EndInvoke_mB211677DEE43C7173013C888DD5CD08E86308B04 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m93EACED7027418C025E8F8BE702E76D78B071CC0 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m175C6770DB8B17FD5E716BA08127EEA22FDCA465 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker0::Invoke(targetMethod, ___fromAction0);
					else
						GenericVirtActionInvoker0::Invoke(targetMethod, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0);
					else
						VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0);
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
					else
						GenericVirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0);
					else
						VirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_mBB5CFFB2F9E8EAD075569985D45E3BEBA4F3F96F (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___fromAction0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_mDE26D70E2469821BFCF9A4ED7BF3BBE237ACE9B5 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler__ctor_m06E0A16A32CBF2F7FD1D0F7855FB45C2E2952583 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m69178B26D45FE5B6E566495EFD02D1CD56AED888 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___validPose1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___validPose1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___validPose1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___validPose1);
					else
						GenericVirtActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___validPose1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___validPose1);
					else
						VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___validPose1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___validPose1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___validPose1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___validPose1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___validPose1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___validPose1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___validPose1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___validPose1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___validPose1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___validPose1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ValidPoseChangeHandler_BeginInvoke_m630A2F9E244998060CC71348CEA35E8537E47DE5 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___validPose1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ValidPoseChangeHandler_BeginInvoke_m630A2F9E244998060CC71348CEA35E8537E47DE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___validPose1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_EndInvoke_mD230995BA69B035C9343927159F4FBEDD7E2C6D5 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveChange_37();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveChange_37();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveChange_37();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveChange_37();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_mBA9217A7856EEA2B9346304FF33C00F3D35E381D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_mBA9217A7856EEA2B9346304FF33C00F3D35E381D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveBindingChange_38();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveBindingChange_38();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m928BE406E004801B903336174AD71858077B4C31 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m928BE406E004801B903336174AD71858077B4C31_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveBindingChange_38();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveBindingChange_38();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onChange(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_0 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_1 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_2 = NULL;
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_0 = __this->get_onChange_39();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7_il2cpp_TypeInfo_var));
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 ** L_5 = __this->get_address_of_onChange_39();
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_6 = V_2;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_7 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *>((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_9 = V_0;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_9) == ((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onChange(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_0 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_1 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_2 = NULL;
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_0 = __this->get_onChange_39();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7_il2cpp_TypeInfo_var));
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 ** L_5 = __this->get_address_of_onChange_39();
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_6 = V_2;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_7 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *>((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_9 = V_0;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_9) == ((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onUpdate(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_0 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_1 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_2 = NULL;
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_0 = __this->get_onUpdate_40();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046_il2cpp_TypeInfo_var));
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 ** L_5 = __this->get_address_of_onUpdate_40();
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_6 = V_2;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_7 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *>((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_9 = V_0;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_9) == ((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_0 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_1 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_2 = NULL;
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_0 = __this->get_onUpdate_40();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046_il2cpp_TypeInfo_var));
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 ** L_5 = __this->get_address_of_onUpdate_40();
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_6 = V_2;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_7 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *>((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_9 = V_0;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_9) == ((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_0 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_1 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_2 = NULL;
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_0 = __this->get_onTrackingChanged_41();
		V_0 = L_0;
	}

IL_0007:
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_1 = V_0;
		V_1 = L_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)CastclassSealed((RuntimeObject*)L_4, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var));
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 ** L_5 = __this->get_address_of_onTrackingChanged_41();
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_6 = V_2;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_7 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_8 = InterlockedCompareExchangeImpl<TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *>((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 **)L_5, L_6, L_7);
		V_0 = L_8;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_9 = V_0;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_9) == ((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_0 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_1 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_2 = NULL;
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_0 = __this->get_onTrackingChanged_41();
		V_0 = L_0;
	}

IL_0007:
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_1 = V_0;
		V_1 = L_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)CastclassSealed((RuntimeObject*)L_4, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var));
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 ** L_5 = __this->get_address_of_onTrackingChanged_41();
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_6 = V_2;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_7 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_8 = InterlockedCompareExchangeImpl<TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *>((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 **)L_5, L_6, L_7);
		V_0 = L_8;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_9 = V_0;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_9) == ((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_0 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_1 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_2 = NULL;
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_0 = __this->get_onValidPoseChanged_42();
		V_0 = L_0;
	}

IL_0007:
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_1 = V_0;
		V_1 = L_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)CastclassSealed((RuntimeObject*)L_4, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7_il2cpp_TypeInfo_var));
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 ** L_5 = __this->get_address_of_onValidPoseChanged_42();
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_6 = V_2;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_7 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_8 = InterlockedCompareExchangeImpl<ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *>((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_9 = V_0;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_9) == ((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_0 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_1 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_2 = NULL;
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_0 = __this->get_onValidPoseChanged_42();
		V_0 = L_0;
	}

IL_0007:
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_1 = V_0;
		V_1 = L_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)CastclassSealed((RuntimeObject*)L_4, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7_il2cpp_TypeInfo_var));
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 ** L_5 = __this->get_address_of_onValidPoseChanged_42();
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_6 = V_2;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_7 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_8 = InterlockedCompareExchangeImpl<ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *>((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_9 = V_0;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_9) == ((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_0 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_1 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_2 = NULL;
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_0 = __this->get_onDeviceConnectedChanged_43();
		V_0 = L_0;
	}

IL_0007:
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_1 = V_0;
		V_1 = L_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)CastclassSealed((RuntimeObject*)L_4, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var));
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 ** L_5 = __this->get_address_of_onDeviceConnectedChanged_43();
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_6 = V_2;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_7 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_8 = InterlockedCompareExchangeImpl<DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *>((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 **)L_5, L_6, L_7);
		V_0 = L_8;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_9 = V_0;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_10 = V_1;
		if ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_9) == ((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_0 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_1 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_2 = NULL;
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_0 = __this->get_onDeviceConnectedChanged_43();
		V_0 = L_0;
	}

IL_0007:
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_1 = V_0;
		V_1 = L_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)CastclassSealed((RuntimeObject*)L_4, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var));
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 ** L_5 = __this->get_address_of_onDeviceConnectedChanged_43();
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_6 = V_2;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_7 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_8 = InterlockedCompareExchangeImpl<DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *>((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 **)L_5, L_6, L_7);
		V_0 = L_8;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_9 = V_0;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_10 = V_1;
		if ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_9) == ((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_activeBinding_mDE64546BB0A10367E6437BEA9C1E4682BC4DEA5D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public override bool activeBinding { get { return skeletonActionData.bActive; } }
		InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * L_0 = __this->get_address_of_skeletonActionData_61();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_lastActiveBinding_mC311EE8D121B05FE2F512C9B88116561CE9E61EC (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActiveBinding { get { return lastSkeletonActionData.bActive; } }
		InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * L_0 = __this->get_address_of_lastSkeletonActionData_62();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_bonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3CbonePositionsU3Ek__BackingField_44();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_bonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_bonePositions_m96408532FED1D966DE56612099B679DA8FBBF8D9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3CbonePositionsU3Ek__BackingField_44(L_0);
		return;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_boneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3CboneRotationsU3Ek__BackingField_45();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_boneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_boneRotations_m2B92E87BC6C9E456075204D69BD82CAE759F46E2 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3CboneRotationsU3Ek__BackingField_45(L_0);
		return;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3ClastBonePositionsU3Ek__BackingField_46();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBonePositions_m8E63D828A81C99EEA6A4C55BA74D48F7C7F19CBF (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3ClastBonePositionsU3Ek__BackingField_46(L_0);
		return;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBoneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3ClastBoneRotationsU3Ek__BackingField_47();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBoneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mF1526AAAFE4506F1F70D22BED03D04083E75E3F8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3ClastBoneRotationsU3Ek__BackingField_47(L_0);
		return;
	}
}
// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton_Source::get_rangeOfMotion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_rangeOfMotion_mCEFC5B01B736A3B6218C5C91A0AEF272FFD88B47 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = __this->get_U3CrangeOfMotionU3Ek__BackingField_48();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_rangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_rangeOfMotion_mD5E750C97DF02D77264C6215272D1982987A1483 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CrangeOfMotionU3Ek__BackingField_48(L_0);
		return;
	}
}
// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTransformSpace()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m0D9D61CC1BC50CC7FA1F9AD5192FBC418009F3F3 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = __this->get_U3CskeletalTransformSpaceU3Ek__BackingField_49();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_skeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_mF6B1E1B08AE63F49B66DDCFA097DA28DB8378783 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CskeletalTransformSpaceU3Ek__BackingField_49(L_0);
		return;
	}
}
// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton_Source::get_summaryDataType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = __this->get_U3CsummaryDataTypeU3Ek__BackingField_50();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_summaryDataType(Valve.VR.EVRSummaryType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_summaryDataType_mC513A7AACFFC7DC686764E9A982DFAC02EC5B2F5 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CsummaryDataTypeU3Ek__BackingField_50(L_0);
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbCurl_m1E1B3EB8065D36CC07FD3D3F81142DE18117571D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float thumbCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.thumb]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexCurl_m23B7090B54104226A276B2DA6F9AF05D8A87F4C4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float indexCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.index]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleCurl_mF2DB6D3C537BDA649730D9DED5FD8C158792A99E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float middleCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.middle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringCurl_mB1080317044EB9464CBFA2AB4D579481889A4DF6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float ringCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.ring]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_pinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_pinkyCurl_mDCB73847A197AC4E4F55DF28D27857EE71F131B3 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float pinkyCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.pinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 4;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbIndexSplay_m8A48CFB2D8446B92D1ACD230A06CCADEADAF90D8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float thumbIndexSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.thumbIndex]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexMiddleSplay_m032F314FF2441AF7819CD080BAC24BD7EA1D25B2 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float indexMiddleSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.indexMiddle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleRingSplay_m8F9D81F3B1CB80C0DD82485A54DB100FF1B0E546 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float middleRingSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.middleRing]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringPinkySplay_m1A57999FB132953BE3265B6C3AB7E274A1D10DE0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float ringPinkySplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.ringPinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbCurl_mE893135DF37D02B74C7B190331E8A214C5350AC4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastThumbCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.thumb]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexCurl_mB7429964CAA0C0A16B0C98F8FEADEFFD8466CE30 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastIndexCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.index]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleCurl_m1EC63B41C764BED847913534AFA8D939FE64686A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastMiddleCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.middle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingCurl_m243A9EC6EA188AA107D23B07BA8BEFCABC3EEAA8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastRingCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.ring]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastPinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastPinkyCurl_m67226B9DF4D046AFFC83ED7FB6B9BD8678C0B306 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastPinkyCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.pinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 4;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbIndexSplay_mFECABD9313D9F50354F74393A9A22B3DCF0C991B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastThumbIndexSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.thumbIndex]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexMiddleSplay_mC780C06D5EFBB2E006D57433B5813666CABE8684 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastIndexMiddleSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.indexMiddle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleRingSplay_mF7BD21EE49B81B5326424FEA0EBB2191171BCDC6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastMiddleRingSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.middleRing]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingPinkySplay_mE15C84D9E609B6A7941C2C96AAAF10514D3808B1 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastRingPinkySplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.ringPinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerCurlsU3Ek__BackingField_51();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerCurls(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerCurls_m2A1933C7FE83EB6B654B248354B4438B1B15C0BD (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerCurlsU3Ek__BackingField_51(L_0);
		return;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerSplaysU3Ek__BackingField_52();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerSplays(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerSplays_mB8BA373C6A1A65E39FD6D8AF1566A31F18BA7055 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerSplaysU3Ek__BackingField_52(L_0);
		return;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerCurlsU3Ek__BackingField_53();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerCurls(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerCurls_mA6CF9BCD46F49F1A95627142A70D9FA3C4F490E5 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerCurlsU3Ek__BackingField_53(L_0);
		return;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerSplaysU3Ek__BackingField_54();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerSplays(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerSplays_m1E2D198E4627EA80F69A67AB26943144BD45DC70 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerSplaysU3Ek__BackingField_54(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_poseChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_poseChanged_mBBFFCD8FF3AB5998C3B5053499A253E137EB6B01 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = __this->get_U3CposeChangedU3Ek__BackingField_55();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_poseChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_poseChanged_m359037EAC8B53761892E89E13D0A1FCC31A222EC (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CposeChangedU3Ek__BackingField_55(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_onlyUpdateSummaryData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = __this->get_U3ConlyUpdateSummaryDataU3Ek__BackingField_56();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_onlyUpdateSummaryData(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m02A775C0CAB57C16D4A673019586873F7C0B3CFB (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = ___value0;
		__this->set_U3ConlyUpdateSummaryDataU3Ek__BackingField_56(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_Preinitialize_m47C2874B5006B62A17DF399E7851585E7AB8ACB5 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_Preinitialize_m47C2874B5006B62A17DF399E7851585E7AB8ACB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Pose_Source_Preinitialize_mF8A86BF078F169380E7A1C75DA6C20B49380AE9B(__this, L_0, L_1, /*hidden argument*/NULL);
		// skeletonAction = (SteamVR_Action_Skeleton)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_skeletonAction_59(((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var)));
		// bonePositions = new Vector3[SteamVR_Action_Skeleton.numBones];
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_bonePositions_m96408532FED1D966DE56612099B679DA8FBBF8D9_inline(__this, L_3, /*hidden argument*/NULL);
		// lastBonePositions = new Vector3[SteamVR_Action_Skeleton.numBones];
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_4 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_lastBonePositions_m8E63D828A81C99EEA6A4C55BA74D48F7C7F19CBF_inline(__this, L_4, /*hidden argument*/NULL);
		// boneRotations = new Quaternion[SteamVR_Action_Skeleton.numBones];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_5 = (QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)SZArrayNew(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_boneRotations_m2B92E87BC6C9E456075204D69BD82CAE759F46E2_inline(__this, L_5, /*hidden argument*/NULL);
		// lastBoneRotations = new Quaternion[SteamVR_Action_Skeleton.numBones];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_6 = (QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)SZArrayNew(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mF1526AAAFE4506F1F70D22BED03D04083E75E3F8_inline(__this, L_6, /*hidden argument*/NULL);
		// rangeOfMotion = EVRSkeletalMotionRange.WithController;
		SteamVR_Action_Skeleton_Source_set_rangeOfMotion_mD5E750C97DF02D77264C6215272D1982987A1483_inline(__this, 0, /*hidden argument*/NULL);
		// skeletalTransformSpace = EVRSkeletalTransformSpace.Parent;
		SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_mF6B1E1B08AE63F49B66DDCFA097DA28DB8378783_inline(__this, 1, /*hidden argument*/NULL);
		// fingerCurls = new float[SteamVR_Skeleton_FingerIndexes.enumArray.Length];
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* L_7 = ((SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var))->get_enumArray_5();
		NullCheck(L_7);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_8 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_7)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_fingerCurls_m2A1933C7FE83EB6B654B248354B4438B1B15C0BD_inline(__this, L_8, /*hidden argument*/NULL);
		// fingerSplays = new float[SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length];
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* L_9 = ((SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var))->get_enumArray_4();
		NullCheck(L_9);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_10 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_9)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_fingerSplays_mB8BA373C6A1A65E39FD6D8AF1566A31F18BA7055_inline(__this, L_10, /*hidden argument*/NULL);
		// lastFingerCurls = new float[SteamVR_Skeleton_FingerIndexes.enumArray.Length];
		SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* L_11 = ((SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var))->get_enumArray_5();
		NullCheck(L_11);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_12 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_11)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_lastFingerCurls_mA6CF9BCD46F49F1A95627142A70D9FA3C4F490E5_inline(__this, L_12, /*hidden argument*/NULL);
		// lastFingerSplays = new float[SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length];
		SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* L_13 = ((SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var))->get_enumArray_4();
		NullCheck(L_13);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_14 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_13)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_lastFingerSplays_m1E2D198E4627EA80F69A67AB26943144BD45DC70_inline(__this, L_14, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_Initialize_mD90DB98AC67B0E6CCCC98FCC5D0BC9FE9F575E0E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_Initialize_mD90DB98AC67B0E6CCCC98FCC5D0BC9FE9F575E0E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Initialize();
		SteamVR_Action_Pose_Source_Initialize_m36604AB0F3E49250F5761A885B005CB8CEE2DBD1(__this, /*hidden argument*/NULL);
		// if (skeletonActionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var))->get_skeletonActionData_size_36();
		if (L_0)
		{
			goto IL_0021;
		}
	}
	{
		// skeletonActionData_size = (uint)Marshal.SizeOf(typeof(InputSkeletalActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_1 = { reinterpret_cast<intptr_t> (InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_2 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_1, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_3 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var);
		((SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var))->set_skeletonActionData_size_36(L_3);
	}

IL_0021:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateValue_mFBF6FE8BC6C28CD72C963C07A5AF4F82783CB508 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// UpdateValue(false);
		VirtActionInvoker1< bool >::Invoke(50 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, __this, (bool)0);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateValue_m4CC3C0F03604C6D5866D0F2D173B3D0E37FCD321 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_UpdateValue_m4CC3C0F03604C6D5866D0F2D173B3D0E37FCD321_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	uint64_t V_4 = 0;
	int32_t V_5 = 0;
	int32_t V_6 = 0;
	{
		// lastActive = active;
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_0);
		// lastSkeletonActionData = skeletonActionData;
		InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  L_1 = __this->get_skeletonActionData_61();
		__this->set_lastSkeletonActionData_62(L_1);
		// lastSkeletalSummaryData = skeletalSummaryData;
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  L_2 = __this->get_skeletalSummaryData_57();
		__this->set_lastSkeletalSummaryData_58(L_2);
		// if (onlyUpdateSummaryData == false)
		bool L_3 = SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A_inline(__this, /*hidden argument*/NULL);
		if (L_3)
		{
			goto IL_0069;
		}
	}
	{
		// for (int boneIndex = 0; boneIndex < SteamVR_Action_Skeleton.numBones; boneIndex++)
		V_1 = 0;
		goto IL_0064;
	}

IL_0030:
	{
		// lastBonePositions[boneIndex] = bonePositions[boneIndex];
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_4 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(__this, /*hidden argument*/NULL);
		int32_t L_5 = V_1;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_6 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_7 = V_1;
		NullCheck(L_6);
		int32_t L_8 = L_7;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = (L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_8));
		NullCheck(L_4);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(L_5), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_9);
		// lastBoneRotations[boneIndex] = boneRotations[boneIndex];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_10 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(__this, /*hidden argument*/NULL);
		int32_t L_11 = V_1;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_12 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_13 = V_1;
		NullCheck(L_12);
		int32_t L_14 = L_13;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_15 = (L_12)->GetAt(static_cast<il2cpp_array_size_t>(L_14));
		NullCheck(L_10);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(L_11), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 )L_15);
		// for (int boneIndex = 0; boneIndex < SteamVR_Action_Skeleton.numBones; boneIndex++)
		int32_t L_16 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_16, (int32_t)1));
	}

IL_0064:
	{
		// for (int boneIndex = 0; boneIndex < SteamVR_Action_Skeleton.numBones; boneIndex++)
		int32_t L_17 = V_1;
		if ((((int32_t)L_17) < ((int32_t)((int32_t)31))))
		{
			goto IL_0030;
		}
	}

IL_0069:
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerIndexes.enumArray.Length; fingerIndex++)
		V_2 = 0;
		goto IL_0081;
	}

IL_006d:
	{
		// lastFingerCurls[fingerIndex] = fingerCurls[fingerIndex];
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_18 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		int32_t L_19 = V_2;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_20 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		int32_t L_21 = V_2;
		NullCheck(L_20);
		int32_t L_22 = L_21;
		float L_23 = (L_20)->GetAt(static_cast<il2cpp_array_size_t>(L_22));
		NullCheck(L_18);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(L_19), (float)L_23);
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerIndexes.enumArray.Length; fingerIndex++)
		int32_t L_24 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_24, (int32_t)1));
	}

IL_0081:
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerIndexes.enumArray.Length; fingerIndex++)
		int32_t L_25 = V_2;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* L_26 = ((SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var))->get_enumArray_5();
		NullCheck(L_26);
		if ((((int32_t)L_25) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_26)->max_length)))))))
		{
			goto IL_006d;
		}
	}
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length; fingerIndex++)
		V_3 = 0;
		goto IL_00a3;
	}

IL_008f:
	{
		// lastFingerSplays[fingerIndex] = fingerSplays[fingerIndex];
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_27 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(__this, /*hidden argument*/NULL);
		int32_t L_28 = V_3;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_29 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		int32_t L_30 = V_3;
		NullCheck(L_29);
		int32_t L_31 = L_30;
		float L_32 = (L_29)->GetAt(static_cast<il2cpp_array_size_t>(L_31));
		NullCheck(L_27);
		(L_27)->SetAt(static_cast<il2cpp_array_size_t>(L_28), (float)L_32);
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length; fingerIndex++)
		int32_t L_33 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_33, (int32_t)1));
	}

IL_00a3:
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length; fingerIndex++)
		int32_t L_34 = V_3;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* L_35 = ((SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var))->get_enumArray_4();
		NullCheck(L_35);
		if ((((int32_t)L_34) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_35)->max_length)))))))
		{
			goto IL_008f;
		}
	}
	{
		// base.UpdateValue(true);
		SteamVR_Action_Pose_Source_UpdateValue_mC4B5455237B6CD71DD565F71267D8EB3AE3681F0(__this, (bool)1, /*hidden argument*/NULL);
		// poseChanged = changed;
		bool L_36 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		SteamVR_Action_Skeleton_Source_set_poseChanged_m359037EAC8B53761892E89E13D0A1FCC31A222EC_inline(__this, L_36, /*hidden argument*/NULL);
		// EVRInputError error = OpenVR.Input.GetSkeletalActionData(handle, ref skeletonActionData, skeletonActionData_size);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_37 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_38 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * L_39 = __this->get_address_of_skeletonActionData_61();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var);
		uint32_t L_40 = ((SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var))->get_skeletonActionData_size_36();
		NullCheck(L_37);
		int32_t L_41 = CVRInput_GetSkeletalActionData_m40D44AADDBF05DD553A8AD447AAAF10EFBE504EE(L_37, L_38, (InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 *)L_39, L_40, /*hidden argument*/NULL);
		V_0 = L_41;
		// if (error != EVRInputError.None)
		int32_t L_42 = V_0;
		if (!L_42)
		{
			goto IL_0133;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalActionData error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_43 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_44 = L_43;
		NullCheck(L_44);
		ArrayElementTypeCheck (L_44, _stringLiteralA98667A476D022EB9B2CF25800415760BE586401);
		(L_44)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralA98667A476D022EB9B2CF25800415760BE586401);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_45 = L_44;
		String_t* L_46 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_45);
		ArrayElementTypeCheck (L_45, L_46);
		(L_45)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_46);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_47 = L_45;
		NullCheck(L_47);
		ArrayElementTypeCheck (L_47, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_47)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_48 = L_47;
		RuntimeObject * L_49 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_49);
		String_t* L_50 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_49);
		V_0 = *(int32_t*)UnBox(L_49);
		NullCheck(L_48);
		ArrayElementTypeCheck (L_48, L_50);
		(L_48)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_50);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_51 = L_48;
		NullCheck(L_51);
		ArrayElementTypeCheck (L_51, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_51)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_52 = L_51;
		uint64_t L_53 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_4 = L_53;
		String_t* L_54 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_4), /*hidden argument*/NULL);
		NullCheck(L_52);
		ArrayElementTypeCheck (L_52, L_54);
		(L_52)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_54);
		String_t* L_55 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_52, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_55, /*hidden argument*/NULL);
		// return;
		return;
	}

IL_0133:
	{
		// if (active)
		bool L_56 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_56)
		{
			goto IL_0330;
		}
	}
	{
		// if (onlyUpdateSummaryData == false)
		bool L_57 = SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A_inline(__this, /*hidden argument*/NULL);
		if (L_57)
		{
			goto IL_0323;
		}
	}
	{
		// error = OpenVR.Input.GetSkeletalBoneData(handle, skeletalTransformSpace, rangeOfMotion, tempBoneTransforms);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_58 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_59 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_60 = SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m0D9D61CC1BC50CC7FA1F9AD5192FBC418009F3F3_inline(__this, /*hidden argument*/NULL);
		int32_t L_61 = SteamVR_Action_Skeleton_Source_get_rangeOfMotion_mCEFC5B01B736A3B6218C5C91A0AEF272FFD88B47_inline(__this, /*hidden argument*/NULL);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_62 = __this->get_tempBoneTransforms_60();
		NullCheck(L_58);
		int32_t L_63 = CVRInput_GetSkeletalBoneData_mC4C625F0314C6AAAD88B5F0913D65C81B7D8D344(L_58, L_59, L_60, L_61, L_62, /*hidden argument*/NULL);
		V_0 = L_63;
		// if (error != EVRInputError.None)
		int32_t L_64 = V_0;
		if (!L_64)
		{
			goto IL_01c2;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalBoneData error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_65 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_66 = L_65;
		NullCheck(L_66);
		ArrayElementTypeCheck (L_66, _stringLiteralAD66C391DC6C51CA381EB74E3DAFDAF54D01F3C2);
		(L_66)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAD66C391DC6C51CA381EB74E3DAFDAF54D01F3C2);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_67 = L_66;
		String_t* L_68 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_67);
		ArrayElementTypeCheck (L_67, L_68);
		(L_67)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_68);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_69 = L_67;
		NullCheck(L_69);
		ArrayElementTypeCheck (L_69, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_69)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_70 = L_69;
		RuntimeObject * L_71 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_71);
		String_t* L_72 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_71);
		V_0 = *(int32_t*)UnBox(L_71);
		NullCheck(L_70);
		ArrayElementTypeCheck (L_70, L_72);
		(L_70)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_72);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_73 = L_70;
		NullCheck(L_73);
		ArrayElementTypeCheck (L_73, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_73)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_74 = L_73;
		uint64_t L_75 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_4 = L_75;
		String_t* L_76 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_4), /*hidden argument*/NULL);
		NullCheck(L_74);
		ArrayElementTypeCheck (L_74, L_76);
		(L_74)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_76);
		String_t* L_77 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_74, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_77, /*hidden argument*/NULL);
	}

IL_01c2:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		V_5 = 0;
		goto IL_02f2;
	}

IL_01ca:
	{
		// bonePositions[boneIndex].x = -tempBoneTransforms[boneIndex].position.v0;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_78 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_79 = V_5;
		NullCheck(L_78);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_80 = __this->get_tempBoneTransforms_60();
		int32_t L_81 = V_5;
		NullCheck(L_80);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_82 = ((L_80)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_81)))->get_address_of_position_0();
		float L_83 = L_82->get_v0_0();
		((L_78)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_79)))->set_x_2(((-L_83)));
		// bonePositions[boneIndex].y = tempBoneTransforms[boneIndex].position.v1;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_84 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_85 = V_5;
		NullCheck(L_84);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_86 = __this->get_tempBoneTransforms_60();
		int32_t L_87 = V_5;
		NullCheck(L_86);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_88 = ((L_86)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_87)))->get_address_of_position_0();
		float L_89 = L_88->get_v1_1();
		((L_84)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_85)))->set_y_3(L_89);
		// bonePositions[boneIndex].z = tempBoneTransforms[boneIndex].position.v2;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_90 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_91 = V_5;
		NullCheck(L_90);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_92 = __this->get_tempBoneTransforms_60();
		int32_t L_93 = V_5;
		NullCheck(L_92);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_94 = ((L_92)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_93)))->get_address_of_position_0();
		float L_95 = L_94->get_v2_2();
		((L_90)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_91)))->set_z_4(L_95);
		// boneRotations[boneIndex].x = tempBoneTransforms[boneIndex].orientation.x;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_96 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_97 = V_5;
		NullCheck(L_96);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_98 = __this->get_tempBoneTransforms_60();
		int32_t L_99 = V_5;
		NullCheck(L_98);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_100 = ((L_98)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_99)))->get_address_of_orientation_1();
		float L_101 = L_100->get_x_1();
		((L_96)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_97)))->set_x_0(L_101);
		// boneRotations[boneIndex].y = -tempBoneTransforms[boneIndex].orientation.y;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_102 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_103 = V_5;
		NullCheck(L_102);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_104 = __this->get_tempBoneTransforms_60();
		int32_t L_105 = V_5;
		NullCheck(L_104);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_106 = ((L_104)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_105)))->get_address_of_orientation_1();
		float L_107 = L_106->get_y_2();
		((L_102)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_103)))->set_y_1(((-L_107)));
		// boneRotations[boneIndex].z = -tempBoneTransforms[boneIndex].orientation.z;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_108 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_109 = V_5;
		NullCheck(L_108);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_110 = __this->get_tempBoneTransforms_60();
		int32_t L_111 = V_5;
		NullCheck(L_110);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_112 = ((L_110)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_111)))->get_address_of_orientation_1();
		float L_113 = L_112->get_z_3();
		((L_108)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_109)))->set_z_2(((-L_113)));
		// boneRotations[boneIndex].w = tempBoneTransforms[boneIndex].orientation.w;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_114 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_115 = V_5;
		NullCheck(L_114);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_116 = __this->get_tempBoneTransforms_60();
		int32_t L_117 = V_5;
		NullCheck(L_116);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_118 = ((L_116)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_117)))->get_address_of_orientation_1();
		float L_119 = L_118->get_w_0();
		((L_114)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_115)))->set_w_3(L_119);
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_120 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_120, (int32_t)1));
	}

IL_02f2:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_121 = V_5;
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_122 = __this->get_tempBoneTransforms_60();
		NullCheck(L_122);
		if ((((int32_t)L_121) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_122)->max_length)))))))
		{
			goto IL_01ca;
		}
	}
	{
		// boneRotations[0] = SteamVR_Action_Skeleton.steamVRFixUpRotation * boneRotations[0];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_123 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_124 = ((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var))->get_steamVRFixUpRotation_7();
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_125 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_125);
		int32_t L_126 = 0;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_127 = (L_125)->GetAt(static_cast<il2cpp_array_size_t>(L_126));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_128 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_124, L_127, /*hidden argument*/NULL);
		NullCheck(L_123);
		(L_123)->SetAt(static_cast<il2cpp_array_size_t>(0), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 )L_128);
	}

IL_0323:
	{
		// UpdateSkeletalSummaryData(summaryDataType, true);
		int32_t L_129 = SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m2E5AB154AD8698F22D1DDBE5D414EDD879C5FADE(__this, L_129, (bool)1, /*hidden argument*/NULL);
	}

IL_0330:
	{
		// if (changed == false)
		bool L_130 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		if (L_130)
		{
			goto IL_03b4;
		}
	}
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		V_6 = 0;
		goto IL_03a8;
	}

IL_033d:
	{
		// if (Vector3.Distance(lastBonePositions[boneIndex], bonePositions[boneIndex]) > changeTolerance)
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_131 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(__this, /*hidden argument*/NULL);
		int32_t L_132 = V_6;
		NullCheck(L_131);
		int32_t L_133 = L_132;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_134 = (L_131)->GetAt(static_cast<il2cpp_array_size_t>(L_133));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_135 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_136 = V_6;
		NullCheck(L_135);
		int32_t L_137 = L_136;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_138 = (L_135)->GetAt(static_cast<il2cpp_array_size_t>(L_137));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_139 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_134, L_138, /*hidden argument*/NULL);
		float L_140 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *)__this)->get_changeTolerance_12();
		if ((!(((float)L_139) > ((float)L_140))))
		{
			goto IL_036d;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// break;
		goto IL_03b4;
	}

IL_036d:
	{
		// if (Mathf.Abs(Quaternion.Angle(lastBoneRotations[boneIndex], boneRotations[boneIndex])) > changeTolerance)
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_141 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(__this, /*hidden argument*/NULL);
		int32_t L_142 = V_6;
		NullCheck(L_141);
		int32_t L_143 = L_142;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_144 = (L_141)->GetAt(static_cast<il2cpp_array_size_t>(L_143));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_145 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_146 = V_6;
		NullCheck(L_145);
		int32_t L_147 = L_146;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_148 = (L_145)->GetAt(static_cast<il2cpp_array_size_t>(L_147));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		float L_149 = Quaternion_Angle_m09599D660B724D330E5C7FE2FB1C8716161B3DD1(L_144, L_148, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_150 = fabsf(L_149);
		float L_151 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *)__this)->get_changeTolerance_12();
		if ((!(((float)L_150) > ((float)L_151))))
		{
			goto IL_03a2;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// break;
		goto IL_03b4;
	}

IL_03a2:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_152 = V_6;
		V_6 = ((int32_t)il2cpp_codegen_add((int32_t)L_152, (int32_t)1));
	}

IL_03a8:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_153 = V_6;
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_154 = __this->get_tempBoneTransforms_60();
		NullCheck(L_154);
		if ((((int32_t)L_153) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_154)->max_length)))))))
		{
			goto IL_033d;
		}
	}

IL_03b4:
	{
		// if (changed)
		bool L_155 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		if (!L_155)
		{
			goto IL_03c7;
		}
	}
	{
		// changedTime = Time.realtimeSinceStartup;
		float L_156 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline(__this, L_156, /*hidden argument*/NULL);
	}

IL_03c7:
	{
		// if (skipStateAndEventUpdates == false)
		bool L_157 = ___skipStateAndEventUpdates0;
		if (L_157)
		{
			goto IL_03d0;
		}
	}
	{
		// CheckAndSendEvents();
		VirtActionInvoker0::Invoke(51 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::CheckAndSendEvents() */, __this);
	}

IL_03d0:
	{
		// }
		return;
	}
}
// System.Int32 Valve.VR.SteamVR_Action_Skeleton_Source::get_boneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_boneCount_m5344AA8CD1F0418967470D4A9B1998B64DA95CB3 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public int boneCount { get { return (int)GetBoneCount(); } }
		uint32_t L_0 = SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148(__this, /*hidden argument*/NULL);
		return L_0;
	}
}
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint32_t V_0 = 0;
	int32_t V_1 = 0;
	uint64_t V_2 = 0;
	{
		// uint boneCount = 0;
		V_0 = 0;
		// EVRInputError error = OpenVR.Input.GetBoneCount(handle, ref boneCount);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_1 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_2 = CVRInput_GetBoneCount_m78883020EAE71196181E31E2B7CC2738DC6E6C49(L_0, L_1, (uint32_t*)(&V_0), /*hidden argument*/NULL);
		V_1 = L_2;
		// if (error != EVRInputError.None)
		int32_t L_3 = V_1;
		if (!L_3)
		{
			goto IL_006a;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetBoneCount error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_4 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_5 = L_4;
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, _stringLiteral74FBFA22F0AC7FDD2F060A9187A8A74078A10F16);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral74FBFA22F0AC7FDD2F060A9187A8A74078A10F16);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_6 = L_5;
		String_t* L_7 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_6);
		ArrayElementTypeCheck (L_6, L_7);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_7);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_8 = L_6;
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_8;
		RuntimeObject * L_10 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_10);
		String_t* L_11 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_10);
		V_1 = *(int32_t*)UnBox(L_10);
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_11);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_11);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_9;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		uint64_t L_14 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_2 = L_14;
		String_t* L_15 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_15);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_15);
		String_t* L_16 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_13, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_16, /*hidden argument*/NULL);
	}

IL_006a:
	{
		// return boneCount;
		uint32_t L_17 = V_0;
		return L_17;
	}
}
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton_Source::get_boneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_Source_get_boneHierarchy_mF4338EC5D815552326E76B1E4C1205EA9C29AEC8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public int[] boneHierarchy { get { return GetBoneHierarchy(); } }
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_0 = SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445(__this, /*hidden argument*/NULL);
		return L_0;
	}
}
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_0 = NULL;
	int32_t V_1 = 0;
	uint64_t V_2 = 0;
	{
		// int boneCount = (int)GetBoneCount();
		uint32_t L_0 = SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148(__this, /*hidden argument*/NULL);
		// int[] parentIndicies = new int[boneCount];
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_1 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)L_0);
		V_0 = L_1;
		// EVRInputError error = OpenVR.Input.GetBoneHierarchy(handle, parentIndicies);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_2 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_3 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_4 = V_0;
		NullCheck(L_2);
		int32_t L_5 = CVRInput_GetBoneHierarchy_m02CC64E1724470CA3A3ECF28FB5B9A4F7035511A(L_2, L_3, L_4, /*hidden argument*/NULL);
		V_1 = L_5;
		// if (error != EVRInputError.None)
		int32_t L_6 = V_1;
		if (!L_6)
		{
			goto IL_0073;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetBoneHierarchy error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_7 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_8 = L_7;
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, _stringLiteral973389CC7163D5EF9A40BE4685E4E55B5CBBC66F);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral973389CC7163D5EF9A40BE4685E4E55B5CBBC66F);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_8;
		String_t* L_10 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_10);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_10);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_9;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		RuntimeObject * L_13 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_13);
		String_t* L_14 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_13);
		V_1 = *(int32_t*)UnBox(L_13);
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_14);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_14);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_12;
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_15;
		uint64_t L_17 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_2 = L_17;
		String_t* L_18 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_18);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_18);
		String_t* L_19 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_16, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_19, /*hidden argument*/NULL);
	}

IL_0073:
	{
		// return parentIndicies;
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_20 = V_0;
		return L_20;
	}
}
// System.String Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneName(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_Source_GetBoneName_m464D8D3413D7782356433F03C854B062E0080488 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___boneIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetBoneName_m464D8D3413D7782356433F03C854B062E0080488_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StringBuilder_t * V_0 = NULL;
	int32_t V_1 = 0;
	uint64_t V_2 = 0;
	{
		// StringBuilder stringBuilder = new StringBuilder(255);
		StringBuilder_t * L_0 = (StringBuilder_t *)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		StringBuilder__ctor_m1C0F2D97B838537A2D0F64033AE4EF02D150A956(L_0, ((int32_t)255), /*hidden argument*/NULL);
		V_0 = L_0;
		// EVRInputError error = OpenVR.Input.GetBoneName(handle, boneIndex, stringBuilder, 255);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_1 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_2 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_3 = ___boneIndex0;
		StringBuilder_t * L_4 = V_0;
		NullCheck(L_1);
		int32_t L_5 = CVRInput_GetBoneName_mBA7734E10D0E85104A3F34B4EC42279348BAB54E(L_1, L_2, L_3, L_4, ((int32_t)255), /*hidden argument*/NULL);
		V_1 = L_5;
		// if (error != EVRInputError.None)
		int32_t L_6 = V_1;
		if (!L_6)
		{
			goto IL_0078;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetBoneName error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_7 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_8 = L_7;
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, _stringLiteral7025DBCB2822E392650101D811F717F7B853C54B);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral7025DBCB2822E392650101D811F717F7B853C54B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_8;
		String_t* L_10 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_10);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_10);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_9;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		RuntimeObject * L_13 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_13);
		String_t* L_14 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_13);
		V_1 = *(int32_t*)UnBox(L_13);
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_14);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_14);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_12;
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_15;
		uint64_t L_17 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_2 = L_17;
		String_t* L_18 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_18);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_18);
		String_t* L_19 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_16, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_19, /*hidden argument*/NULL);
	}

IL_0078:
	{
		// return stringBuilder.ToString();
		StringBuilder_t * L_20 = V_0;
		NullCheck(L_20);
		String_t* L_21 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_20);
		return L_21;
	}
}
// SteamVR_Utils_RigidTransform[] Valve.VR.SteamVR_Action_Skeleton_Source::GetReferenceTransforms(Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* SteamVR_Action_Skeleton_Source_GetReferenceTransforms_mD97ED9032334370252095D9ABCED25D4D5533B92 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___transformSpace0, int32_t ___referencePose1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetReferenceTransforms_mD97ED9032334370252095D9ABCED25D4D5533B92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* V_0 = NULL;
	VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* V_1 = NULL;
	int32_t V_2 = 0;
	uint64_t V_3 = 0;
	int32_t V_4 = 0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_6;
	memset((&V_6), 0, sizeof(V_6));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_7;
	memset((&V_7), 0, sizeof(V_7));
	{
		// SteamVR_Utils.RigidTransform[] transforms = new SteamVR_Utils.RigidTransform[GetBoneCount()];
		uint32_t L_0 = SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148(__this, /*hidden argument*/NULL);
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_1 = (RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC*)(RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC*)SZArrayNew(RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC_il2cpp_TypeInfo_var, (uint32_t)L_0);
		V_0 = L_1;
		// VRBoneTransform_t[] boneTransforms = new VRBoneTransform_t[transforms.Length];
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_2 = V_0;
		NullCheck(L_2);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_3 = (VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B*)(VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B*)SZArrayNew(VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_2)->max_length)))));
		V_1 = L_3;
		// EVRInputError error = OpenVR.Input.GetSkeletalReferenceTransforms(handle, transformSpace, referencePose, boneTransforms);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_4 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_5 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_6 = ___transformSpace0;
		int32_t L_7 = ___referencePose1;
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_8 = V_1;
		NullCheck(L_4);
		int32_t L_9 = CVRInput_GetSkeletalReferenceTransforms_mF56CD65341070846CD59B514BC0DD3653FA042A2(L_4, L_5, L_6, L_7, L_8, /*hidden argument*/NULL);
		V_2 = L_9;
		// if (error != EVRInputError.None)
		int32_t L_10 = V_2;
		if (!L_10)
		{
			goto IL_007e;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalReferenceTransforms error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteral1315AF0D095A22997AA7C177E47A3203C2139E1F);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral1315AF0D095A22997AA7C177E47A3203C2139E1F);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		String_t* L_14 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_14);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_14);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_13;
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_15;
		RuntimeObject * L_17 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_2));
		NullCheck(L_17);
		String_t* L_18 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_17);
		V_2 = *(int32_t*)UnBox(L_17);
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_18);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_18);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_16;
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_19;
		uint64_t L_21 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_3 = L_21;
		String_t* L_22 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, L_22);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_22);
		String_t* L_23 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_20, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_23, /*hidden argument*/NULL);
	}

IL_007e:
	{
		// for (int transformIndex = 0; transformIndex < boneTransforms.Length; transformIndex++)
		V_4 = 0;
		goto IL_012c;
	}

IL_0086:
	{
		// Vector3 position = new Vector3(-boneTransforms[transformIndex].position.v0, boneTransforms[transformIndex].position.v1, boneTransforms[transformIndex].position.v2);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_24 = V_1;
		int32_t L_25 = V_4;
		NullCheck(L_24);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_26 = ((L_24)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_25)))->get_address_of_position_0();
		float L_27 = L_26->get_v0_0();
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_28 = V_1;
		int32_t L_29 = V_4;
		NullCheck(L_28);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_30 = ((L_28)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_29)))->get_address_of_position_0();
		float L_31 = L_30->get_v1_1();
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_32 = V_1;
		int32_t L_33 = V_4;
		NullCheck(L_32);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_34 = ((L_32)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_33)))->get_address_of_position_0();
		float L_35 = L_34->get_v2_2();
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_5), ((-L_27)), L_31, L_35, /*hidden argument*/NULL);
		// Quaternion rotation = new Quaternion(boneTransforms[transformIndex].orientation.x, -boneTransforms[transformIndex].orientation.y, -boneTransforms[transformIndex].orientation.z, boneTransforms[transformIndex].orientation.w);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_36 = V_1;
		int32_t L_37 = V_4;
		NullCheck(L_36);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_38 = ((L_36)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_37)))->get_address_of_orientation_1();
		float L_39 = L_38->get_x_1();
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_40 = V_1;
		int32_t L_41 = V_4;
		NullCheck(L_40);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_42 = ((L_40)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_41)))->get_address_of_orientation_1();
		float L_43 = L_42->get_y_2();
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_44 = V_1;
		int32_t L_45 = V_4;
		NullCheck(L_44);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_46 = ((L_44)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_45)))->get_address_of_orientation_1();
		float L_47 = L_46->get_z_3();
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_48 = V_1;
		int32_t L_49 = V_4;
		NullCheck(L_48);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_50 = ((L_48)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_49)))->get_address_of_orientation_1();
		float L_51 = L_50->get_w_0();
		Quaternion__ctor_m7502F0C38E04C6DE24C965D1CAF278DDD02B9D61((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_6), L_39, ((-L_43)), ((-L_47)), L_51, /*hidden argument*/NULL);
		// transforms[transformIndex] = new SteamVR_Utils.RigidTransform(position, rotation);
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_52 = V_0;
		int32_t L_53 = V_4;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_54 = V_5;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_55 = V_6;
		RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  L_56;
		memset((&L_56), 0, sizeof(L_56));
		RigidTransform__ctor_mD0AE3AAF6BDAE1EC463E2EA22DD1988DCA16A62B((&L_56), L_54, L_55, /*hidden argument*/NULL);
		NullCheck(L_52);
		(L_52)->SetAt(static_cast<il2cpp_array_size_t>(L_53), (RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 )L_56);
		// for (int transformIndex = 0; transformIndex < boneTransforms.Length; transformIndex++)
		int32_t L_57 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_57, (int32_t)1));
	}

IL_012c:
	{
		// for (int transformIndex = 0; transformIndex < boneTransforms.Length; transformIndex++)
		int32_t L_58 = V_4;
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_59 = V_1;
		NullCheck(L_59);
		if ((((int32_t)L_58) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_59)->max_length)))))))
		{
			goto IL_0086;
		}
	}
	{
		// if (transforms.Length > 0)
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_60 = V_0;
		NullCheck(L_60);
		if (!(((RuntimeArray*)L_60)->max_length))
		{
			goto IL_016a;
		}
	}
	{
		// Quaternion qFixUpRot = Quaternion.AngleAxis(Mathf.PI * Mathf.Rad2Deg, Vector3.up);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_61 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_62 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0((180.0f), L_61, /*hidden argument*/NULL);
		V_7 = L_62;
		// transforms[0].rot = qFixUpRot * transforms[0].rot;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_63 = V_0;
		NullCheck(L_63);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_64 = V_7;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_65 = V_0;
		NullCheck(L_65);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_66 = ((L_65)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->get_rot_1();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_67 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_64, L_66, /*hidden argument*/NULL);
		((L_63)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->set_rot_1(L_67);
	}

IL_016a:
	{
		// return transforms;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_68 = V_0;
		return L_68;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTrackingLevel_mD592F4C9B67DBFB75FD15DF4755E51FC24C32769 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTrackingLevel skeletalTrackingLevel { get { return GetSkeletalTrackingLevel(); } }
		int32_t L_0 = SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B(__this, /*hidden argument*/NULL);
		return L_0;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::GetSkeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	uint64_t V_2 = 0;
	{
		// EVRSkeletalTrackingLevel skeletalTrackingLevel = EVRSkeletalTrackingLevel.VRSkeletalTracking_Estimated;
		V_0 = 0;
		// EVRInputError error = OpenVR.Input.GetSkeletalTrackingLevel(handle, ref skeletalTrackingLevel);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_1 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_2 = CVRInput_GetSkeletalTrackingLevel_m531BD36546E0F657B1F0F1B9C658E38661D991BF(L_0, L_1, (int32_t*)(&V_0), /*hidden argument*/NULL);
		V_1 = L_2;
		// if (error != EVRInputError.None)
		int32_t L_3 = V_1;
		if (!L_3)
		{
			goto IL_006a;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalTrackingLevel error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_4 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_5 = L_4;
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, _stringLiteral465EC1A5848524F5DC24880091A15CDE065E1E7E);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral465EC1A5848524F5DC24880091A15CDE065E1E7E);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_6 = L_5;
		String_t* L_7 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_6);
		ArrayElementTypeCheck (L_6, L_7);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_7);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_8 = L_6;
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_8;
		RuntimeObject * L_10 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_10);
		String_t* L_11 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_10);
		V_1 = *(int32_t*)UnBox(L_10);
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_11);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_11);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_9;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		uint64_t L_14 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_2 = L_14;
		String_t* L_15 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_15);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_15);
		String_t* L_16 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_13, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_16, /*hidden argument*/NULL);
	}

IL_006a:
	{
		// return skeletalTrackingLevel;
		int32_t L_17 = V_0;
		return L_17;
	}
}
// Valve.VR.VRSkeletalSummaryData_t Valve.VR.SteamVR_Action_Skeleton_Source::GetSkeletalSummaryData(Valve.VR.EVRSummaryType,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  SteamVR_Action_Skeleton_Source_GetSkeletalSummaryData_m97CF3B17CEBF3EF88366B62E5AF0A749933D1EB0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___summaryType0, bool ___force1, const RuntimeMethod* method)
{
	{
		// UpdateSkeletalSummaryData(summaryType, force);
		int32_t L_0 = ___summaryType0;
		bool L_1 = ___force1;
		SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m2E5AB154AD8698F22D1DDBE5D414EDD879C5FADE(__this, L_0, L_1, /*hidden argument*/NULL);
		// return skeletalSummaryData;
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  L_2 = __this->get_skeletalSummaryData_57();
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateSkeletalSummaryData(Valve.VR.EVRSummaryType,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m2E5AB154AD8698F22D1DDBE5D414EDD879C5FADE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___summaryType0, bool ___force1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m2E5AB154AD8698F22D1DDBE5D414EDD879C5FADE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	uint64_t V_1 = 0;
	{
		// if (force || this.summaryDataType != summaryDataType && active)
		bool L_0 = ___force1;
		if (L_0)
		{
			goto IL_001f;
		}
	}
	{
		int32_t L_1 = SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline(__this, /*hidden argument*/NULL);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_1) == ((int32_t)L_2)))
		{
			goto IL_0137;
		}
	}
	{
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_3)
		{
			goto IL_0137;
		}
	}

IL_001f:
	{
		// EVRInputError error = OpenVR.Input.GetSkeletalSummaryData(handle, summaryType, ref skeletalSummaryData);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_4 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_5 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_6 = ___summaryType0;
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_7 = __this->get_address_of_skeletalSummaryData_57();
		NullCheck(L_4);
		int32_t L_8 = CVRInput_GetSkeletalSummaryData_m43552CEEDBD7CE51B10EB4A1D897FF6712D55D01(L_4, L_5, L_6, (VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 *)L_7, /*hidden argument*/NULL);
		V_0 = L_8;
		// if (error != EVRInputError.None)
		int32_t L_9 = V_0;
		if (!L_9)
		{
			goto IL_008c;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalSummaryData error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_10;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteral29F677B20F6C547FF7CEF8CAE9CF922165E48458);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral29F677B20F6C547FF7CEF8CAE9CF922165E48458);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		String_t* L_13 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_13);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_13);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_12;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_14;
		RuntimeObject * L_16 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_16);
		String_t* L_17 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_16);
		V_0 = *(int32_t*)UnBox(L_16);
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_17);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_17);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_15;
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_18;
		uint64_t L_20 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_1 = L_20;
		String_t* L_21 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_1), /*hidden argument*/NULL);
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_21);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_21);
		String_t* L_22 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_19, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_22, /*hidden argument*/NULL);
	}

IL_008c:
	{
		// fingerCurls[0] = skeletalSummaryData.flFingerCurl0;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_23 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_24 = __this->get_address_of_skeletalSummaryData_57();
		float L_25 = L_24->get_flFingerCurl0_0();
		NullCheck(L_23);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(0), (float)L_25);
		// fingerCurls[1] = skeletalSummaryData.flFingerCurl1;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_26 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_27 = __this->get_address_of_skeletalSummaryData_57();
		float L_28 = L_27->get_flFingerCurl1_1();
		NullCheck(L_26);
		(L_26)->SetAt(static_cast<il2cpp_array_size_t>(1), (float)L_28);
		// fingerCurls[2] = skeletalSummaryData.flFingerCurl2;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_29 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_30 = __this->get_address_of_skeletalSummaryData_57();
		float L_31 = L_30->get_flFingerCurl2_2();
		NullCheck(L_29);
		(L_29)->SetAt(static_cast<il2cpp_array_size_t>(2), (float)L_31);
		// fingerCurls[3] = skeletalSummaryData.flFingerCurl3;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_32 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_33 = __this->get_address_of_skeletalSummaryData_57();
		float L_34 = L_33->get_flFingerCurl3_3();
		NullCheck(L_32);
		(L_32)->SetAt(static_cast<il2cpp_array_size_t>(3), (float)L_34);
		// fingerCurls[4] = skeletalSummaryData.flFingerCurl4;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_35 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_36 = __this->get_address_of_skeletalSummaryData_57();
		float L_37 = L_36->get_flFingerCurl4_4();
		NullCheck(L_35);
		(L_35)->SetAt(static_cast<il2cpp_array_size_t>(4), (float)L_37);
		// fingerSplays[0] = skeletalSummaryData.flFingerSplay0;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_38 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_39 = __this->get_address_of_skeletalSummaryData_57();
		float L_40 = L_39->get_flFingerSplay0_5();
		NullCheck(L_38);
		(L_38)->SetAt(static_cast<il2cpp_array_size_t>(0), (float)L_40);
		// fingerSplays[1] = skeletalSummaryData.flFingerSplay1;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_41 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_42 = __this->get_address_of_skeletalSummaryData_57();
		float L_43 = L_42->get_flFingerSplay1_6();
		NullCheck(L_41);
		(L_41)->SetAt(static_cast<il2cpp_array_size_t>(1), (float)L_43);
		// fingerSplays[2] = skeletalSummaryData.flFingerSplay2;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_44 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_45 = __this->get_address_of_skeletalSummaryData_57();
		float L_46 = L_45->get_flFingerSplay2_7();
		NullCheck(L_44);
		(L_44)->SetAt(static_cast<il2cpp_array_size_t>(2), (float)L_46);
		// fingerSplays[3] = skeletalSummaryData.flFingerSplay3;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_47 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_48 = __this->get_address_of_skeletalSummaryData_57();
		float L_49 = L_48->get_flFingerSplay3_8();
		NullCheck(L_47);
		(L_47)->SetAt(static_cast<il2cpp_array_size_t>(3), (float)L_49);
	}

IL_0137:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::CheckAndSendEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_CheckAndSendEvents_m8D7F293957C6D208053AE2B462B55EAD9D3A0285 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// if (trackingState != lastTrackingState && onTrackingChanged != null)
		int32_t L_0 = SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD(__this, /*hidden argument*/NULL);
		int32_t L_1 = SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_0) == ((int32_t)L_1)))
		{
			goto IL_002d;
		}
	}
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = __this->get_onTrackingChanged_41();
		if (!L_2)
		{
			goto IL_002d;
		}
	}
	{
		// onTrackingChanged.Invoke(skeletonAction, trackingState);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_3 = __this->get_onTrackingChanged_41();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_4 = __this->get_skeletonAction_59();
		int32_t L_5 = SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD(__this, /*hidden argument*/NULL);
		NullCheck(L_3);
		TrackingChangeHandler_Invoke_m89965E0633657EBCC691B7466FC1BC06B64848F2(L_3, L_4, L_5, /*hidden argument*/NULL);
	}

IL_002d:
	{
		// if (poseIsValid != lastPoseIsValid && onValidPoseChanged != null)
		bool L_6 = SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457(__this, /*hidden argument*/NULL);
		bool L_7 = SteamVR_Action_Pose_Source_get_lastPoseIsValid_m7CC61D5F85FD1334CFC6F917EECDA224FA903D0E(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_6) == ((int32_t)L_7)))
		{
			goto IL_005a;
		}
	}
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_8 = __this->get_onValidPoseChanged_42();
		if (!L_8)
		{
			goto IL_005a;
		}
	}
	{
		// onValidPoseChanged.Invoke(skeletonAction, poseIsValid);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_9 = __this->get_onValidPoseChanged_42();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_10 = __this->get_skeletonAction_59();
		bool L_11 = SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457(__this, /*hidden argument*/NULL);
		NullCheck(L_9);
		ValidPoseChangeHandler_Invoke_m69178B26D45FE5B6E566495EFD02D1CD56AED888(L_9, L_10, L_11, /*hidden argument*/NULL);
	}

IL_005a:
	{
		// if (deviceIsConnected != lastDeviceIsConnected && onDeviceConnectedChanged != null)
		bool L_12 = SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB(__this, /*hidden argument*/NULL);
		bool L_13 = SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m54D89CD952536E4C6CC1B31D732F097A78FC6D83(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_12) == ((int32_t)L_13)))
		{
			goto IL_0087;
		}
	}
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_14 = __this->get_onDeviceConnectedChanged_43();
		if (!L_14)
		{
			goto IL_0087;
		}
	}
	{
		// onDeviceConnectedChanged.Invoke(skeletonAction, deviceIsConnected);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_15 = __this->get_onDeviceConnectedChanged_43();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_16 = __this->get_skeletonAction_59();
		bool L_17 = SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB(__this, /*hidden argument*/NULL);
		NullCheck(L_15);
		DeviceConnectedChangeHandler_Invoke_mB57708EA08D45928D64D09652CE8A71248A92E1B(L_15, L_16, L_17, /*hidden argument*/NULL);
	}

IL_0087:
	{
		// if (changed && onChange != null)
		bool L_18 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		if (!L_18)
		{
			goto IL_00a8;
		}
	}
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_19 = __this->get_onChange_39();
		if (!L_19)
		{
			goto IL_00a8;
		}
	}
	{
		// onChange.Invoke(skeletonAction);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_20 = __this->get_onChange_39();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_21 = __this->get_skeletonAction_59();
		NullCheck(L_20);
		ChangeHandler_Invoke_mC5722DBE5AEDF8568E9849292C01588014D154EA(L_20, L_21, /*hidden argument*/NULL);
	}

IL_00a8:
	{
		// if (active != lastActive && onActiveChange != null)
		bool L_22 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		bool L_23 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		if ((((int32_t)L_22) == ((int32_t)L_23)))
		{
			goto IL_00d5;
		}
	}
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_24 = __this->get_onActiveChange_37();
		if (!L_24)
		{
			goto IL_00d5;
		}
	}
	{
		// onActiveChange.Invoke(skeletonAction, active);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_25 = __this->get_onActiveChange_37();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_26 = __this->get_skeletonAction_59();
		bool L_27 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		NullCheck(L_25);
		ActiveChangeHandler_Invoke_m8F250A3B8449F2D46328A69B028001585024506D(L_25, L_26, L_27, /*hidden argument*/NULL);
	}

IL_00d5:
	{
		// if (activeBinding != lastActiveBinding && onActiveBindingChange != null)
		bool L_28 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		bool L_29 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		if ((((int32_t)L_28) == ((int32_t)L_29)))
		{
			goto IL_0102;
		}
	}
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_30 = __this->get_onActiveBindingChange_38();
		if (!L_30)
		{
			goto IL_0102;
		}
	}
	{
		// onActiveBindingChange.Invoke(skeletonAction, activeBinding);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_31 = __this->get_onActiveBindingChange_38();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_32 = __this->get_skeletonAction_59();
		bool L_33 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_31);
		ActiveChangeHandler_Invoke_m8F250A3B8449F2D46328A69B028001585024506D(L_31, L_32, L_33, /*hidden argument*/NULL);
	}

IL_0102:
	{
		// if (onUpdate != null)
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_34 = __this->get_onUpdate_40();
		if (!L_34)
		{
			goto IL_011b;
		}
	}
	{
		// onUpdate.Invoke(skeletonAction);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_35 = __this->get_onUpdate_40();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_36 = __this->get_skeletonAction_59();
		NullCheck(L_35);
		UpdateHandler_Invoke_m175C6770DB8B17FD5E716BA08127EEA22FDCA465(L_35, L_36, /*hidden argument*/NULL);
	}

IL_011b:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source__ctor_m93B62239D040E4627952B767DE40BCC4FDBB7E58 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source__ctor_m93B62239D040E4627952B767DE40BCC4FDBB7E58_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected VRBoneTransform_t[] tempBoneTransforms = new VRBoneTransform_t[SteamVR_Action_Skeleton.numBones];
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_0 = (VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B*)(VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B*)SZArrayNew(VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		__this->set_tempBoneTransforms_60(L_0);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		SteamVR_Action_Pose_Source__ctor_mF1DE2EFD35F9F2DE84EFAEE2308E35D274D93C6E(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source__cctor_m37A7364F8A5DFA7EEDE4BF41168A4C3EFE848C7A (const RuntimeMethod* method)
{
	{
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Valve.VR.SteamVR_Action_Skeleton_Source Valve.VR.SteamVR_Action_Skeleton_Source_Map::GetSourceElementForIndexer(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * SteamVR_Action_Skeleton_Source_Map_GetSourceElementForIndexer_mFB38E3EBD97606F62D6A3960F54D1C320CCEBD4E (SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	{
		// return sources[0]; //just in case somebody tries to access a different element, redirect them to the correct one.
		SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* L_0 = ((SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1 *)__this)->get_sources_7();
		NullCheck(L_0);
		int32_t L_1 = 0;
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_Map__ctor_m94EBD8B1E2B39C473A26A199467C31E19BB0875E (SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_Map__ctor_m94EBD8B1E2B39C473A26A199467C31E19BB0875E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_Pose_Source_Map_1__ctor_m01AFE5DB1C492BA28D7FDCC30F55DF0575D12510(__this, /*hidden argument*/SteamVR_Action_Pose_Source_Map_1__ctor_m01AFE5DB1C492BA28D7FDCC30F55DF0575D12510_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.String Valve.VR.SteamVR_Action_Source::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public string fullPath { get { return action.fullPath; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		String_t* L_1 = VirtFuncInvoker0< String_t* >::Invoke(17 /* System.String Valve.VR.SteamVR_Action::get_fullPath() */, L_0);
		return L_1;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Source::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public ulong handle { get { return action.handle; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		uint64_t L_1 = VirtFuncInvoker0< uint64_t >::Invoke(18 /* System.UInt64 Valve.VR.SteamVR_Action::get_handle() */, L_0);
		return L_1;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Action_Source_get_actionSet_mF2BE8CE30F960A11115AD000921BBF16088CF5B2 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get { return action.actionSet; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_1 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_0);
		return L_1;
	}
}
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_direction_mDB8ACACE7D1530509D256AD658745A03218C0572 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get { return action.direction; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		int32_t L_1 = VirtFuncInvoker0< int32_t >::Invoke(20 /* Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action::get_direction() */, L_0);
		return L_1;
	}
}
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::get_inputSource()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = __this->get_U3CinputSourceU3Ek__BackingField_0();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::set_inputSource(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_set_inputSource_m9871BD4130FD7649FAF628248DCAEAE32B19236E (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CinputSourceU3Ek__BackingField_0(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Source::get_setActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Source_get_setActive_mB8D4F2911446984A8CE574F8A13206FCD3AD9125 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public bool setActive { get { return actionSet.IsActive(inputSource); } }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = SteamVR_Action_Source_get_actionSet_mF2BE8CE30F960A11115AD000921BBF16088CF5B2(__this, /*hidden argument*/NULL);
		int32_t L_1 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		bool L_2 = SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127(L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	{
		// action = wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		__this->set_action_2(L_0);
		// inputSource = forInputSource;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_set_inputSource_m9871BD4130FD7649FAF628248DCAEAE32B19236E_inline(__this, L_1, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source__ctor_mE39BAB3469E03218CEC35F563C2B9B36ADD3D2A1 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_Action_Source() { }
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		// public SteamVR_Action_Source() { }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Initialize_m2F3A973A4338854E06EA51D28CA96DAB1E5D29C9 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Initialize_m2F3A973A4338854E06EA51D28CA96DAB1E5D29C9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// inputSourceHandle = SteamVR_Input_Source.GetHandle(inputSource);
		int32_t L_0 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_1 = SteamVR_Input_Source_GetHandle_m0FAD747327B66172ACE9A9C1CD14FEDF685C7D3B(L_0, /*hidden argument*/NULL);
		__this->set_inputSourceHandle_1(L_1);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.String Valve.VR.SteamVR_Action_Source_Map::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = __this->get_U3CfullPathU3Ek__BackingField_0();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_fullPath(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_fullPath_m7532C77C62FC0CE955B4CF3581815398179B33EF (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = ___value0;
		__this->set_U3CfullPathU3Ek__BackingField_0(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Source_Map::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_Map_get_handle_m4D0B503DEA30F420E162BD5ECBD57D7BD1033E0F (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public ulong handle { get; protected set; }
		uint64_t L_0 = __this->get_U3ChandleU3Ek__BackingField_1();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_handle(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_handle_mD2434905F9AA79607DC207C7C7855E0DCDFAF417 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, uint64_t ___value0, const RuntimeMethod* method)
{
	{
		// public ulong handle { get; protected set; }
		uint64_t L_0 = ___value0;
		__this->set_U3ChandleU3Ek__BackingField_1(L_0);
		return;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source_Map::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Action_Source_Map_get_actionSet_mE10477F66D710B36A4DB0BDEF9DC7788CD86D893 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get; protected set; }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = __this->get_U3CactionSetU3Ek__BackingField_2();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_actionSet(Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_actionSet_mB40E957F963E0E3755C77F78B2094A06834B366F (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get; protected set; }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = ___value0;
		__this->set_U3CactionSetU3Ek__BackingField_2(L_0);
		return;
	}
}
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_Map_get_direction_m57FCD20566320667DDD47CCF0743E7AF33971413 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get; protected set; }
		int32_t L_0 = __this->get_U3CdirectionU3Ek__BackingField_3();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_direction(Valve.VR.SteamVR_ActionDirections)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_direction_m952BA1C44972F3D692FB1E5A53B275A397B86F02 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CdirectionU3Ek__BackingField_3(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::PreInitialize(Valve.VR.SteamVR_Action,System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_PreInitialize_m92B10A3664CE21397144BE519EB0F549E43DAE5F (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, String_t* ___actionPath1, bool ___throwErrors2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map_PreInitialize_m92B10A3664CE21397144BE519EB0F549E43DAE5F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* V_0 = NULL;
	int32_t V_1 = 0;
	{
		// fullPath = actionPath;
		String_t* L_0 = ___actionPath1;
		SteamVR_Action_Source_Map_set_fullPath_m7532C77C62FC0CE955B4CF3581815398179B33EF_inline(__this, L_0, /*hidden argument*/NULL);
		// action = wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ___wrappingAction0;
		__this->set_action_4(L_1);
		// actionSet = SteamVR_Input.GetActionSetFromPath(GetActionSetPath());
		String_t* L_2 = SteamVR_Action_Source_Map_GetActionSetPath_m9313321D0AA1100C49D6281C5078CABA46ABA787(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = SteamVR_Input_GetActionSetFromPath_mC6422D2A975439C138435CAFF70D2277EA94CA61(L_2, (bool)0, /*hidden argument*/NULL);
		SteamVR_Action_Source_Map_set_actionSet_mB40E957F963E0E3755C77F78B2094A06834B366F_inline(__this, L_3, /*hidden argument*/NULL);
		// direction = GetActionDirection();
		int32_t L_4 = SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119(__this, /*hidden argument*/NULL);
		SteamVR_Action_Source_Map_set_direction_m952BA1C44972F3D692FB1E5A53B275A397B86F02_inline(__this, L_4, /*hidden argument*/NULL);
		// SteamVR_Input_Sources[] sources = SteamVR_Input_Source.GetAllSources();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_5 = SteamVR_Input_Source_GetAllSources_m3FEDAE791D389B6ED4E1A7665B1F6381780C8352(/*hidden argument*/NULL);
		V_0 = L_5;
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		V_1 = 0;
		goto IL_0044;
	}

IL_0036:
	{
		// PreinitializeMap(sources[sourceIndex], wrappingAction);
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_6 = V_0;
		int32_t L_7 = V_1;
		NullCheck(L_6);
		int32_t L_8 = L_7;
		int32_t L_9 = (int32_t)(L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_8));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_10 = ___wrappingAction0;
		VirtActionInvoker2< int32_t, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * >::Invoke(5 /* System.Void Valve.VR.SteamVR_Action_Source_Map::PreinitializeMap(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action) */, __this, L_9, L_10);
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		int32_t L_11 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_11, (int32_t)1));
	}

IL_0044:
	{
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		int32_t L_12 = V_1;
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_13 = V_0;
		NullCheck(L_13);
		if ((((int32_t)L_12) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_13)->max_length)))))))
		{
			goto IL_0036;
		}
	}
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_Initialize_m026286BBD5EDFADDDD6493E5E6B632914BDD7384 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map_Initialize_m026286BBD5EDFADDDD6493E5E6B632914BDD7384_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint64_t V_0 = 0;
	int32_t V_1 = 0;
	{
		// ulong newHandle = 0;
		V_0 = (((int64_t)((int64_t)0)));
		// EVRInputError err = OpenVR.Input.GetActionHandle(fullPath.ToLowerInvariant(), ref newHandle);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		String_t* L_1 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_1);
		String_t* L_2 = String_ToLowerInvariant_m197BD65B6582DC546FF1BC398161EEFA708F799E(L_1, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_3 = CVRInput_GetActionHandle_mF2A82BF273790C37B9268EBC1BD39CF90EC258B0(L_0, L_2, (uint64_t*)(&V_0), /*hidden argument*/NULL);
		V_1 = L_3;
		// handle = newHandle;
		uint64_t L_4 = V_0;
		SteamVR_Action_Source_Map_set_handle_mD2434905F9AA79607DC207C7C7855E0DCDFAF417_inline(__this, L_4, /*hidden argument*/NULL);
		// if (err != EVRInputError.None)
		int32_t L_5 = V_1;
		if (!L_5)
		{
			goto IL_0051;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetActionHandle (" + fullPath.ToLowerInvariant() + ") error: " + err.ToString());
		String_t* L_6 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_6);
		String_t* L_7 = String_ToLowerInvariant_m197BD65B6582DC546FF1BC398161EEFA708F799E(L_6, /*hidden argument*/NULL);
		RuntimeObject * L_8 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_8);
		String_t* L_9 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_8);
		V_1 = *(int32_t*)UnBox(L_8);
		String_t* L_10 = String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64(_stringLiteral1085AA8DD5D0232F772D5CA5EA871BBE2F761FB0, L_7, _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45, L_9, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_10, /*hidden argument*/NULL);
	}

IL_0051:
	{
		// }
		return;
	}
}
// System.String Valve.VR.SteamVR_Action_Source_Map::GetActionSetPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_GetActionSetPath_m9313321D0AA1100C49D6281C5078CABA46ABA787 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	{
		// int actionsEndIndex = fullPath.IndexOf('/', 1);
		String_t* L_0 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_0, ((int32_t)47), 1, /*hidden argument*/NULL);
		// int setStartIndex = actionsEndIndex + 1;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_1, (int32_t)1));
		// int setEndIndex = fullPath.IndexOf('/', setStartIndex);
		String_t* L_2 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		int32_t L_3 = V_0;
		NullCheck(L_2);
		int32_t L_4 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_2, ((int32_t)47), L_3, /*hidden argument*/NULL);
		// int count = setEndIndex;
		V_1 = L_4;
		// return fullPath.Substring(0, count);
		String_t* L_5 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		int32_t L_6 = V_1;
		NullCheck(L_5);
		String_t* L_7 = String_Substring_mB593C0A320C683E6E47EFFC0A12B7A465E5E43BB(L_5, 0, L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::GetActionDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	String_t* V_3 = NULL;
	{
		// int actionsEndIndex = fullPath.IndexOf('/', 1);
		String_t* L_0 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_0, ((int32_t)47), 1, /*hidden argument*/NULL);
		// int setStartIndex = actionsEndIndex + 1;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_1, (int32_t)1));
		// int setEndIndex = fullPath.IndexOf('/', setStartIndex);
		String_t* L_2 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		int32_t L_3 = V_0;
		NullCheck(L_2);
		int32_t L_4 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_2, ((int32_t)47), L_3, /*hidden argument*/NULL);
		V_1 = L_4;
		// int directionEndIndex = fullPath.IndexOf('/', setEndIndex + 1);
		String_t* L_5 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		int32_t L_6 = V_1;
		NullCheck(L_5);
		int32_t L_7 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_5, ((int32_t)47), ((int32_t)il2cpp_codegen_add((int32_t)L_6, (int32_t)1)), /*hidden argument*/NULL);
		// int count = directionEndIndex - setEndIndex - 1;
		int32_t L_8 = V_1;
		V_2 = ((int32_t)il2cpp_codegen_subtract((int32_t)((int32_t)il2cpp_codegen_subtract((int32_t)L_7, (int32_t)L_8)), (int32_t)1));
		// string direction = fullPath.Substring(setEndIndex + 1, count);
		String_t* L_9 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		int32_t L_10 = V_1;
		int32_t L_11 = V_2;
		NullCheck(L_9);
		String_t* L_12 = String_Substring_mB593C0A320C683E6E47EFFC0A12B7A465E5E43BB(L_9, ((int32_t)il2cpp_codegen_add((int32_t)L_10, (int32_t)1)), L_11, /*hidden argument*/NULL);
		V_3 = L_12;
		// if (direction == inLowered)
		String_t* L_13 = V_3;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var);
		String_t* L_14 = ((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->get_inLowered_5();
		bool L_15 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_13, L_14, /*hidden argument*/NULL);
		if (!L_15)
		{
			goto IL_0054;
		}
	}
	{
		// return SteamVR_ActionDirections.In;
		return (int32_t)(0);
	}

IL_0054:
	{
		// else if (direction == outLowered)
		String_t* L_16 = V_3;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var);
		String_t* L_17 = ((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->get_outLowered_6();
		bool L_18 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_16, L_17, /*hidden argument*/NULL);
		if (!L_18)
		{
			goto IL_0063;
		}
	}
	{
		// return SteamVR_ActionDirections.Out;
		return (int32_t)(1);
	}

IL_0063:
	{
		// Debug.LogError("Could not find match for direction: " + direction);
		String_t* L_19 = V_3;
		String_t* L_20 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteral258E23932207BA363BB8C0D5C6F463CBDBE1EFC5, L_19, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_20, /*hidden argument*/NULL);
		// return SteamVR_ActionDirections.In;
		return (int32_t)(0);
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map__ctor_m447250764F35CA25B89A1133E402FA825A68ADF2 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map__cctor_mA2B070AE1F0DA7660630C182FFE245986C0CF8DF (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map__cctor_mA2B070AE1F0DA7660630C182FFE245986C0CF8DF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// private static string inLowered = "IN".ToLower(System.Globalization.CultureInfo.CurrentCulture);
		IL2CPP_RUNTIME_CLASS_INIT(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_il2cpp_TypeInfo_var);
		CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * L_0 = CultureInfo_get_CurrentCulture_mD86F3D8E5D332FB304F80D9B9CA4DE849C2A6831(/*hidden argument*/NULL);
		NullCheck(_stringLiteral6FCA55CA3C828A46BFE96A10E69F572B61CE540C);
		String_t* L_1 = String_ToLower_m91732DBE4AE31B77EA3BB2C185E66513919968A5(_stringLiteral6FCA55CA3C828A46BFE96A10E69F572B61CE540C, L_0, /*hidden argument*/NULL);
		((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->set_inLowered_5(L_1);
		// private static string outLowered = "OUT".ToLower(System.Globalization.CultureInfo.CurrentCulture);
		CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * L_2 = CultureInfo_get_CurrentCulture_mD86F3D8E5D332FB304F80D9B9CA4DE849C2A6831(/*hidden argument*/NULL);
		NullCheck(_stringLiteral5D84EB9E92DC661A577D3ADFBA33F1D74C56B13F);
		String_t* L_3 = String_ToLower_m91732DBE4AE31B77EA3BB2C185E66513919968A5(_stringLiteral5D84EB9E92DC661A577D3ADFBA33F1D74C56B13F, L_2, /*hidden argument*/NULL);
		((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->set_outLowered_6(L_3);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onChange(Valve.VR.SteamVR_Action_Vector2_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onChange_m2E54BCC55EB640613E93BD19303BE637F65A92E2 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onChange_m2E54BCC55EB640613E93BD19303BE637F65A92E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onChange(Valve.VR.SteamVR_Action_Vector2_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onChange_m77DB5FCCDE335AD1CA8C3C2AF3C40837EC43F1F0 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onChange_m77DB5FCCDE335AD1CA8C3C2AF3C40837EC43F1F0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onUpdate(Valve.VR.SteamVR_Action_Vector2_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onUpdate_mCA2F84092B776F04C0FA3E8461B5DADA42E43906 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onUpdate_mCA2F84092B776F04C0FA3E8461B5DADA42E43906_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onUpdate(Valve.VR.SteamVR_Action_Vector2_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onUpdate_m4BD84B90D18629BEB3A1280A09F3A0D5D8515465 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onUpdate_m4BD84B90D18629BEB3A1280A09F3A0D5D8515465_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onAxis(Valve.VR.SteamVR_Action_Vector2_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onAxis_mD6AD44E8467900BFC690827ACC860F9BDC6213C6 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onAxis_mD6AD44E8467900BFC690827ACC860F9BDC6213C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onAxis(Valve.VR.SteamVR_Action_Vector2_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onAxis_mD9B1611CF8ABF8163817BF48CAF68C8F9184687F (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onAxis_mD9B1611CF8ABF8163817BF48CAF68C8F9184687F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onActiveChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onActiveChange_m9EA2FF019B7968EB2BA9BF053F590FD97F20EE92 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onActiveChange_m9EA2FF019B7968EB2BA9BF053F590FD97F20EE92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onActiveChange_mAEC443E675E12BF7B828ABBC60434149D960F1A7 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onActiveChange_mAEC443E675E12BF7B828ABBC60434149D960F1A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onActiveBindingChange_m963BB4FE60F0CDE3896183F29151E51F079A24A7 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onActiveBindingChange_m963BB4FE60F0CDE3896183F29151E51F079A24A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onActiveBindingChange_m7500E9F9BDA0A03ACEEB0B9D181748D4BAF775D7 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onActiveBindingChange_m7500E9F9BDA0A03ACEEB0B9D181748D4BAF775D7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_axis_mE421CADA54F41607E4F071B793BD5C55171812FB (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_axis_mE421CADA54F41607E4F071B793BD5C55171812FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector2 axis { get { return sourceMap[SteamVR_Input_Sources.Any].axis; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_lastAxis_m746D1B31C63B141A97FBD0F4138D703FC5F9DEF0 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_lastAxis_m746D1B31C63B141A97FBD0F4138D703FC5F9DEF0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector2 lastAxis { get { return sourceMap[SteamVR_Input_Sources.Any].lastAxis; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_delta_m368E3DEDCCE873F323FCB9B85C72103971A2B1E9 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_delta_m368E3DEDCCE873F323FCB9B85C72103971A2B1E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector2 delta { get { return sourceMap[SteamVR_Input_Sources.Any].delta; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_lastDelta_mDDAC2B9F3DB61F8B1015F22B61CDD9591FEEEDD7 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_lastDelta_mDDAC2B9F3DB61F8B1015F22B61CDD9591FEEEDD7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector2 lastDelta { get { return sourceMap[SteamVR_Input_Sources.Any].lastDelta; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2__ctor_mD1E4556AF2B0DFA3D91AD96685F317978593D46C (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2__ctor_mD1E4556AF2B0DFA3D91AD96685F317978593D46C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Vector2() { }
		SteamVR_Action_In_2__ctor_mC337EE2FE20E16CE0DE3BC0FB61364B227330B64(__this, /*hidden argument*/SteamVR_Action_In_2__ctor_mC337EE2FE20E16CE0DE3BC0FB61364B227330B64_RuntimeMethod_var);
		// public SteamVR_Action_Vector2() { }
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetAxis_m8A479C238CC933D200B7011F525F49CF84C42BC2 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetAxis_m8A479C238CC933D200B7011F525F49CF84C42BC2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].axis;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetAxisDelta_m28C52C9103D70A67727BE8BA93551C07951670B0 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetAxisDelta_m28C52C9103D70A67727BE8BA93551C07951670B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].delta;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetLastAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetLastAxis_m4B679A6140787156C4E740F9A68D03D919111484 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetLastAxis_m4B679A6140787156C4E740F9A68D03D919111484_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].lastAxis;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetLastAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetLastAxisDelta_mFB4F219149889D017084BD189D659164E91E90C6 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetLastAxisDelta_mFB4F219149889D017084BD189D659164E91E90C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].lastDelta;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnActiveChangeListener_mB482EE4DEBAFBA46414DEBBC39ED9AC8FC7F3690 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnActiveChangeListener_mB482EE4DEBAFBA46414DEBBC39ED9AC8FC7F3690_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnActiveChangeListener_m46F423A97CF4BB520CDB40A179E5971C977B7F0B (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnActiveChangeListener_m46F423A97CF4BB520CDB40A179E5971C977B7F0B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnActiveBindingChangeListener_m782C7E1662D5992F1FC16F8AE5277261C8CF190A (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnActiveBindingChangeListener_m782C7E1662D5992F1FC16F8AE5277261C8CF190A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnActiveBindingChangeListener_m3136E04858B1362DC1D5D51CE1FA27DF160A89E1 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnActiveBindingChangeListener_m3136E04858B1362DC1D5D51CE1FA27DF160A89E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnChangeListener(Valve.VR.SteamVR_Action_Vector2_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnChangeListener_m64A46A34B927694B2F168690057D360C05CB482A (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnChangeListener_m64A46A34B927694B2F168690057D360C05CB482A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Vector2_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnChangeListener_m0365B74847AF715BC567B7896894340AAF36CD9A (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnChangeListener_m0365B74847AF715BC567B7896894340AAF36CD9A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnUpdateListener(Valve.VR.SteamVR_Action_Vector2_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnUpdateListener_m44C545B1A2FFCBF62436D4573D2933241EE5C02F (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnUpdateListener_m44C545B1A2FFCBF62436D4573D2933241EE5C02F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Vector2_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnUpdateListener_m72B61CC091D476EB3C4BAC150E9F2A15C3F0C7CD (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnUpdateListener_m72B61CC091D476EB3C4BAC150E9F2A15C3F0C7CD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnAxisListener(Valve.VR.SteamVR_Action_Vector2_AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnAxisListener_m41DCCC8C19E06128A5587638761C43B0F3DE54D3 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnAxisListener_m41DCCC8C19E06128A5587638761C43B0F3DE54D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnAxisListener(Valve.VR.SteamVR_Action_Vector2_AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnAxisListener_m5DA6BC281F67A62D6396C9C22181A1AAD96925BC (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnAxisListener_m5DA6BC281F67A62D6396C9C22181A1AAD96925BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_mFB677FEB8EA3464C89EA3972E1DEF20FAD52E40B (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mCC1A059E602FABC67D24682DD3533CBC66564596 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mCC1A059E602FABC67D24682DD3533CBC66564596_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_mF196A84C3451B66EB3C0442338565F96747D1BDD(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_mF196A84C3451B66EB3C0442338565F96747D1BDD_RuntimeMethod_var);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_mE2B05B9DD5DD8EFF088DFEF6271F65EB3CED7EF7 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m5A3352BD144AFB3158E26F423D73B6392B2138A5 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m8BA8582E8229FBEBD3D4EA1F30EF9D848C8CD8A1 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m8BA8582E8229FBEBD3D4EA1F30EF9D848C8CD8A1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m5056BC85E698EFDFB486206A27851070A14EDC68 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m5EA71E3F8667B07D8D3C4E5B80BDAB08F26F38AB (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_AxisHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m483B11CC81D9E82CDE50D9629D580788C464A29C (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2_AxisHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* AxisHandler_BeginInvoke_m4FE79547E75F92C873C63002FE5EB08EBC37E2C2 (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AxisHandler_BeginInvoke_m4FE79547E75F92C873C63002FE5EB08EBC37E2C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_AxisHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_EndInvoke_m56E6CD51D94410279C799126EBA07900B226335F (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mAC1B1D7823B724FE1D815A26935FEEA76EDF91BA (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m664C8AE96DAF8EAB9BD99C79452FCD0B50D91645 (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m64CE8AD95AFF7D63BB705D05EE591FD010443899 (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_m64CE8AD95AFF7D63BB705D05EE591FD010443899_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m7222EDB6CC7B92BA42993CDF77798A081F6D70AE (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m1D37B398391AD0AB6877E223F01A3DB09D94F7C3 (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m5BB2427CCB8050DF5F86E52782DBE6A180B6481C (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m64FF27DC0A666F058A491BA34AFE54460466D6CE (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m64FF27DC0A666F058A491BA34AFE54460466D6CE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m4646B80E9620F453374D9182B31093CB67A7584E (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector2_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_0 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_1 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_2 = NULL;
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var));
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_6 = V_2;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_7 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *>((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_9 = V_0;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_9) == ((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector2_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_0 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_1 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_2 = NULL;
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var));
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_6 = V_2;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_7 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *>((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_9 = V_0;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_9) == ((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onChange(Valve.VR.SteamVR_Action_Vector2_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_0 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_1 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_2 = NULL;
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var));
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_6 = V_2;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_7 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *>((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_9 = V_0;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_9) == ((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector2_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_0 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_1 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_2 = NULL;
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var));
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_6 = V_2;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_7 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *>((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_9 = V_0;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_9) == ((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector2_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_0 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_1 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_2 = NULL;
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var));
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_6 = V_2;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_7 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *>((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_9 = V_0;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_9) == ((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector2_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_0 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_1 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_2 = NULL;
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var));
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_6 = V_2;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_7 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *>((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_9 = V_0;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_9) == ((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CaxisU3Ek__BackingField_17();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_axis(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_axis_m5714B37391AC92E5DB0BB3E1D600280B054A063D (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CaxisU3Ek__BackingField_17(L_0);
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastAxisU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastAxis(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastAxis_m28E7093728C01D3ABBF9871752E734D022101498 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastAxisU3Ek__BackingField_18(L_0);
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CdeltaU3Ek__BackingField_19();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_delta(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_delta_mE23EC73FCF0BFAAE785BFED2A3E3DF99A7A0A824 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CdeltaU3Ek__BackingField_19(L_0);
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastDeltaU3Ek__BackingField_20();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastDelta(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastDelta_m1140772DB3236B7C53E1B0723623DC3F564FC5BE (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastDeltaU3Ek__BackingField_20(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_changed_m9023294DEC5E983CBFFEA1C5834ED22E5C6FDC06 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = __this->get_U3CchangedU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_changed_m575FBE57696855BE8F49EDA79BECD1722929EA1F (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CchangedU3Ek__BackingField_21(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_lastChanged_mEA7D81FAA12045C035DC33DF5C199FE0FDB796C5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = __this->get_U3ClastChangedU3Ek__BackingField_22();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastChanged_mB18FB99134F9B872EF935883B6E655E10DB5B029 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastChangedU3Ek__BackingField_22(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Vector2_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Vector2_Source_get_activeOrigin_mD905FBA2F4411E82CEF5B63E96DD6CBDD982DFB8 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// if (active)
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_0)
		{
			goto IL_0014;
		}
	}
	{
		// return actionData.activeOrigin;
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_1 = __this->get_address_of_actionData_24();
		uint64_t L_2 = L_1->get_activeOrigin_1();
		return L_2;
	}

IL_0014:
	{
		// return 0;
		return (((int64_t)((int64_t)0)));
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Vector2_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Vector2_Source_get_lastActiveOrigin_m4061DC1DB23410A75091322497E7E4D2F83216DC (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_lastActionData_25();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_active_m1F0AA8E0031D68099D0C4B7DB97701EE250A61E5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127(L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}

IL_001f:
	{
		return (bool)0;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_activeBinding_m9C707F1BE1B1305D7A2C124ECB43EB763005DC6B (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_actionData_24();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_lastActive_m79E58A042EBDEEBE52BF7B4ECFB3E0220D4EC9E1 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_23();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastActive_mE023671BFA07AB8F03535FAE36088E57B9F880A1 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_23(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_lastActiveBinding_m67F389BB226AA3D984A8E36D3C0ED61EC13F0C59 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_lastActionData_25();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_Preinitialize_m39F0990901BECE7D2D6DB17C641DD2E3568446A7 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_Preinitialize_m39F0990901BECE7D2D6DB17C641DD2E3568446A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9(__this, L_0, L_1, /*hidden argument*/NULL);
		// vector2Action = (SteamVR_Action_Vector2)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_vector2Action_26(((SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37_il2cpp_TypeInfo_var)));
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_Initialize_m90A49D5DF367619ED0E44D8BBA576C462EA60BE5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_Initialize_m90A49D5DF367619ED0E44D8BBA576C462EA60BE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Initialize();
		SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001(__this, /*hidden argument*/NULL);
		// if (actionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var))->get_actionData_size_10();
		if (L_0)
		{
			goto IL_0021;
		}
	}
	{
		// actionData_size = (uint)Marshal.SizeOf(typeof(InputAnalogActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_1 = { reinterpret_cast<intptr_t> (InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_2 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_1, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_3 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var);
		((SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var))->set_actionData_size_10(L_3);
	}

IL_0021:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_UpdateValue_mEEAE61A19D6A526B51C6C58470E2C4138E622F70 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_UpdateValue_mEEAE61A19D6A526B51C6C58470E2C4138E622F70_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	uint64_t V_1 = 0;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_2;
	memset((&V_2), 0, sizeof(V_2));
	{
		// lastActionData = actionData;
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  L_0 = __this->get_actionData_24();
		__this->set_lastActionData_25(L_0);
		// lastActive = active;
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_1);
		// lastAxis = axis;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_lastAxis_m28E7093728C01D3ABBF9871752E734D022101498_inline(__this, L_2, /*hidden argument*/NULL);
		// lastDelta = delta;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_lastDelta_m1140772DB3236B7C53E1B0723623DC3F564FC5BE_inline(__this, L_3, /*hidden argument*/NULL);
		// EVRInputError err = OpenVR.Input.GetAnalogActionData(handle, ref actionData, actionData_size, SteamVR_Input_Source.GetHandle(inputSource));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_4 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_5 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_6 = __this->get_address_of_actionData_24();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var);
		uint32_t L_7 = ((SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var))->get_actionData_size_10();
		int32_t L_8 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_9 = SteamVR_Input_Source_GetHandle_m0FAD747327B66172ACE9A9C1CD14FEDF685C7D3B(L_8, /*hidden argument*/NULL);
		NullCheck(L_4);
		int32_t L_10 = CVRInput_GetAnalogActionData_mD66B59E77195699C364DA07926CA524C55708FCD(L_4, L_5, (InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C *)L_6, L_7, L_9, /*hidden argument*/NULL);
		V_0 = L_10;
		// if (err != EVRInputError.None)
		int32_t L_11 = V_0;
		if (!L_11)
		{
			goto IL_00ac;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetAnalogActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		String_t* L_15 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_15);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_15);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_14;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_16;
		RuntimeObject * L_18 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_18);
		String_t* L_19 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_18);
		V_0 = *(int32_t*)UnBox(L_18);
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_19);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_19);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_17;
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_20;
		uint64_t L_22 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_1 = L_22;
		String_t* L_23 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_1), /*hidden argument*/NULL);
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_23);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_23);
		String_t* L_24 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_21, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_24, /*hidden argument*/NULL);
	}

IL_00ac:
	{
		// updateTime = Time.realtimeSinceStartup;
		float L_25 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C_inline(__this, L_25, /*hidden argument*/NULL);
		// axis = new Vector2(actionData.x, actionData.y);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_26 = __this->get_address_of_actionData_24();
		float L_27 = L_26->get_x_2();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_28 = __this->get_address_of_actionData_24();
		float L_29 = L_28->get_y_3();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_30;
		memset((&L_30), 0, sizeof(L_30));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_30), L_27, L_29, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_axis_m5714B37391AC92E5DB0BB3E1D600280B054A063D_inline(__this, L_30, /*hidden argument*/NULL);
		// delta = new Vector2(actionData.deltaX, actionData.deltaY);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_31 = __this->get_address_of_actionData_24();
		float L_32 = L_31->get_deltaX_5();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_33 = __this->get_address_of_actionData_24();
		float L_34 = L_33->get_deltaY_6();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_35;
		memset((&L_35), 0, sizeof(L_35));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_35), L_32, L_34, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_delta_mE23EC73FCF0BFAAE785BFED2A3E3DF99A7A0A824_inline(__this, L_35, /*hidden argument*/NULL);
		// changed = false;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)0);
		// if (active)
		bool L_36 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_36)
		{
			goto IL_01d2;
		}
	}
	{
		// if (delta.magnitude > changeTolerance)
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_37 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		V_2 = L_37;
		float L_38 = Vector2_get_magnitude_m66097AFDF9696BD3E88467D4398D4F82B8A4C7DF((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&V_2), /*hidden argument*/NULL);
		float L_39 = __this->get_changeTolerance_11();
		if ((!(((float)L_38) > ((float)L_39))))
		{
			goto IL_016a;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// changedTime = Time.realtimeSinceStartup + actionData.fUpdateTime; //fUpdateTime is the time from the time the action was called that the action changed
		float L_40 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_41 = __this->get_address_of_actionData_24();
		float L_42 = L_41->get_fUpdateTime_8();
		SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline(__this, ((float)il2cpp_codegen_add((float)L_40, (float)L_42)), /*hidden argument*/NULL);
		// if (onChange != null)
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_43 = __this->get_onChange_15();
		if (!L_43)
		{
			goto IL_016a;
		}
	}
	{
		// onChange.Invoke(vector2Action, inputSource, axis, delta);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_44 = __this->get_onChange_15();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_45 = __this->get_vector2Action_26();
		int32_t L_46 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_47 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_48 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_44);
		ChangeHandler_Invoke_m664C8AE96DAF8EAB9BD99C79452FCD0B50D91645(L_44, L_45, L_46, L_47, L_48, /*hidden argument*/NULL);
	}

IL_016a:
	{
		// if (axis != Vector2.zero)
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_49 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_50 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		bool L_51 = Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E(L_49, L_50, /*hidden argument*/NULL);
		if (!L_51)
		{
			goto IL_01a7;
		}
	}
	{
		// if (onAxis != null)
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_52 = __this->get_onAxis_12();
		if (!L_52)
		{
			goto IL_01a7;
		}
	}
	{
		// onAxis.Invoke(vector2Action, inputSource, axis, delta);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_53 = __this->get_onAxis_12();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_54 = __this->get_vector2Action_26();
		int32_t L_55 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_56 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_57 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_53);
		AxisHandler_Invoke_m483B11CC81D9E82CDE50D9629D580788C464A29C(L_53, L_54, L_55, L_56, L_57, /*hidden argument*/NULL);
	}

IL_01a7:
	{
		// if (onUpdate != null)
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_58 = __this->get_onUpdate_16();
		if (!L_58)
		{
			goto IL_01d2;
		}
	}
	{
		// onUpdate.Invoke(vector2Action, inputSource, axis, delta);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_59 = __this->get_onUpdate_16();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_60 = __this->get_vector2Action_26();
		int32_t L_61 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_62 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_63 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_59);
		UpdateHandler_Invoke_m5BB2427CCB8050DF5F86E52782DBE6A180B6481C(L_59, L_60, L_61, L_62, L_63, /*hidden argument*/NULL);
	}

IL_01d2:
	{
		// if (onActiveBindingChange != null && lastActiveBinding != activeBinding)
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_64 = __this->get_onActiveBindingChange_14();
		if (!L_64)
		{
			goto IL_0205;
		}
	}
	{
		bool L_65 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		bool L_66 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if ((((int32_t)L_65) == ((int32_t)L_66)))
		{
			goto IL_0205;
		}
	}
	{
		// onActiveBindingChange.Invoke(vector2Action, inputSource, activeBinding);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_67 = __this->get_onActiveBindingChange_14();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_68 = __this->get_vector2Action_26();
		int32_t L_69 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_70 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_67);
		ActiveChangeHandler_Invoke_m5A3352BD144AFB3158E26F423D73B6392B2138A5(L_67, L_68, L_69, L_70, /*hidden argument*/NULL);
	}

IL_0205:
	{
		// if (onActiveChange != null && lastActive != active)
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_71 = __this->get_onActiveChange_13();
		if (!L_71)
		{
			goto IL_0238;
		}
	}
	{
		bool L_72 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		bool L_73 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if ((((int32_t)L_72) == ((int32_t)L_73)))
		{
			goto IL_0238;
		}
	}
	{
		// onActiveChange.Invoke(vector2Action, inputSource, activeBinding);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_74 = __this->get_onActiveChange_13();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_75 = __this->get_vector2Action_26();
		int32_t L_76 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_77 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_74);
		ActiveChangeHandler_Invoke_m5A3352BD144AFB3158E26F423D73B6392B2138A5(L_74, L_75, L_76, L_77, /*hidden argument*/NULL);
	}

IL_0238:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source__ctor_mA8DA34CDBF8615AE3F8B90FF052847F729723380 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source__ctor_mA8DA34CDBF8615AE3F8B90FF052847F729723380_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float changeTolerance = Mathf.Epsilon;
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_0 = ((Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields*)il2cpp_codegen_static_fields_for(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var))->get_Epsilon_0();
		__this->set_changeTolerance_11(L_0);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mE238DF9510354C14124DF4D1973356C078DAE3BB(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source__cctor_m109983A3B5698EF03E84DA7A388D3D5A48234297 (const RuntimeMethod* method)
{
	{
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_Map__ctor_m0736EE8ECB1DDB8DE05D85DA3956228EECAC4A79 (SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_Map__ctor_m0736EE8ECB1DDB8DE05D85DA3956228EECAC4A79_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_In_Source_Map_1__ctor_m170B052F1C8F4630A0EA0945BFBD16741CE154F8(__this, /*hidden argument*/SteamVR_Action_In_Source_Map_1__ctor_m170B052F1C8F4630A0EA0945BFBD16741CE154F8_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3::add_onChange(Valve.VR.SteamVR_Action_Vector3_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_add_onChange_mC881F353BB159D930024285D8B9BB16298129ADF (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_add_onChange_mC881F353BB159D930024285D8B9BB16298129ADF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_add_onChange_mBC0D15F379F129D8B26B395AA54FEA447711BFCB(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::remove_onChange(Valve.VR.SteamVR_Action_Vector3_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_remove_onChange_mDD391BFAE5FC3A1F939CCEE35575B9DA8068650C (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_remove_onChange_mDD391BFAE5FC3A1F939CCEE35575B9DA8068650C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_remove_onChange_m8A33FE53328AAE0025BDAEC35D22FB0F9113CA0A(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::add_onUpdate(Valve.VR.SteamVR_Action_Vector3_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_add_onUpdate_mAB34E6BB92493EB5E9C1C1D5E0441D94048314DE (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_add_onUpdate_mAB34E6BB92493EB5E9C1C1D5E0441D94048314DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_add_onUpdate_mE9FEAEF2D8870D9CCB4E2C7DE9E75061D706A4EE(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::remove_onUpdate(Valve.VR.SteamVR_Action_Vector3_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_remove_onUpdate_m1EF52284FEE85C26016692C722CAE43D224CF9B9 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_remove_onUpdate_m1EF52284FEE85C26016692C722CAE43D224CF9B9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_remove_onUpdate_m38E4C3064DFE3725CE69DC446A6F10192C1F5B1E(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::add_onAxis(Valve.VR.SteamVR_Action_Vector3_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_add_onAxis_m42C6C949C5494918DA3BB9F9DA7FE09A34A7B1A8 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_add_onAxis_m42C6C949C5494918DA3BB9F9DA7FE09A34A7B1A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_add_onAxis_mCBBF665AB546060F4E654D9FC0E79FE4ED5D5A49(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::remove_onAxis(Valve.VR.SteamVR_Action_Vector3_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_remove_onAxis_mAB5BBED88279B20FD5B39DB7100747D1C9753122 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_remove_onAxis_mAB5BBED88279B20FD5B39DB7100747D1C9753122_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_remove_onAxis_m8BCC7D535B497B755AC3CB8EDB997BD6CB92099C(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::add_onActiveChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_add_onActiveChange_m99AF6EFE7C50CBC503072E84A9A71712A7191EE5 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_add_onActiveChange_m99AF6EFE7C50CBC503072E84A9A71712A7191EE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_add_onActiveChange_m852AB08B89861ACB66FE7688DC14A3BDB15C3681(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_remove_onActiveChange_mCD9109BA2C36C19880C3B3ECDA304558916090A6 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_remove_onActiveChange_mCD9109BA2C36C19880C3B3ECDA304558916090A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_remove_onActiveChange_m2C0CA1E525F84DE742C9F16077EFA4222F43B1D9(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_add_onActiveBindingChange_m129FDCDCE7D58D4BB9A6545459ED405146C353A9 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_add_onActiveBindingChange_m129FDCDCE7D58D4BB9A6545459ED405146C353A9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_add_onActiveBindingChange_m562401793E091E0F7334C655471E49B47D379296(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_remove_onActiveBindingChange_m98550A3C0B6C0D36B3547815384CB000A6B39EB5 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_remove_onActiveBindingChange_m98550A3C0B6C0D36B3547815384CB000A6B39EB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_mA2C523EA1DFFAAD99B982082A2CE53D1D061B5D8(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_get_axis_mF2A2E572ADC8B76D4232AED7D44A94ACD1906099 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_get_axis_mF2A2E572ADC8B76D4232AED7D44A94ACD1906099_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3 axis { get { return sourceMap[SteamVR_Input_Sources.Any].axis; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_get_lastAxis_m0365F5B93BB05F9C8F59C44DA333B70C1C46F1DE (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_get_lastAxis_m0365F5B93BB05F9C8F59C44DA333B70C1C46F1DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3 lastAxis { get { return sourceMap[SteamVR_Input_Sources.Any].lastAxis; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Vector3_Source_get_lastAxis_mB5307EA9C41A76639B02A5FB7C775E14C7E8BE8E_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_get_delta_m3EA8C5D174CB8D7965B2026361C94F6FF750E38C (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_get_delta_m3EA8C5D174CB8D7965B2026361C94F6FF750E38C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3 delta { get { return sourceMap[SteamVR_Input_Sources.Any].delta; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_get_lastDelta_m1C55579E0A38F190350FF1827125EC6AC7D27606 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_get_lastDelta_m1C55579E0A38F190350FF1827125EC6AC7D27606_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3 lastDelta { get { return sourceMap[SteamVR_Input_Sources.Any].lastDelta; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Vector3_Source_get_lastDelta_mBCB31D8D0D5F3B64784F01EAFFC7311F1E07B467_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3__ctor_m5468C9DB9AA879F1BC0854756C56E156B0D3CBD1 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3__ctor_m5468C9DB9AA879F1BC0854756C56E156B0D3CBD1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Vector3() { }
		SteamVR_Action_In_2__ctor_m84A0B8D072E249A2404A01F576F10FAED065E6EF(__this, /*hidden argument*/SteamVR_Action_In_2__ctor_m84A0B8D072E249A2404A01F576F10FAED065E6EF_RuntimeMethod_var);
		// public SteamVR_Action_Vector3() { }
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::GetAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_GetAxis_mAECD5AA7DB213F313164BCF52B688A44D2466EF5 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_GetAxis_mAECD5AA7DB213F313164BCF52B688A44D2466EF5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].axis;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::GetAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_GetAxisDelta_m6A8BA36DD1F6238D9EE8EF3D7E0F0C87CCE3D9C0 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_GetAxisDelta_m6A8BA36DD1F6238D9EE8EF3D7E0F0C87CCE3D9C0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].delta;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::GetLastAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_GetLastAxis_mF0C0D122C31F80A5713E739B8D04D352756A6EB8 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_GetLastAxis_mF0C0D122C31F80A5713E739B8D04D352756A6EB8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].lastAxis;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Vector3_Source_get_lastAxis_mB5307EA9C41A76639B02A5FB7C775E14C7E8BE8E_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::GetLastAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_GetLastAxisDelta_m68EA72E9F86BD55D97944438DE7173AD6DA2537D (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_GetLastAxisDelta_m68EA72E9F86BD55D97944438DE7173AD6DA2537D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].lastDelta;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Vector3_Source_get_lastDelta_mBCB31D8D0D5F3B64784F01EAFFC7311F1E07B467_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_AddOnActiveChangeListener_m3AC34E4D209B6AFB9CA44503C4B44196F62D7999 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_AddOnActiveChangeListener_m3AC34E4D209B6AFB9CA44503C4B44196F62D7999_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange += functionToCall;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_add_onActiveChange_m852AB08B89861ACB66FE7688DC14A3BDB15C3681(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_RemoveOnActiveChangeListener_m8528E291ADA5321ED6625F9C0E2FA1916149A63A (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_RemoveOnActiveChangeListener_m8528E291ADA5321ED6625F9C0E2FA1916149A63A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_remove_onActiveChange_m2C0CA1E525F84DE742C9F16077EFA4222F43B1D9(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_AddOnActiveBindingChangeListener_mD4EE1282A0FB4655B3FB625E7F9426CE6768F974 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_AddOnActiveBindingChangeListener_mD4EE1282A0FB4655B3FB625E7F9426CE6768F974_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_add_onActiveBindingChange_m562401793E091E0F7334C655471E49B47D379296(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_RemoveOnActiveBindingChangeListener_mD6DAC1F959C854F263B7DBE355BC1F57DCC83E84 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_RemoveOnActiveBindingChangeListener_mD6DAC1F959C854F263B7DBE355BC1F57DCC83E84_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_mA2C523EA1DFFAAD99B982082A2CE53D1D061B5D8(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::AddOnChangeListener(Valve.VR.SteamVR_Action_Vector3_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_AddOnChangeListener_m968A70DCAD38BD6144A728B62259CF14931691DE (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_AddOnChangeListener_m968A70DCAD38BD6144A728B62259CF14931691DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange += functionToCall;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_add_onChange_mBC0D15F379F129D8B26B395AA54FEA447711BFCB(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Vector3_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_RemoveOnChangeListener_mDED9A3F384D62A8D58F471C575DDF6B3323268CA (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_RemoveOnChangeListener_mDED9A3F384D62A8D58F471C575DDF6B3323268CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange -= functionToStopCalling;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_remove_onChange_m8A33FE53328AAE0025BDAEC35D22FB0F9113CA0A(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::AddOnUpdateListener(Valve.VR.SteamVR_Action_Vector3_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_AddOnUpdateListener_mD5B0AA1751D01CD88D69BB486F4155B25E7837AC (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_AddOnUpdateListener_mD5B0AA1751D01CD88D69BB486F4155B25E7837AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate += functionToCall;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_add_onUpdate_mE9FEAEF2D8870D9CCB4E2C7DE9E75061D706A4EE(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Vector3_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_RemoveOnUpdateListener_m288F4DAAF8A29A618BD95D5E9ED53DAF200FD69A (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_RemoveOnUpdateListener_m288F4DAAF8A29A618BD95D5E9ED53DAF200FD69A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate -= functionToStopCalling;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_remove_onUpdate_m38E4C3064DFE3725CE69DC446A6F10192C1F5B1E(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::AddOnAxisListener(Valve.VR.SteamVR_Action_Vector3_AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_AddOnAxisListener_m282FA5CD56EBF34E7036BB26C8CA000C287BCB19 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_AddOnAxisListener_m282FA5CD56EBF34E7036BB26C8CA000C287BCB19_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis += functionToCall;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_add_onAxis_mCBBF665AB546060F4E654D9FC0E79FE4ED5D5A49(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::RemoveOnAxisListener(Valve.VR.SteamVR_Action_Vector3_AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_RemoveOnAxisListener_m2A2EB9DBE81BE1F44FAF3867AE5073E8803B7FD7 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_RemoveOnAxisListener_m2A2EB9DBE81BE1F44FAF3867AE5073E8803B7FD7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis -= functionToStopCalling;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_remove_onAxis_m8BCC7D535B497B755AC3CB8EDB997BD6CB92099C(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_mF16AB9204AAA4211A696DEDAC3A78BDEF91ACCDB (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m2828349EEC44810B3AD7CF6AD00E8865CF5A53D5 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m2828349EEC44810B3AD7CF6AD00E8865CF5A53D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_m115A20871F3A2469AFA25F1296BEA571EEA164D1(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_m115A20871F3A2469AFA25F1296BEA571EEA164D1_RuntimeMethod_var);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m4B6A43788F2309C630A4B98FF518AC35AD8AA42D (ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mAB21A23BC632397BB13F970F87C8C8C33A32D42D (ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m9995300C6F19FEE52CC3ECF00A665295AEC75ED5 (ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m9995300C6F19FEE52CC3ECF00A665295AEC75ED5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mF0211DCAF423F95EC3664DEB9CAC2F4887C7DD15 (ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m937A18B2E9674E08CDD3F2480D1175F022DF66E2 (AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_AxisHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m7796C560153E4FEB49C1200E64AC426FE450B4D5 (AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector3_AxisHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* AxisHandler_BeginInvoke_mFE2BE9BF34FB3FBA2F277E50B7B2B3B908B9D278 (AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AxisHandler_BeginInvoke_mFE2BE9BF34FB3FBA2F277E50B7B2B3B908B9D278_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_AxisHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_EndInvoke_m39A5A0C075ED5870F3BD72EC35EA89571F8810A3 (AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m72522CC3195B7F4BC2B6A49F355DCE6D1AFF68B8 (ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mFC8F10B8AA67939364C81F4F91B268C6A50D80D8 (ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector3_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m7B16EFF83EE198C4F588362AD79FEB523D4A3AAA (ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_m7B16EFF83EE198C4F588362AD79FEB523D4A3AAA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m366E351143695D7AF2EEA9B6507A501F9D3C0A37 (ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mF49189020C8EB17CB70B901DD3C77DFF38E92793 (UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mB72DF15E0A1450D4EA146924A0E51BB848DDC4C4 (UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector3_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m7FED3360534B5757B976D2011DA92B75FBB9A209 (UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m7FED3360534B5757B976D2011DA92B75FBB9A209_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m4565B11F4E074EF5B2186648AF91D3877C64D7C9 (UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector3_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onAxis_mCBBF665AB546060F4E654D9FC0E79FE4ED5D5A49 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_add_onAxis_mCBBF665AB546060F4E654D9FC0E79FE4ED5D5A49_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_0 = NULL;
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_1 = NULL;
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_2 = NULL;
	{
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_2 = V_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779_il2cpp_TypeInfo_var));
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_6 = V_2;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_7 = V_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *>((AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_9 = V_0;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)L_9) == ((RuntimeObject*)(AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector3_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onAxis_m8BCC7D535B497B755AC3CB8EDB997BD6CB92099C (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_remove_onAxis_m8BCC7D535B497B755AC3CB8EDB997BD6CB92099C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_0 = NULL;
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_1 = NULL;
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_2 = NULL;
	{
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_2 = V_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779_il2cpp_TypeInfo_var));
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_6 = V_2;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_7 = V_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *>((AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_9 = V_0;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)L_9) == ((RuntimeObject*)(AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onActiveChange_m852AB08B89861ACB66FE7688DC14A3BDB15C3681 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_add_onActiveChange_m852AB08B89861ACB66FE7688DC14A3BDB15C3681_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_0 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_1 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_2 = NULL;
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_6 = V_2;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_7 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *>((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_9 = V_0;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onActiveChange_m2C0CA1E525F84DE742C9F16077EFA4222F43B1D9 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_remove_onActiveChange_m2C0CA1E525F84DE742C9F16077EFA4222F43B1D9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_0 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_1 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_2 = NULL;
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_6 = V_2;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_7 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *>((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_9 = V_0;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onActiveBindingChange_m562401793E091E0F7334C655471E49B47D379296 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_add_onActiveBindingChange_m562401793E091E0F7334C655471E49B47D379296_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_0 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_1 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_2 = NULL;
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_6 = V_2;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_7 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *>((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_9 = V_0;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_mA2C523EA1DFFAAD99B982082A2CE53D1D061B5D8 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_mA2C523EA1DFFAAD99B982082A2CE53D1D061B5D8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_0 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_1 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_2 = NULL;
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_6 = V_2;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_7 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *>((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_9 = V_0;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onChange(Valve.VR.SteamVR_Action_Vector3_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onChange_mBC0D15F379F129D8B26B395AA54FEA447711BFCB (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_add_onChange_mBC0D15F379F129D8B26B395AA54FEA447711BFCB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_0 = NULL;
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_1 = NULL;
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_2 = NULL;
	{
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_2 = V_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B_il2cpp_TypeInfo_var));
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_6 = V_2;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_7 = V_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *>((ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_9 = V_0;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)L_9) == ((RuntimeObject*)(ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector3_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onChange_m8A33FE53328AAE0025BDAEC35D22FB0F9113CA0A (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_remove_onChange_m8A33FE53328AAE0025BDAEC35D22FB0F9113CA0A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_0 = NULL;
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_1 = NULL;
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_2 = NULL;
	{
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_2 = V_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B_il2cpp_TypeInfo_var));
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_6 = V_2;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_7 = V_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *>((ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_9 = V_0;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)L_9) == ((RuntimeObject*)(ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector3_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onUpdate_mE9FEAEF2D8870D9CCB4E2C7DE9E75061D706A4EE (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_add_onUpdate_mE9FEAEF2D8870D9CCB4E2C7DE9E75061D706A4EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_0 = NULL;
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_1 = NULL;
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_2 = NULL;
	{
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_2 = V_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75_il2cpp_TypeInfo_var));
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_6 = V_2;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_7 = V_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *>((UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_9 = V_0;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)L_9) == ((RuntimeObject*)(UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector3_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onUpdate_m38E4C3064DFE3725CE69DC446A6F10192C1F5B1E (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_remove_onUpdate_m38E4C3064DFE3725CE69DC446A6F10192C1F5B1E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_0 = NULL;
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_1 = NULL;
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_2 = NULL;
	{
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_2 = V_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75_il2cpp_TypeInfo_var));
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_6 = V_2;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_7 = V_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *>((UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_9 = V_0;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)L_9) == ((RuntimeObject*)(UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 axis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CaxisU3Ek__BackingField_17();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_axis(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_axis_mB9D09CB96B3545F03A433FBFF015D9112D4D9ED1 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 axis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CaxisU3Ek__BackingField_17(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastAxis_mB5307EA9C41A76639B02A5FB7C775E14C7E8BE8E (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAxis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastAxisU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastAxis(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastAxis_m28F3924C1B15B865D8AEFAF67281F05757648473 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAxis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastAxisU3Ek__BackingField_18(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 delta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CdeltaU3Ek__BackingField_19();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_delta(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_delta_m264245821BC9CC75826758D185828BE590B6A1B6 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 delta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CdeltaU3Ek__BackingField_19(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastDelta_mBCB31D8D0D5F3B64784F01EAFFC7311F1E07B467 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastDelta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastDeltaU3Ek__BackingField_20();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastDelta(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastDelta_m7BEEB33B48E2BE301807AA1D6A754858D4BB1FFA (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastDelta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastDeltaU3Ek__BackingField_20(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_changed_m76BC8048DF0FA4574BF6625069EB15F28F347CB0 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = __this->get_U3CchangedU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_changed_m150FE39B13D94F13489D0140443D2063128ED77C (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CchangedU3Ek__BackingField_21(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_lastChanged_m8755A3499245A80F9C6BE2893B185938228860D6 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = __this->get_U3ClastChangedU3Ek__BackingField_22();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastChanged_m1FCABAF3B7350F21969C9C96C6EE760F9216E4EF (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastChangedU3Ek__BackingField_22(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Vector3_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Vector3_Source_get_activeOrigin_m5C1F3C08E9423812F3617103DBA83E356B7DBB4E (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// if (active)
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_0)
		{
			goto IL_0014;
		}
	}
	{
		// return actionData.activeOrigin;
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_1 = __this->get_address_of_actionData_24();
		uint64_t L_2 = L_1->get_activeOrigin_1();
		return L_2;
	}

IL_0014:
	{
		// return 0;
		return (((int64_t)((int64_t)0)));
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Vector3_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Vector3_Source_get_lastActiveOrigin_m98E29C6CC78CCC8E2E2CC0F62705B91E0FE99037 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_lastActionData_25();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_active_m2F3F82320FC1779941E61BA68172D65DDC7C59EE (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127(L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}

IL_001f:
	{
		return (bool)0;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_activeBinding_mBB8F921ACBD4D80135E5ACEB3F61597FF4F81214 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_actionData_24();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_lastActive_mEA073F69E53878377BDB430E7BF3D6C513CAECE7 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_23();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastActive_mE1694E6B06D9EB2F54FAEC5D0ED62816C967E489 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_23(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_lastActiveBinding_m5091E4AAD4D58ACC6BC56515F9AC241F0E2D9381 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_lastActionData_25();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_Preinitialize_mEDAE1B25E5953DF9DCBD9A19520B0FFC8D4D3E9E (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_Preinitialize_mEDAE1B25E5953DF9DCBD9A19520B0FFC8D4D3E9E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9(__this, L_0, L_1, /*hidden argument*/NULL);
		// vector3Action = (SteamVR_Action_Vector3)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_vector3Action_26(((SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9_il2cpp_TypeInfo_var)));
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_Initialize_m7319A181C155F024D4645D224B6A4E53C4179E71 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_Initialize_m7319A181C155F024D4645D224B6A4E53C4179E71_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Initialize();
		SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001(__this, /*hidden argument*/NULL);
		// if (actionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var))->get_actionData_size_10();
		if (L_0)
		{
			goto IL_0021;
		}
	}
	{
		// actionData_size = (uint)Marshal.SizeOf(typeof(InputAnalogActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_1 = { reinterpret_cast<intptr_t> (InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_2 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_1, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_3 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var);
		((SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var))->set_actionData_size_10(L_3);
	}

IL_0021:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_UpdateValue_mC05A5EAC0C27785B60C223C83F23A7C57EC48077 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_UpdateValue_mC05A5EAC0C27785B60C223C83F23A7C57EC48077_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	uint64_t V_1 = 0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	{
		// lastActionData = actionData;
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  L_0 = __this->get_actionData_24();
		__this->set_lastActionData_25(L_0);
		// lastActive = active;
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_1);
		// lastAxis = axis;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Vector3_Source_set_lastAxis_m28F3924C1B15B865D8AEFAF67281F05757648473_inline(__this, L_2, /*hidden argument*/NULL);
		// lastDelta = delta;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Vector3_Source_set_lastDelta_m7BEEB33B48E2BE301807AA1D6A754858D4BB1FFA_inline(__this, L_3, /*hidden argument*/NULL);
		// EVRInputError err = OpenVR.Input.GetAnalogActionData(handle, ref actionData, actionData_size, SteamVR_Input_Source.GetHandle(inputSource));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_4 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_5 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_6 = __this->get_address_of_actionData_24();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var);
		uint32_t L_7 = ((SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var))->get_actionData_size_10();
		int32_t L_8 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_9 = SteamVR_Input_Source_GetHandle_m0FAD747327B66172ACE9A9C1CD14FEDF685C7D3B(L_8, /*hidden argument*/NULL);
		NullCheck(L_4);
		int32_t L_10 = CVRInput_GetAnalogActionData_mD66B59E77195699C364DA07926CA524C55708FCD(L_4, L_5, (InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C *)L_6, L_7, L_9, /*hidden argument*/NULL);
		V_0 = L_10;
		// if (err != EVRInputError.None)
		int32_t L_11 = V_0;
		if (!L_11)
		{
			goto IL_00ac;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetAnalogActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		String_t* L_15 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_15);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_15);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_14;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_16;
		RuntimeObject * L_18 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_18);
		String_t* L_19 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_18);
		V_0 = *(int32_t*)UnBox(L_18);
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_19);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_19);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_17;
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_20;
		uint64_t L_22 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_1 = L_22;
		String_t* L_23 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_1), /*hidden argument*/NULL);
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_23);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_23);
		String_t* L_24 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_21, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_24, /*hidden argument*/NULL);
	}

IL_00ac:
	{
		// updateTime = Time.realtimeSinceStartup;
		float L_25 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C_inline(__this, L_25, /*hidden argument*/NULL);
		// axis = new Vector3(actionData.x, actionData.y, actionData.z);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_26 = __this->get_address_of_actionData_24();
		float L_27 = L_26->get_x_2();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_28 = __this->get_address_of_actionData_24();
		float L_29 = L_28->get_y_3();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_30 = __this->get_address_of_actionData_24();
		float L_31 = L_30->get_z_4();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32;
		memset((&L_32), 0, sizeof(L_32));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_32), L_27, L_29, L_31, /*hidden argument*/NULL);
		SteamVR_Action_Vector3_Source_set_axis_mB9D09CB96B3545F03A433FBFF015D9112D4D9ED1_inline(__this, L_32, /*hidden argument*/NULL);
		// delta = new Vector3(actionData.deltaX, actionData.deltaY, actionData.deltaZ);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_33 = __this->get_address_of_actionData_24();
		float L_34 = L_33->get_deltaX_5();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_35 = __this->get_address_of_actionData_24();
		float L_36 = L_35->get_deltaY_6();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_37 = __this->get_address_of_actionData_24();
		float L_38 = L_37->get_deltaZ_7();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39;
		memset((&L_39), 0, sizeof(L_39));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_39), L_34, L_36, L_38, /*hidden argument*/NULL);
		SteamVR_Action_Vector3_Source_set_delta_m264245821BC9CC75826758D185828BE590B6A1B6_inline(__this, L_39, /*hidden argument*/NULL);
		// changed = false;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)0);
		// if (active)
		bool L_40 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_40)
		{
			goto IL_01e8;
		}
	}
	{
		// if (delta.magnitude > changeTolerance)
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_41 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(__this, /*hidden argument*/NULL);
		V_2 = L_41;
		float L_42 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), /*hidden argument*/NULL);
		float L_43 = __this->get_changeTolerance_11();
		if ((!(((float)L_42) > ((float)L_43))))
		{
			goto IL_0180;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// changedTime = Time.realtimeSinceStartup + actionData.fUpdateTime; //fUpdateTime is the time from the time the action was called that the action changed
		float L_44 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_45 = __this->get_address_of_actionData_24();
		float L_46 = L_45->get_fUpdateTime_8();
		SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline(__this, ((float)il2cpp_codegen_add((float)L_44, (float)L_46)), /*hidden argument*/NULL);
		// if (onChange != null)
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_47 = __this->get_onChange_15();
		if (!L_47)
		{
			goto IL_0180;
		}
	}
	{
		// onChange.Invoke(vector3Action, inputSource, axis, delta);
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_48 = __this->get_onChange_15();
		SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * L_49 = __this->get_vector3Action_26();
		int32_t L_50 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_52 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_48);
		ChangeHandler_Invoke_mFC8F10B8AA67939364C81F4F91B268C6A50D80D8(L_48, L_49, L_50, L_51, L_52, /*hidden argument*/NULL);
	}

IL_0180:
	{
		// if (axis != Vector3.zero)
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_53 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_54 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		bool L_55 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_53, L_54, /*hidden argument*/NULL);
		if (!L_55)
		{
			goto IL_01bd;
		}
	}
	{
		// if (onAxis != null)
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_56 = __this->get_onAxis_12();
		if (!L_56)
		{
			goto IL_01bd;
		}
	}
	{
		// onAxis.Invoke(vector3Action, inputSource, axis, delta);
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_57 = __this->get_onAxis_12();
		SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * L_58 = __this->get_vector3Action_26();
		int32_t L_59 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_60 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_61 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_57);
		AxisHandler_Invoke_m7796C560153E4FEB49C1200E64AC426FE450B4D5(L_57, L_58, L_59, L_60, L_61, /*hidden argument*/NULL);
	}

IL_01bd:
	{
		// if (onUpdate != null)
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_62 = __this->get_onUpdate_16();
		if (!L_62)
		{
			goto IL_01e8;
		}
	}
	{
		// onUpdate.Invoke(vector3Action, inputSource, axis, delta);
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_63 = __this->get_onUpdate_16();
		SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * L_64 = __this->get_vector3Action_26();
		int32_t L_65 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_66 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_67 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_63);
		UpdateHandler_Invoke_mB72DF15E0A1450D4EA146924A0E51BB848DDC4C4(L_63, L_64, L_65, L_66, L_67, /*hidden argument*/NULL);
	}

IL_01e8:
	{
		// if (onActiveBindingChange != null && lastActiveBinding != activeBinding)
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_68 = __this->get_onActiveBindingChange_14();
		if (!L_68)
		{
			goto IL_021b;
		}
	}
	{
		bool L_69 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		bool L_70 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if ((((int32_t)L_69) == ((int32_t)L_70)))
		{
			goto IL_021b;
		}
	}
	{
		// onActiveBindingChange.Invoke(vector3Action, inputSource, activeBinding);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_71 = __this->get_onActiveBindingChange_14();
		SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * L_72 = __this->get_vector3Action_26();
		int32_t L_73 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_74 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_71);
		ActiveChangeHandler_Invoke_mAB21A23BC632397BB13F970F87C8C8C33A32D42D(L_71, L_72, L_73, L_74, /*hidden argument*/NULL);
	}

IL_021b:
	{
		// if (onActiveChange != null && lastActive != active)
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_75 = __this->get_onActiveChange_13();
		if (!L_75)
		{
			goto IL_024e;
		}
	}
	{
		bool L_76 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		bool L_77 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if ((((int32_t)L_76) == ((int32_t)L_77)))
		{
			goto IL_024e;
		}
	}
	{
		// onActiveChange.Invoke(vector3Action, inputSource, activeBinding);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_78 = __this->get_onActiveChange_13();
		SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * L_79 = __this->get_vector3Action_26();
		int32_t L_80 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_81 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_78);
		ActiveChangeHandler_Invoke_mAB21A23BC632397BB13F970F87C8C8C33A32D42D(L_78, L_79, L_80, L_81, /*hidden argument*/NULL);
	}

IL_024e:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source__ctor_mB7060D57C96C83851FDB1443DDD44702AC1C5128 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source__ctor_mB7060D57C96C83851FDB1443DDD44702AC1C5128_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float changeTolerance = Mathf.Epsilon;
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_0 = ((Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields*)il2cpp_codegen_static_fields_for(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var))->get_Epsilon_0();
		__this->set_changeTolerance_11(L_0);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mE238DF9510354C14124DF4D1973356C078DAE3BB(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source__cctor_m0A5CD5C1FB9B9547C75CFF67AFCCF49E4BC3E018 (const RuntimeMethod* method)
{
	{
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_Map__ctor_m5EBEA11941471071F281381DC20760FE6FAE2319 (SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_Map__ctor_m5EBEA11941471071F281381DC20760FE6FAE2319_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_In_Source_Map_1__ctor_mF16C47EF3F671810A76B7E558CB85E5E00A66F32(__this, /*hidden argument*/SteamVR_Action_In_Source_Map_1__ctor_mF16C47EF3F671810A76B7E558CB85E5E00A66F32_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration::add_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_add_onActiveChange_m2E6D38D5E932FF3B0865BE9814B7396AF5C4FB6A (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_add_onActiveChange_m2E6D38D5E932FF3B0865BE9814B7396AF5C4FB6A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_add_onActiveChange_m9BC2B487CBED1D7127ED45293CA941D72E3E12B2(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::remove_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_remove_onActiveChange_mC6C6C7508F078D2754A84E840A75046849218F82 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_remove_onActiveChange_mC6C6C7508F078D2754A84E840A75046849218F82_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_remove_onActiveChange_mC23DE0386F09EAF989BC23BF469B87675CC633F2(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_add_onActiveBindingChange_m2D7EAB87ED78B5DFBD38B113D94C4388581D1571 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_add_onActiveBindingChange_m2D7EAB87ED78B5DFBD38B113D94C4388581D1571_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m5456DA7FADEDDED32977C854D76BB7765EEF72C1(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_remove_onActiveBindingChange_m5487A4A54D05F965C7FDAFB3C4F4D27FE62E7347 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_remove_onActiveBindingChange_m5487A4A54D05F965C7FDAFB3C4F4D27FE62E7347_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m26A0079B8CE2B2725D05363380786A0FBADBA58B(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::add_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_add_onExecute_m58222D417BD7F4875C9A891E30D242191798239F (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_add_onExecute_m58222D417BD7F4875C9A891E30D242191798239F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_add_onExecute_m3A0C48B0C709153E82F1C7F964229831D1A5A5AD(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::remove_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_remove_onExecute_m5D86FF4294E63494B996243F2B5A8D04CA7E2689 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_remove_onExecute_m5D86FF4294E63494B996243F2B5A8D04CA7E2689_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_remove_onExecute_mFD0DF79D91B2517D1BE827AF43192488BF95BB97(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration__ctor_mBF0D99569A2B823196BD1883F3F5917732F114C9 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration__ctor_mBF0D99569A2B823196BD1883F3F5917732F114C9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Vibration() { }
		SteamVR_Action_Out_2__ctor_m0B60E31B563031DBD26BE2EA86C691DF168BA8A7(__this, /*hidden argument*/SteamVR_Action_Out_2__ctor_m0B60E31B563031DBD26BE2EA86C691DF168BA8A7_RuntimeMethod_var);
		// public SteamVR_Action_Vibration() { }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::Execute(System.Single,System.Single,System.Single,System.Single,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Execute_m124FEE875BDC0851E066D1D3841958F9A692A864 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, float ___secondsFromNow0, float ___durationSeconds1, float ___frequency2, float ___amplitude3, int32_t ___inputSource4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Execute_m124FEE875BDC0851E066D1D3841958F9A692A864_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].Execute(secondsFromNow, durationSeconds, frequency, amplitude);
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource4;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		float L_3 = ___secondsFromNow0;
		float L_4 = ___durationSeconds1;
		float L_5 = ___frequency2;
		float L_6 = ___amplitude3;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_Execute_m2E924325EBC74765BD87DB04F35D3B2889653FFD(L_2, L_3, L_4, L_5, L_6, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_AddOnActiveChangeListener_mBD5ECF777CCF2FCEE7B818090A68B74A58B2672D (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_AddOnActiveChangeListener_mBD5ECF777CCF2FCEE7B818090A68B74A58B2672D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange += functionToCall;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_add_onActiveChange_m9BC2B487CBED1D7127ED45293CA941D72E3E12B2(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m7D383A3DE81B6637B0DB25A85752027DA666B6EE (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m7D383A3DE81B6637B0DB25A85752027DA666B6EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_remove_onActiveChange_mC23DE0386F09EAF989BC23BF469B87675CC633F2(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mB4C0C45F69D5505E69670C36A48C4B39C31BF55B (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mB4C0C45F69D5505E69670C36A48C4B39C31BF55B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m5456DA7FADEDDED32977C854D76BB7765EEF72C1(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_mE3F14AF76DE9B01FE233CECD9F856B1B7E9091EF (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_mE3F14AF76DE9B01FE233CECD9F856B1B7E9091EF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m26A0079B8CE2B2725D05363380786A0FBADBA58B(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::AddOnExecuteListener(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_AddOnExecuteListener_m72382B9A93A005ED5F3142812C5DDB11282F05B0 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_AddOnExecuteListener_m72382B9A93A005ED5F3142812C5DDB11282F05B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onExecute += functionToCall;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_add_onExecute_m3A0C48B0C709153E82F1C7F964229831D1A5A5AD(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::RemoveOnExecuteListener(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_RemoveOnExecuteListener_m0054B983D2F48C10097BB4043C934ED9D439710E (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_RemoveOnExecuteListener_m0054B983D2F48C10097BB4043C934ED9D439710E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onExecute -= functionToStopCalling;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_remove_onExecute_mFD0DF79D91B2517D1BE827AF43192488BF95BB97(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Vibration::GetTimeLastChanged(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_GetTimeLastChanged_mDE93271994C78C69731667D1192C723327195CCF (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_GetTimeLastChanged_mDE93271994C78C69731667D1192C723327195CCF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].timeLastExecuted;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Vibration_Source_get_timeLastExecuted_m0813BD23177FE42617BF97C01D592865C6464465_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m3AF06852E0B3FFCBA44D74E1D51983F6047B6956 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m9E9E79B50056DDF9BBD300D7B3A81A99AF05F513 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m9E9E79B50056DDF9BBD300D7B3A81A99AF05F513_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_m321165E7CC9DEF1DA851D90AED76EA3A1530D817(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_m321165E7CC9DEF1DA851D90AED76EA3A1530D817_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration::IsUpdating(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_IsUpdating_mCEA704F571F60B10535CA78C75A48EFE870371F2 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	{
		// return sourceMap.IsUpdating(inputSource);
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		bool L_2 = SteamVR_Action_Vibration_Source_Map_IsUpdating_m8D4BDB964FBB68E827D661BA701EDDF9E5949FF6(L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m2A101F22AB386D399271356A436347B7F661FDA2 (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m661E244D45AD96702875E3B94E9CEA0F915C83F7 (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_mE80886E385DA60F4847DEF757AD6B6BD46D8641C (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_mE80886E385DA60F4847DEF757AD6B6BD46D8641C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mCB6F7631981110AEDD8C5F3CC633A6515055029E (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler__ctor_mE515F119E1018E9801929860A328E26157DB96A0 (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::Invoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler_Invoke_mEE7B3BA7814F683DFFA60635413CD85B7EB3BBBC (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, float ___secondsFromNow2, float ___durationSeconds3, float ___frequency4, float ___amplitude5, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
			}
		}
		else if (___parameterCount != 6)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker5< int32_t, float, float, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						GenericVirtActionInvoker5< int32_t, float, float, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker5< int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						VirtActionInvoker5< int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						GenericVirtActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						VirtActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ExecuteHandler_BeginInvoke_mBA1F7A0BE921B3BF9C4DE45FD918225F54F6E5E1 (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, float ___secondsFromNow2, float ___durationSeconds3, float ___frequency4, float ___amplitude5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ExecuteHandler_BeginInvoke_mBA1F7A0BE921B3BF9C4DE45FD918225F54F6E5E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___secondsFromNow2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___durationSeconds3);
	__d_args[4] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___frequency4);
	__d_args[5] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___amplitude5);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler_EndInvoke_m8E744764F7105A2E163D814C0D42282B282D026B (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveChange_m9BC2B487CBED1D7127ED45293CA941D72E3E12B2 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_add_onActiveChange_m9BC2B487CBED1D7127ED45293CA941D72E3E12B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveChange_3();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveChange_3();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveChange_mC23DE0386F09EAF989BC23BF469B87675CC633F2 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_remove_onActiveChange_mC23DE0386F09EAF989BC23BF469B87675CC633F2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveChange_3();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveChange_3();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m5456DA7FADEDDED32977C854D76BB7765EEF72C1 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m5456DA7FADEDDED32977C854D76BB7765EEF72C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveBindingChange_4();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveBindingChange_4();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m26A0079B8CE2B2725D05363380786A0FBADBA58B (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m26A0079B8CE2B2725D05363380786A0FBADBA58B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveBindingChange_4();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveBindingChange_4();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onExecute_m3A0C48B0C709153E82F1C7F964229831D1A5A5AD (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_add_onExecute_m3A0C48B0C709153E82F1C7F964229831D1A5A5AD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_0 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_1 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_2 = NULL;
	{
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_0 = __this->get_onExecute_5();
		V_0 = L_0;
	}

IL_0007:
	{
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_1 = V_0;
		V_1 = L_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)CastclassSealed((RuntimeObject*)L_4, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865_il2cpp_TypeInfo_var));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 ** L_5 = __this->get_address_of_onExecute_5();
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_6 = V_2;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_7 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_8 = InterlockedCompareExchangeImpl<ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *>((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 **)L_5, L_6, L_7);
		V_0 = L_8;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_9 = V_0;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_9) == ((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onExecute_mFD0DF79D91B2517D1BE827AF43192488BF95BB97 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_remove_onExecute_mFD0DF79D91B2517D1BE827AF43192488BF95BB97_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_0 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_1 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_2 = NULL;
	{
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_0 = __this->get_onExecute_5();
		V_0 = L_0;
	}

IL_0007:
	{
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_1 = V_0;
		V_1 = L_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)CastclassSealed((RuntimeObject*)L_4, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865_il2cpp_TypeInfo_var));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 ** L_5 = __this->get_address_of_onExecute_5();
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_6 = V_2;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_7 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_8 = InterlockedCompareExchangeImpl<ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *>((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 **)L_5, L_6, L_7);
		V_0 = L_8;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_9 = V_0;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_9) == ((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_active_mE5FD41D7F09EAD9543BAB2A8E3BC587E322CE2C3 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public override bool active { get { return activeBinding && setActive; } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if (!L_0)
		{
			goto IL_000f;
		}
	}
	{
		bool L_1 = SteamVR_Action_Source_get_setActive_mB8D4F2911446984A8CE574F8A13206FCD3AD9125(__this, /*hidden argument*/NULL);
		return L_1;
	}

IL_000f:
	{
		return (bool)0;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_activeBinding_m9459957EB9360D463C9F0979475D5C27E4E51B28 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public override bool activeBinding { get { return true; } }
		return (bool)1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_lastActive_m834E7F60FA8D4F5C0AE2F6CFAAC627F23DDCE3B4 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_6();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_lastActive_mCF2859CFB188EF08E4F6755767081B26286E1AE5 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_6(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_lastActiveBinding_mFE5C9ADE1E3EB0F7FED257A72A3A85F047DC2ADE (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActiveBinding { get { return true; } }
		return (bool)1;
	}
}
// System.Single Valve.VR.SteamVR_Action_Vibration_Source::get_timeLastExecuted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_Source_get_timeLastExecuted_m0813BD23177FE42617BF97C01D592865C6464465 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public float timeLastExecuted { get; protected set; }
		float L_0 = __this->get_U3CtimeLastExecutedU3Ek__BackingField_7();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::set_timeLastExecuted(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_timeLastExecuted_m1C13828DAEAC810794E69F6D684765E023131834 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float timeLastExecuted { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CtimeLastExecutedU3Ek__BackingField_7(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Initialize_m8A677B1512EE3F9842580E5F09FCB7ED32CAB9C5 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// base.Initialize();
		SteamVR_Action_Source_Initialize_m2F3A973A4338854E06EA51D28CA96DAB1E5D29C9(__this, /*hidden argument*/NULL);
		// lastActive = true;
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, (bool)1);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Preinitialize_m9284EBDB6DD79E6ED42B3A229886DDD7D5218CAB (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Preinitialize_m9284EBDB6DD79E6ED42B3A229886DDD7D5218CAB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9(__this, L_0, L_1, /*hidden argument*/NULL);
		// vibrationAction = (SteamVR_Action_Vibration)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_vibrationAction_8(((SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB_il2cpp_TypeInfo_var)));
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Execute(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Execute_m2E924325EBC74765BD87DB04F35D3B2889653FFD (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___secondsFromNow0, float ___durationSeconds1, float ___frequency2, float ___amplitude3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Execute_m2E924325EBC74765BD87DB04F35D3B2889653FFD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	uint64_t V_1 = 0;
	{
		// if (SteamVR_Input.isStartupFrame)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		bool L_0 = SteamVR_Input_get_isStartupFrame_m58C4100EE4FBE44FA46B00ED8FD6B413355084EC(/*hidden argument*/NULL);
		if (!L_0)
		{
			goto IL_0008;
		}
	}
	{
		// return;
		return;
	}

IL_0008:
	{
		// timeLastExecuted = Time.realtimeSinceStartup;
		float L_1 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_Vibration_Source_set_timeLastExecuted_m1C13828DAEAC810794E69F6D684765E023131834_inline(__this, L_1, /*hidden argument*/NULL);
		// EVRInputError err = OpenVR.Input.TriggerHapticVibrationAction(handle, secondsFromNow, durationSeconds, frequency, amplitude, inputSourceHandle);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_2 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_3 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		float L_4 = ___secondsFromNow0;
		float L_5 = ___durationSeconds1;
		float L_6 = ___frequency2;
		float L_7 = ___amplitude3;
		uint64_t L_8 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		NullCheck(L_2);
		int32_t L_9 = CVRInput_TriggerHapticVibrationAction_m22B166A7C1A1D939E04BA46F4F0289457808DF84(L_2, L_3, L_4, L_5, L_6, L_7, L_8, /*hidden argument*/NULL);
		V_0 = L_9;
		// if (err != EVRInputError.None)
		int32_t L_10 = V_0;
		if (!L_10)
		{
			goto IL_0084;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> TriggerHapticVibrationAction (" + fullPath + ") error: " + err.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteralFFB76599BB18A20E6DA029D1F971C11E0E56D630);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralFFB76599BB18A20E6DA029D1F971C11E0E56D630);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		String_t* L_14 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_14);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_14);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_13;
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_15;
		RuntimeObject * L_17 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_17);
		String_t* L_18 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_17);
		V_0 = *(int32_t*)UnBox(L_17);
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_18);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_18);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_16;
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_19;
		uint64_t L_21 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_1 = L_21;
		String_t* L_22 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_1), /*hidden argument*/NULL);
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, L_22);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_22);
		String_t* L_23 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_20, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_23, /*hidden argument*/NULL);
	}

IL_0084:
	{
		// if (onExecute != null)
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_24 = __this->get_onExecute_5();
		if (!L_24)
		{
			goto IL_00a8;
		}
	}
	{
		// onExecute.Invoke(vibrationAction, inputSource, secondsFromNow, durationSeconds, frequency, amplitude);
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_25 = __this->get_onExecute_5();
		SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * L_26 = __this->get_vibrationAction_8();
		int32_t L_27 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		float L_28 = ___secondsFromNow0;
		float L_29 = ___durationSeconds1;
		float L_30 = ___frequency2;
		float L_31 = ___amplitude3;
		NullCheck(L_25);
		ExecuteHandler_Invoke_mEE7B3BA7814F683DFFA60635413CD85B7EB3BBBC(L_25, L_26, L_27, L_28, L_29, L_30, L_31, /*hidden argument*/NULL);
	}

IL_00a8:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source__ctor_mD4E7F227CF44F93B3572BECCA1CC3C8E833FEAC1 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		SteamVR_Action_Out_Source__ctor_mD40E6B0CF3B2080FC36785E990954B083BF07387(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source_Map::IsUpdating(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_Map_IsUpdating_m8D4BDB964FBB68E827D661BA701EDDF9E5949FF6 (SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// int sourceIndex = (int)inputSource;
		int32_t L_0 = ___inputSource0;
		V_0 = L_0;
		// return sources[sourceIndex].timeLastExecuted != 0;
		SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* L_1 = ((SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 *)__this)->get_sources_7();
		int32_t L_2 = V_0;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		NullCheck(L_4);
		float L_5 = SteamVR_Action_Vibration_Source_get_timeLastExecuted_m0813BD23177FE42617BF97C01D592865C6464465_inline(L_4, /*hidden argument*/NULL);
		return (bool)((((int32_t)((((float)L_5) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Map__ctor_m56A7CD682FCF48426A6C7067478375C14AA15CD6 (SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Map__ctor_m56A7CD682FCF48426A6C7067478375C14AA15CD6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_Source_Map_1__ctor_m6C1A695791C6F45BCFC9ADC7DCB97B87B3EC146A(__this, /*hidden argument*/SteamVR_Action_Source_Map_1__ctor_m6C1A695791C6F45BCFC9ADC7DCB97B87B3EC146A_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_ActivateActionSetOnLoad::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActivateActionSetOnLoad_Start_mF3C0B8AF6C4C7321DE822034717D801FCA83221B (SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7 * __this, const RuntimeMethod* method)
{
	{
		// if (actionSet != null && activateOnStart)
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = __this->get_actionSet_4();
		bool L_1 = SteamVR_ActionSet_op_Inequality_m721A47D369C12591F695554F548A4AED339DCD98(L_0, (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_002e;
		}
	}
	{
		bool L_2 = __this->get_activateOnStart_7();
		if (!L_2)
		{
			goto IL_002e;
		}
	}
	{
		// actionSet.Activate(forSources, 0, disableAllOtherActionSets);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = __this->get_actionSet_4();
		int32_t L_4 = __this->get_forSources_5();
		bool L_5 = __this->get_disableAllOtherActionSets_6();
		NullCheck(L_3);
		SteamVR_ActionSet_Activate_m9E7B583FB5B8625931642D12873FD1A9AD38C3D8(L_3, L_4, 0, L_5, /*hidden argument*/NULL);
	}

IL_002e:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActivateActionSetOnLoad::OnDestroy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActivateActionSetOnLoad_OnDestroy_mAD92689D8484C543CE0305DCA6D6EE4A43A41AA9 (SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7 * __this, const RuntimeMethod* method)
{
	{
		// if (actionSet != null && deactivateOnDestroy)
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = __this->get_actionSet_4();
		bool L_1 = SteamVR_ActionSet_op_Inequality_m721A47D369C12591F695554F548A4AED339DCD98(L_0, (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0027;
		}
	}
	{
		bool L_2 = __this->get_deactivateOnDestroy_8();
		if (!L_2)
		{
			goto IL_0027;
		}
	}
	{
		// actionSet.Deactivate(forSources);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = __this->get_actionSet_4();
		int32_t L_4 = __this->get_forSources_5();
		NullCheck(L_3);
		SteamVR_ActionSet_Deactivate_m0CADB6A6829335596DD5C60C7B5B702341BCE79F(L_3, L_4, /*hidden argument*/NULL);
	}

IL_0027:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActivateActionSetOnLoad::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActivateActionSetOnLoad__ctor_m33BF729AA592A742A0D42B360D6A526F507CDD48 (SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActivateActionSetOnLoad__ctor_m33BF729AA592A742A0D42B360D6A526F507CDD48_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_ActionSet actionSet = SteamVR_Input.GetActionSet("default");
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = SteamVR_Input_GetActionSet_m3D32BFAF8D4C4B88664C21668840E4A34A53F47B(_stringLiteral7505D64A54E061B7ACD54CCD58B49DC43500B635, (bool)0, (bool)0, /*hidden argument*/NULL);
		__this->set_actionSet_4(L_0);
		// public bool activateOnStart = true;
		__this->set_activateOnStart_7((bool)1);
		// public bool deactivateOnDestroy = true;
		__this->set_deactivateOnDestroy_8((bool)1);
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Valve.VR.SteamVR_Behaviour Valve.VR.SteamVR_Behaviour::get_instance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (_instance == null)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_0 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0013;
		}
	}
	{
		// Initialize(false);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_Initialize_m528617B3FCC69EFDCE02D8F4FDC31A912864393B((bool)0, /*hidden argument*/NULL);
	}

IL_0013:
	{
		// return _instance;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_2 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::Initialize(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Initialize_m528617B3FCC69EFDCE02D8F4FDC31A912864393B (bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Initialize_m528617B3FCC69EFDCE02D8F4FDC31A912864393B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * V_1 = NULL;
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * V_2 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_3 = NULL;
	{
		// if (_instance == null && initializing == false)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_0 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0115;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		bool L_2 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get_initializing_11();
		if (L_2)
		{
			goto IL_0115;
		}
	}
	{
		// initializing = true;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_initializing_11((bool)1);
		// GameObject steamVRObject = null;
		V_0 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL;
		// if (forceUnityVRToOpenVR)
		bool L_3 = ___forceUnityVRToOpenVR0;
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		// forcingInitialization = true;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)1);
	}

IL_002b:
	{
		// SteamVR_Render renderInstance = GameObject.FindObjectOfType<SteamVR_Render>();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_4 = Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1(/*hidden argument*/Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1_RuntimeMethod_var);
		V_1 = L_4;
		// if (renderInstance != null)
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_5 = V_1;
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_6)
		{
			goto IL_0041;
		}
	}
	{
		// steamVRObject = renderInstance.gameObject;
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_7 = V_1;
		NullCheck(L_7);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_7, /*hidden argument*/NULL);
		V_0 = L_8;
	}

IL_0041:
	{
		// SteamVR_Behaviour behaviourInstance = GameObject.FindObjectOfType<SteamVR_Behaviour>();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_9 = Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034(/*hidden argument*/Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034_RuntimeMethod_var);
		V_2 = L_9;
		// if (behaviourInstance != null)
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_10 = V_2;
		bool L_11 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_11)
		{
			goto IL_0057;
		}
	}
	{
		// steamVRObject = behaviourInstance.gameObject;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_12 = V_2;
		NullCheck(L_12);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_12, /*hidden argument*/NULL);
		V_0 = L_13;
	}

IL_0057:
	{
		// if (steamVRObject == null)
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_15 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_14, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_15)
		{
			goto IL_0088;
		}
	}
	{
		// GameObject objectInstance = new GameObject("[SteamVR]");
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_16 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)il2cpp_codegen_object_new(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var);
		GameObject__ctor_mBB454E679AD9CF0B84D3609A01E6A9753ACF4686(L_16, _stringLiteral007325E7D8DEDACC6ED34288122B4689CB38DC84, /*hidden argument*/NULL);
		V_3 = L_16;
		// _instance = objectInstance.AddComponent<SteamVR_Behaviour>();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_17 = V_3;
		NullCheck(L_17);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_18 = GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4(L_17, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4_RuntimeMethod_var);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set__instance_6(L_18);
		// _instance.steamvr_render = objectInstance.AddComponent<SteamVR_Render>();
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_19 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = V_3;
		NullCheck(L_20);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_21 = GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801(L_20, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801_RuntimeMethod_var);
		NullCheck(L_19);
		L_19->set_steamvr_render_9(L_21);
		// }
		goto IL_00dd;
	}

IL_0088:
	{
		// behaviourInstance = steamVRObject.GetComponent<SteamVR_Behaviour>();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_22 = V_0;
		NullCheck(L_22);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_23 = GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943(L_22, /*hidden argument*/GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943_RuntimeMethod_var);
		V_2 = L_23;
		// if (behaviourInstance == null)
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_24 = V_2;
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_25 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_24, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_25)
		{
			goto IL_009f;
		}
	}
	{
		// behaviourInstance = steamVRObject.AddComponent<SteamVR_Behaviour>();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_26 = V_0;
		NullCheck(L_26);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_27 = GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4(L_26, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4_RuntimeMethod_var);
		V_2 = L_27;
	}

IL_009f:
	{
		// if (renderInstance != null)
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_28 = V_1;
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_29 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_28, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_29)
		{
			goto IL_00b1;
		}
	}
	{
		// behaviourInstance.steamvr_render = renderInstance;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_30 = V_2;
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_31 = V_1;
		NullCheck(L_30);
		L_30->set_steamvr_render_9(L_31);
		goto IL_00d7;
	}

IL_00b1:
	{
		// behaviourInstance.steamvr_render = steamVRObject.GetComponent<SteamVR_Render>();
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_32 = V_2;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_33 = V_0;
		NullCheck(L_33);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_34 = GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D(L_33, /*hidden argument*/GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D_RuntimeMethod_var);
		NullCheck(L_32);
		L_32->set_steamvr_render_9(L_34);
		// if (behaviourInstance.steamvr_render == null)
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_35 = V_2;
		NullCheck(L_35);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_36 = L_35->get_steamvr_render_9();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_37 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_36, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_37)
		{
			goto IL_00d7;
		}
	}
	{
		// behaviourInstance.steamvr_render = steamVRObject.AddComponent<SteamVR_Render>();
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_38 = V_2;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_39 = V_0;
		NullCheck(L_39);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_40 = GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801(L_39, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801_RuntimeMethod_var);
		NullCheck(L_38);
		L_38->set_steamvr_render_9(L_40);
	}

IL_00d7:
	{
		// _instance = behaviourInstance;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_41 = V_2;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set__instance_6(L_41);
	}

IL_00dd:
	{
		// if (_instance != null && _instance.doNotDestroy)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_42 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_43 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_42, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_43)
		{
			goto IL_010f;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_44 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		NullCheck(L_44);
		bool L_45 = L_44->get_doNotDestroy_8();
		if (!L_45)
		{
			goto IL_010f;
		}
	}
	{
		// GameObject.DontDestroyOnLoad(_instance.transform.root.gameObject);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_46 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		NullCheck(L_46);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_47 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_46, /*hidden argument*/NULL);
		NullCheck(L_47);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_48 = Transform_get_root_m101A8B5C2CC6D868B6B66EEDBD5336FC1EB5DDD6(L_47, /*hidden argument*/NULL);
		NullCheck(L_48);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_49 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_48, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_DontDestroyOnLoad_m4DC90770AD6084E4B1B8489C6B41205DC020C207(L_49, /*hidden argument*/NULL);
	}

IL_010f:
	{
		// initializing = false;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_initializing_11((bool)0);
	}

IL_0115:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Awake_m788AC835EF2A4FBF45872FDD7CFBD40EFC8DA215 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Awake_m788AC835EF2A4FBF45872FDD7CFBD40EFC8DA215_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// isPlaying = true;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_isPlaying_10((bool)1);
		// if (initializeSteamVROnAwake && forcingInitialization == false)
		bool L_0 = __this->get_initializeSteamVROnAwake_7();
		if (!L_0)
		{
			goto IL_001c;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		bool L_1 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get_forcingInitialization_5();
		if (L_1)
		{
			goto IL_001c;
		}
	}
	{
		// InitializeSteamVR();
		SteamVR_Behaviour_InitializeSteamVR_mE61CA86A8346EE3801DD80B936BB0ECFB6685B12(__this, (bool)0, /*hidden argument*/NULL);
	}

IL_001c:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::InitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_InitializeSteamVR_mE61CA86A8346EE3801DD80B936BB0ECFB6685B12 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_InitializeSteamVR_mE61CA86A8346EE3801DD80B936BB0ECFB6685B12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (forceUnityVRToOpenVR)
		bool L_0 = ___forceUnityVRToOpenVR0;
		if (!L_0)
		{
			goto IL_0049;
		}
	}
	{
		// forcingInitialization = true;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)1);
		// if (initializeCoroutine != null)
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_1 = __this->get_initializeCoroutine_12();
		if (!L_1)
		{
			goto IL_001d;
		}
	}
	{
		// StopCoroutine(initializeCoroutine);
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_2 = __this->get_initializeCoroutine_12();
		MonoBehaviour_StopCoroutine_mC465FFA3C386BA22384F7AFA5495FF2286510562(__this, L_2, /*hidden argument*/NULL);
	}

IL_001d:
	{
		// if (XRSettings.loadedDeviceName == openVRDeviceName)
		String_t* L_3 = XRSettings_get_loadedDeviceName_m952D46346306FD9477B13992E5797A85CCD3C98C(/*hidden argument*/NULL);
		bool L_4 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_3, _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2, /*hidden argument*/NULL);
		if (!L_4)
		{
			goto IL_0035;
		}
	}
	{
		// EnableOpenVR();
		SteamVR_Behaviour_EnableOpenVR_m7D05792DA3B94D1C9553D65294F10BCD68AEFEDA(__this, /*hidden argument*/NULL);
		return;
	}

IL_0035:
	{
		// initializeCoroutine = StartCoroutine(DoInitializeSteamVR(forceUnityVRToOpenVR));
		bool L_5 = ___forceUnityVRToOpenVR0;
		RuntimeObject* L_6 = SteamVR_Behaviour_DoInitializeSteamVR_m6381B3BE347375855EB5B57333EA5DBB73227676(__this, L_5, /*hidden argument*/NULL);
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_7 = MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7(__this, L_6, /*hidden argument*/NULL);
		__this->set_initializeCoroutine_12(L_7);
		// }
		return;
	}

IL_0049:
	{
		// SteamVR.Initialize(false);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_Initialize_mACC3A05E160D196A04EF693265E13E9930A1FC02((bool)0, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Collections.IEnumerator Valve.VR.SteamVR_Behaviour::DoInitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SteamVR_Behaviour_DoInitializeSteamVR_m6381B3BE347375855EB5B57333EA5DBB73227676 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_DoInitializeSteamVR_m6381B3BE347375855EB5B57333EA5DBB73227676_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * L_0 = (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 *)il2cpp_codegen_object_new(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7_il2cpp_TypeInfo_var);
		U3CDoInitializeSteamVRU3Ed__15__ctor_m476D34AD9FAB52D415A5F7BE548FA68F1C5D2A4F(L_0, 0, /*hidden argument*/NULL);
		U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * L_1 = L_0;
		NullCheck(L_1);
		L_1->set_U3CU3E4__this_2(__this);
		return L_1;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::XRDevice_deviceLoaded(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_XRDevice_deviceLoaded_mBAD5428CEB4E87DECF5870A84227DF9A3A760270 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, String_t* ___deviceName0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_XRDevice_deviceLoaded_mBAD5428CEB4E87DECF5870A84227DF9A3A760270_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (deviceName == openVRDeviceName)
		String_t* L_0 = ___deviceName0;
		bool L_1 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_0, _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		// loadedOpenVRDeviceSuccess = true;
		__this->set_loadedOpenVRDeviceSuccess_13((bool)1);
		// }
		return;
	}

IL_0015:
	{
		// Debug.LogError("<b>[SteamVR]</b> Tried to async load: " + openVRDeviceName + ". Loaded: " + deviceName, this);
		String_t* L_2 = ___deviceName0;
		String_t* L_3 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteralC45DD4E1886367F0BF6631C4DA53924377B2E7A1, L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(L_3, __this, /*hidden argument*/NULL);
		// loadedOpenVRDeviceSuccess = true; //try anyway
		__this->set_loadedOpenVRDeviceSuccess_13((bool)1);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::EnableOpenVR()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_EnableOpenVR_m7D05792DA3B94D1C9553D65294F10BCD68AEFEDA (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_EnableOpenVR_m7D05792DA3B94D1C9553D65294F10BCD68AEFEDA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// XRSettings.enabled = true;
		XRSettings_set_enabled_m9180DFDC2B9EF502DEB9503C98A0D53B4B9F8E1B((bool)1, /*hidden argument*/NULL);
		// SteamVR.Initialize(false);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_Initialize_mACC3A05E160D196A04EF693265E13E9930A1FC02((bool)0, /*hidden argument*/NULL);
		// initializeCoroutine = null;
		__this->set_initializeCoroutine_12((Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)NULL);
		// forcingInitialization = false;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)0);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnEnable_mEB156B579218AD09A569A18AEBAD732F66464742 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_OnEnable_mEB156B579218AD09A569A18AEBAD732F66464742_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Application.onBeforeRender += OnBeforeRender;
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_0 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_0, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnBeforeRender_m0818B254035656D9F104ECC0A560610A157839A6_RuntimeMethod_var), /*hidden argument*/NULL);
		Application_add_onBeforeRender_mC00950B8FC35DB9048121D43BE8F69D55BCB4723(L_0, /*hidden argument*/NULL);
		// SteamVR_Events.System(EVREventType.VREvent_Quit).Listen(OnQuit);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Events_tEF9EC471E187D3A163781044AA4F8F0C392EB2B8_il2cpp_TypeInfo_var);
		Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * L_1 = SteamVR_Events_System_mA00E549D3CEB4BB6C027399D29DBEC0DF774891B(((int32_t)700), /*hidden argument*/NULL);
		UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * L_2 = (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *)il2cpp_codegen_object_new(UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m6EB8530A97D512C3B138A2E6D2E3AC341BF52772(L_2, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnQuit_m679A2B157C312FCC9954E648D63C0CCFB21AE737_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m6EB8530A97D512C3B138A2E6D2E3AC341BF52772_RuntimeMethod_var);
		NullCheck(L_1);
		Event_1_Listen_m8A8805251599A69638ED15A0D6BE0714AA0A69EF(L_1, L_2, /*hidden argument*/Event_1_Listen_m8A8805251599A69638ED15A0D6BE0714AA0A69EF_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnDisable_mE37FA968D4A18DD7E0C8B9C53A3D2F814FABF852 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_OnDisable_mE37FA968D4A18DD7E0C8B9C53A3D2F814FABF852_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Application.onBeforeRender -= OnBeforeRender;
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_0 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_0, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnBeforeRender_m0818B254035656D9F104ECC0A560610A157839A6_RuntimeMethod_var), /*hidden argument*/NULL);
		Application_remove_onBeforeRender_m4601D9804BC86F64FB071348EC1CF448C55CBA3B(L_0, /*hidden argument*/NULL);
		// SteamVR_Events.System(EVREventType.VREvent_Quit).Remove(OnQuit);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Events_tEF9EC471E187D3A163781044AA4F8F0C392EB2B8_il2cpp_TypeInfo_var);
		Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * L_1 = SteamVR_Events_System_mA00E549D3CEB4BB6C027399D29DBEC0DF774891B(((int32_t)700), /*hidden argument*/NULL);
		UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * L_2 = (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *)il2cpp_codegen_object_new(UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m6EB8530A97D512C3B138A2E6D2E3AC341BF52772(L_2, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnQuit_m679A2B157C312FCC9954E648D63C0CCFB21AE737_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m6EB8530A97D512C3B138A2E6D2E3AC341BF52772_RuntimeMethod_var);
		NullCheck(L_1);
		Event_1_Remove_m8F5B244890D81ADF723423B17F09C474EC362C4E(L_1, L_2, /*hidden argument*/Event_1_Remove_m8F5B244890D81ADF723423B17F09C474EC362C4E_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnBeforeRender()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnBeforeRender_m0818B254035656D9F104ECC0A560610A157839A6 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	{
		// PreCull();
		SteamVR_Behaviour_PreCull_m6646FC73833D0F3506A42D22CB6F7565D88783DE(__this, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::PreCull()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_PreCull_m6646FC73833D0F3506A42D22CB6F7565D88783DE (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_PreCull_m6646FC73833D0F3506A42D22CB6F7565D88783DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (Time.frameCount != lastFrameCount)
		int32_t L_0 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		int32_t L_1 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get_lastFrameCount_14();
		if ((((int32_t)L_0) == ((int32_t)L_1)))
		{
			goto IL_001b;
		}
	}
	{
		// lastFrameCount = Time.frameCount;
		int32_t L_2 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_lastFrameCount_14(L_2);
		// SteamVR_Input.OnPreCull();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_OnPreCull_mA4CD4296BCD557431B499AC0AC0C58493D01D169(/*hidden argument*/NULL);
	}

IL_001b:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::FixedUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_FixedUpdate_mAD9F306CBFC1E4819561E45BBABE8CADFB4DA790 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_FixedUpdate_mAD9F306CBFC1E4819561E45BBABE8CADFB4DA790_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// SteamVR_Input.FixedUpdate();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_FixedUpdate_m177FE3CA7F1B8732DF3FE5F3E56A1E0E2422DCE0(/*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_LateUpdate_mFAE43B15752AAC05ED726AA5B16D2A327C734D63 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_LateUpdate_mFAE43B15752AAC05ED726AA5B16D2A327C734D63_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// SteamVR_Input.LateUpdate();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_LateUpdate_mFA45F1D6538FD33644A2FC421DBDDB3D491EFA80(/*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Update_mF0BFBDD6F56BF7958EA199F1873A759DCED43BBC (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Update_mF0BFBDD6F56BF7958EA199F1873A759DCED43BBC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// SteamVR_Input.Update();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_Update_mF5146B4D36CF2D1B1EF27991EC46FA8A06F2B25B(/*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnQuit(Valve.VR.VREvent_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnQuit_m679A2B157C312FCC9954E648D63C0CCFB21AE737 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C  ___vrEvent0, const RuntimeMethod* method)
{
	{
		// Application.Quit();
		Application_Quit_mA005EB22CB989AC3794334754F15E1C0D2FF1C95(/*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour__ctor_mDE3B9B1471500E1486D749E5BED1CDFD3F95568B (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	{
		// public bool initializeSteamVROnAwake = true;
		__this->set_initializeSteamVROnAwake_7((bool)1);
		// public bool doNotDestroy = true;
		__this->set_doNotDestroy_8((bool)1);
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour__cctor_mF21007BCC5E9AE7CAA86433448A6B28962740AAB (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour__cctor_mF21007BCC5E9AE7CAA86433448A6B28962740AAB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public static bool forcingInitialization = false;
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)0);
		// internal static bool isPlaying = false;
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_isPlaying_10((bool)0);
		// private static bool initializing = false;
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_initializing_11((bool)0);
		// protected static int lastFrameCount = -1;
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_lastFrameCount_14((-1));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15__ctor_m476D34AD9FAB52D415A5F7BE548FA68F1C5D2A4F (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method)
{
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->set_U3CU3E1__state_0(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15_System_IDisposable_Dispose_m0343709BA8A25DAD888548ACFCCED7D518C45DED (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CDoInitializeSteamVRU3Ed__15_MoveNext_m46E4CD99DE21CC56C7C619D70C03B2E330B8C111 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoInitializeSteamVRU3Ed__15_MoveNext_m46E4CD99DE21CC56C7C619D70C03B2E330B8C111_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * V_1 = NULL;
	{
		int32_t L_0 = __this->get_U3CU3E1__state_0();
		V_0 = L_0;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_1 = __this->get_U3CU3E4__this_2();
		V_1 = L_1;
		int32_t L_2 = V_0;
		if (!L_2)
		{
			goto IL_0017;
		}
	}
	{
		int32_t L_3 = V_0;
		if ((((int32_t)L_3) == ((int32_t)1)))
		{
			goto IL_004b;
		}
	}
	{
		return (bool)0;
	}

IL_0017:
	{
		__this->set_U3CU3E1__state_0((-1));
		// XRDevice.deviceLoaded += XRDevice_deviceLoaded;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_4 = V_1;
		Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * L_5 = (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 *)il2cpp_codegen_object_new(Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0_il2cpp_TypeInfo_var);
		Action_1__ctor_mD9D4E02AEE600236E03EBAB2449B68B482FAC69B(L_5, L_4, (intptr_t)((intptr_t)SteamVR_Behaviour_XRDevice_deviceLoaded_mBAD5428CEB4E87DECF5870A84227DF9A3A760270_RuntimeMethod_var), /*hidden argument*/Action_1__ctor_mD9D4E02AEE600236E03EBAB2449B68B482FAC69B_RuntimeMethod_var);
		IL2CPP_RUNTIME_CLASS_INIT(XRDevice_t392FCA3D1DCEB95FF500C8F374C88B034C31DF4A_il2cpp_TypeInfo_var);
		XRDevice_add_deviceLoaded_m26813F2791F89E1058B14D5932BD00C2A009A74C(L_5, /*hidden argument*/NULL);
		// XRSettings.LoadDeviceByName(openVRDeviceName);
		XRSettings_LoadDeviceByName_m39BADCB8CB3C59E2DB929CEF7DFBF6CFA1209095(_stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2, /*hidden argument*/NULL);
		goto IL_0052;
	}

IL_003b:
	{
		// yield return null;
		__this->set_U3CU3E2__current_1(NULL);
		__this->set_U3CU3E1__state_0(1);
		return (bool)1;
	}

IL_004b:
	{
		__this->set_U3CU3E1__state_0((-1));
	}

IL_0052:
	{
		// while (loadedOpenVRDeviceSuccess == false)
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_6 = V_1;
		NullCheck(L_6);
		bool L_7 = L_6->get_loadedOpenVRDeviceSuccess_13();
		if (!L_7)
		{
			goto IL_003b;
		}
	}
	{
		// XRDevice.deviceLoaded -= XRDevice_deviceLoaded;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_8 = V_1;
		Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * L_9 = (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 *)il2cpp_codegen_object_new(Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0_il2cpp_TypeInfo_var);
		Action_1__ctor_mD9D4E02AEE600236E03EBAB2449B68B482FAC69B(L_9, L_8, (intptr_t)((intptr_t)SteamVR_Behaviour_XRDevice_deviceLoaded_mBAD5428CEB4E87DECF5870A84227DF9A3A760270_RuntimeMethod_var), /*hidden argument*/Action_1__ctor_mD9D4E02AEE600236E03EBAB2449B68B482FAC69B_RuntimeMethod_var);
		IL2CPP_RUNTIME_CLASS_INIT(XRDevice_t392FCA3D1DCEB95FF500C8F374C88B034C31DF4A_il2cpp_TypeInfo_var);
		XRDevice_remove_deviceLoaded_mC3D6CF39606865E78F1F19CA21613A8DD1B8EDDF(L_9, /*hidden argument*/NULL);
		// EnableOpenVR();
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_10 = V_1;
		NullCheck(L_10);
		SteamVR_Behaviour_EnableOpenVR_m7D05792DA3B94D1C9553D65294F10BCD68AEFEDA(L_10, /*hidden argument*/NULL);
		// }
		return (bool)0;
	}
}
// System.Object Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CDoInitializeSteamVRU3Ed__15_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mE2CCFDC3D05CD675D8AA4321940C4B5AC4372F3F (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m1E8B7365C4794907A6E2E282565B0A50D323DDB8 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m1E8B7365C4794907A6E2E282565B0A50D323DDB8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * L_0 = (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 *)il2cpp_codegen_object_new(NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var);
		NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33(L_0, /*hidden argument*/NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m1E8B7365C4794907A6E2E282565B0A50D323DDB8_RuntimeMethod_var);
	}
}
// System.Object Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_get_Current_m532E157FE2C5252B9412104AA75BE8849224DF41 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onChangeEvent(Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onChangeEvent_m4E16E1045975B6C45F4B23E19261861C2ECBE869 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onChangeEvent_m4E16E1045975B6C45F4B23E19261861C2ECBE869_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_0 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_1 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_2 = NULL;
	{
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_0 = __this->get_onChangeEvent_7();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_2 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6_il2cpp_TypeInfo_var));
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 ** L_5 = __this->get_address_of_onChangeEvent_7();
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_6 = V_2;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_7 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *>((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_9 = V_0;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_9) == ((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onChangeEvent(Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onChangeEvent_m1A60627E819B9BC0D882C8D614C7370D52C6331C (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onChangeEvent_m1A60627E819B9BC0D882C8D614C7370D52C6331C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_0 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_1 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_2 = NULL;
	{
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_0 = __this->get_onChangeEvent_7();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_2 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6_il2cpp_TypeInfo_var));
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 ** L_5 = __this->get_address_of_onChangeEvent_7();
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_6 = V_2;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_7 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *>((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_9 = V_0;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_9) == ((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onUpdateEvent(Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onUpdateEvent_m8E9D34E13022A600D746B6F66A2A08624CD0456D (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onUpdateEvent_m8E9D34E13022A600D746B6F66A2A08624CD0456D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_0 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_1 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_2 = NULL;
	{
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_0 = __this->get_onUpdateEvent_9();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_2 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1_il2cpp_TypeInfo_var));
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 ** L_5 = __this->get_address_of_onUpdateEvent_9();
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_6 = V_2;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_7 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *>((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_9 = V_0;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_9) == ((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onUpdateEvent(Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onUpdateEvent_m9F6333BFE5E152F40129DC9CB71A14D26A026D7E (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onUpdateEvent_m9F6333BFE5E152F40129DC9CB71A14D26A026D7E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_0 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_1 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_2 = NULL;
	{
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_0 = __this->get_onUpdateEvent_9();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_2 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1_il2cpp_TypeInfo_var));
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 ** L_5 = __this->get_address_of_onUpdateEvent_9();
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_6 = V_2;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_7 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *>((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_9 = V_0;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_9) == ((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onPressEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onPressEvent_m1E8354D85556C6325BCBC7FB14A94E30C092B59C (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onPressEvent_m1E8354D85556C6325BCBC7FB14A94E30C092B59C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_0 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_1 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_2 = NULL;
	{
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_0 = __this->get_onPressEvent_11();
		V_0 = L_0;
	}

IL_0007:
	{
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_1 = V_0;
		V_1 = L_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_2 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)CastclassSealed((RuntimeObject*)L_4, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D_il2cpp_TypeInfo_var));
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D ** L_5 = __this->get_address_of_onPressEvent_11();
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_6 = V_2;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_7 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_8 = InterlockedCompareExchangeImpl<StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *>((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D **)L_5, L_6, L_7);
		V_0 = L_8;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_9 = V_0;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_9) == ((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onPressEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onPressEvent_m7A0D1D766E9928FA154BD0399EBDDF808D44AE53 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onPressEvent_m7A0D1D766E9928FA154BD0399EBDDF808D44AE53_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_0 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_1 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_2 = NULL;
	{
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_0 = __this->get_onPressEvent_11();
		V_0 = L_0;
	}

IL_0007:
	{
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_1 = V_0;
		V_1 = L_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_2 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)CastclassSealed((RuntimeObject*)L_4, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D_il2cpp_TypeInfo_var));
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D ** L_5 = __this->get_address_of_onPressEvent_11();
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_6 = V_2;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_7 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_8 = InterlockedCompareExchangeImpl<StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *>((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D **)L_5, L_6, L_7);
		V_0 = L_8;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_9 = V_0;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_9) == ((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onPressDownEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onPressDownEvent_m78E458B70C90516E570A2FBEECEA70DD7119EF50 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onPressDownEvent_m78E458B70C90516E570A2FBEECEA70DD7119EF50_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_0 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_1 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_2 = NULL;
	{
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_0 = __this->get_onPressDownEvent_13();
		V_0 = L_0;
	}

IL_0007:
	{
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_1 = V_0;
		V_1 = L_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_2 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)CastclassSealed((RuntimeObject*)L_4, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24_il2cpp_TypeInfo_var));
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 ** L_5 = __this->get_address_of_onPressDownEvent_13();
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_6 = V_2;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_7 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_8 = InterlockedCompareExchangeImpl<StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *>((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_9 = V_0;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_9) == ((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onPressDownEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onPressDownEvent_mEF6D6F38AE12A6AB02BD363F31691665D2F74987 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onPressDownEvent_mEF6D6F38AE12A6AB02BD363F31691665D2F74987_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_0 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_1 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_2 = NULL;
	{
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_0 = __this->get_onPressDownEvent_13();
		V_0 = L_0;
	}

IL_0007:
	{
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_1 = V_0;
		V_1 = L_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_2 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)CastclassSealed((RuntimeObject*)L_4, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24_il2cpp_TypeInfo_var));
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 ** L_5 = __this->get_address_of_onPressDownEvent_13();
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_6 = V_2;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_7 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_8 = InterlockedCompareExchangeImpl<StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *>((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_9 = V_0;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_9) == ((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onPressUpEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onPressUpEvent_mAF306EAF78AFDA2889362A210101887043A57922 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onPressUpEvent_mAF306EAF78AFDA2889362A210101887043A57922_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_0 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_1 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_2 = NULL;
	{
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_0 = __this->get_onPressUpEvent_15();
		V_0 = L_0;
	}

IL_0007:
	{
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_1 = V_0;
		V_1 = L_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_2 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)CastclassSealed((RuntimeObject*)L_4, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5_il2cpp_TypeInfo_var));
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 ** L_5 = __this->get_address_of_onPressUpEvent_15();
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_6 = V_2;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_7 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_8 = InterlockedCompareExchangeImpl<StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *>((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_9 = V_0;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_9) == ((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onPressUpEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mBC83D15903D8D801B12D8FF3AF446720A61242AA (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mBC83D15903D8D801B12D8FF3AF446720A61242AA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_0 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_1 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_2 = NULL;
	{
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_0 = __this->get_onPressUpEvent_15();
		V_0 = L_0;
	}

IL_0007:
	{
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_1 = V_0;
		V_1 = L_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_2 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)CastclassSealed((RuntimeObject*)L_4, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5_il2cpp_TypeInfo_var));
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 ** L_5 = __this->get_address_of_onPressUpEvent_15();
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_6 = V_2;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_7 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_8 = InterlockedCompareExchangeImpl<StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *>((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_9 = V_0;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_9) == ((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Boolean::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Boolean_get_isActive_m39F28D7EA3E03B49DAEC48E37E534F7D8D164110 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	{
		// public bool isActive { get { return booleanAction[inputSource].active; } }
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_2);
		return L_3;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Behaviour_Boolean::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_ActionSet actionSet { get { if (booleanAction != null) return booleanAction.actionSet; else return null; } }
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_mFB76099464A8AAA9236C698A42B175537F5EF4FE(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// public SteamVR_ActionSet actionSet { get { if (booleanAction != null) return booleanAction.actionSet; else return null; } }
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_2 = __this->get_booleanAction_4();
		NullCheck(L_2);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_2);
		return L_3;
	}

IL_001a:
	{
		// public SteamVR_ActionSet actionSet { get { if (booleanAction != null) return booleanAction.actionSet; else return null; } }
		return (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)NULL;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_OnEnable_mDABBAADDA7B1608B84DA3C08CDB0FF95404E0F25 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_OnEnable_mDABBAADDA7B1608B84DA3C08CDB0FF95404E0F25_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (booleanAction == null)
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m3F980F171D77E1CF1D953F9E7EE4EDC800E44BF7(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// Debug.LogError("[SteamVR] Boolean action not set.", this);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteral75490E2CC47551562599B8A6004682CA5D470BD7, __this, /*hidden argument*/NULL);
		// return;
		return;
	}

IL_001a:
	{
		// AddHandlers();
		SteamVR_Behaviour_Boolean_AddHandlers_m823CFF107CF1AD53DE4C9EC1F9D4C176A82BB7B5(__this, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_OnDisable_m37B4D4DEBF7AD3EDA0F8BB6B14AA6527D436FB71 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	{
		// RemoveHandlers();
		SteamVR_Behaviour_Boolean_RemoveHandlers_mAC5DA1A3504CFE75A437DECA78C182AFAAAF525F(__this, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_AddHandlers_m823CFF107CF1AD53DE4C9EC1F9D4C176A82BB7B5 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_AddHandlers_m823CFF107CF1AD53DE4C9EC1F9D4C176A82BB7B5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// booleanAction[inputSource].onUpdate += SteamVR_Behaviour_Boolean_OnUpdate;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_3 = (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)il2cpp_codegen_object_new(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_mE13407DCCC32DE335A641BBEEB5EE2565AAA7052(L_3, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m5CF5771D7FD7C09E534720FD40E3E84BF5D58B2C_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_add_onUpdate_m43D27C8A8B7DFC39F24F31768AC83B87F380AA98(L_2, L_3, /*hidden argument*/NULL);
		// booleanAction[inputSource].onChange += SteamVR_Behaviour_Boolean_OnChange;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_4 = __this->get_booleanAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		NullCheck(L_4);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_6 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_7 = (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)il2cpp_codegen_object_new(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_m821738C90ED208E453FEBEE39FB4CD78EF6C4A08(L_7, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mF21C5814C265EFC4899C82CABD8F8B06AA15471B_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_6);
		SteamVR_Action_Boolean_Source_add_onChange_m14AB5553E5BEE97154D1ACE90FF20DFDEDED40E7(L_6, L_7, /*hidden argument*/NULL);
		// booleanAction[inputSource].onState += SteamVR_Behaviour_Boolean_OnState;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_8 = __this->get_booleanAction_4();
		int32_t L_9 = __this->get_inputSource_5();
		NullCheck(L_8);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_10 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_11 = (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)il2cpp_codegen_object_new(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var);
		StateHandler__ctor_m4258DE1F7D0DE8DA40762C0935553B32B6841E57(L_11, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m130430A4E29B8DFBC7CDCAE0B231DFD30CF44673_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_10);
		SteamVR_Action_Boolean_Source_add_onState_m9F952DE795F0A1BC8F161BE03F877894EA973823(L_10, L_11, /*hidden argument*/NULL);
		// booleanAction[inputSource].onStateDown += SteamVR_Behaviour_Boolean_OnStateDown;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_12 = __this->get_booleanAction_4();
		int32_t L_13 = __this->get_inputSource_5();
		NullCheck(L_12);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_14 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_12, L_13);
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_15 = (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)il2cpp_codegen_object_new(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var);
		StateDownHandler__ctor_m6271CC07935F4139DF0D5F88F608F7DBF82FF6F5(L_15, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mEFCBE06F5B95B7B22034582867FB7A5F8727E586_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_14);
		SteamVR_Action_Boolean_Source_add_onStateDown_m134E6EC8C9B791AA70682D015A0975D4DEA78149(L_14, L_15, /*hidden argument*/NULL);
		// booleanAction[inputSource].onStateUp += SteamVR_Behaviour_Boolean_OnStateUp;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_16 = __this->get_booleanAction_4();
		int32_t L_17 = __this->get_inputSource_5();
		NullCheck(L_16);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_18 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_16, L_17);
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_19 = (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)il2cpp_codegen_object_new(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var);
		StateUpHandler__ctor_m1D72844DE26B6E55070A8D0DFB88A31A09F0820F(L_19, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m1E9414957183586E6FF3E1E974A38D383F7E0DF7_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_18);
		SteamVR_Action_Boolean_Source_add_onStateUp_m12CDC2DD35ED4AC1CCD9C42AB149576D195B31C1(L_18, L_19, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_RemoveHandlers_mAC5DA1A3504CFE75A437DECA78C182AFAAAF525F (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_RemoveHandlers_mAC5DA1A3504CFE75A437DECA78C182AFAAAF525F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (booleanAction != null)
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_mFB76099464A8AAA9236C698A42B175537F5EF4FE(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_00bb;
		}
	}
	{
		// booleanAction[inputSource].onUpdate -= SteamVR_Behaviour_Boolean_OnUpdate;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_2 = __this->get_booleanAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_4 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_2, L_3);
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_5 = (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)il2cpp_codegen_object_new(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_mE13407DCCC32DE335A641BBEEB5EE2565AAA7052(L_5, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m5CF5771D7FD7C09E534720FD40E3E84BF5D58B2C_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_4);
		SteamVR_Action_Boolean_Source_remove_onUpdate_mAC0DFDB074F54D52DFE402808FB2235809562B85(L_4, L_5, /*hidden argument*/NULL);
		// booleanAction[inputSource].onChange -= SteamVR_Behaviour_Boolean_OnChange;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_6 = __this->get_booleanAction_4();
		int32_t L_7 = __this->get_inputSource_5();
		NullCheck(L_6);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_8 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_6, L_7);
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_9 = (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)il2cpp_codegen_object_new(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_m821738C90ED208E453FEBEE39FB4CD78EF6C4A08(L_9, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mF21C5814C265EFC4899C82CABD8F8B06AA15471B_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_8);
		SteamVR_Action_Boolean_Source_remove_onChange_mC157DE7645416252EEC96DFEECBC80CE7294CDED(L_8, L_9, /*hidden argument*/NULL);
		// booleanAction[inputSource].onState -= SteamVR_Behaviour_Boolean_OnState;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_10 = __this->get_booleanAction_4();
		int32_t L_11 = __this->get_inputSource_5();
		NullCheck(L_10);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_12 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_10, L_11);
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_13 = (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)il2cpp_codegen_object_new(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var);
		StateHandler__ctor_m4258DE1F7D0DE8DA40762C0935553B32B6841E57(L_13, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m130430A4E29B8DFBC7CDCAE0B231DFD30CF44673_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_12);
		SteamVR_Action_Boolean_Source_remove_onState_mE7577EF4670E0BB1EC939B92D024E29C825AD60E(L_12, L_13, /*hidden argument*/NULL);
		// booleanAction[inputSource].onStateDown -= SteamVR_Behaviour_Boolean_OnStateDown;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_14 = __this->get_booleanAction_4();
		int32_t L_15 = __this->get_inputSource_5();
		NullCheck(L_14);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_16 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_14, L_15);
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_17 = (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)il2cpp_codegen_object_new(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var);
		StateDownHandler__ctor_m6271CC07935F4139DF0D5F88F608F7DBF82FF6F5(L_17, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mEFCBE06F5B95B7B22034582867FB7A5F8727E586_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_16);
		SteamVR_Action_Boolean_Source_remove_onStateDown_m69EDBBEE11F60CD90D69A36C2146CD3532EA504F(L_16, L_17, /*hidden argument*/NULL);
		// booleanAction[inputSource].onStateUp -= SteamVR_Behaviour_Boolean_OnStateUp;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_18 = __this->get_booleanAction_4();
		int32_t L_19 = __this->get_inputSource_5();
		NullCheck(L_18);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_20 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_18, L_19);
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_21 = (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)il2cpp_codegen_object_new(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var);
		StateUpHandler__ctor_m1D72844DE26B6E55070A8D0DFB88A31A09F0820F(L_21, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m1E9414957183586E6FF3E1E974A38D383F7E0DF7_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_20);
		SteamVR_Action_Boolean_Source_remove_onStateUp_mA8DFD7672CA1FBA47512E22F6A5E8CA357FCFCB8(L_20, L_21, /*hidden argument*/NULL);
	}

IL_00bb:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnStateUp(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m1E9414957183586E6FF3E1E974A38D383F7E0DF7 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m1E9414957183586E6FF3E1E974A38D383F7E0DF7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onPressUp != null)
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onPressUp_14();
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		// onPressUp.Invoke(this, fromSource, false);
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_1 = __this->get_onPressUp_14();
		int32_t L_2 = ___fromSource1;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A(L_1, __this, L_2, (bool)0, /*hidden argument*/UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A_RuntimeMethod_var);
	}

IL_0016:
	{
		// if (onPressUpEvent != null)
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_3 = __this->get_onPressUpEvent_15();
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		// onPressUpEvent.Invoke(this, fromSource);
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_4 = __this->get_onPressUpEvent_15();
		int32_t L_5 = ___fromSource1;
		NullCheck(L_4);
		StateUpHandler_Invoke_m50FCB23C7A7A474D85188C5AD6C1258AFB6289EF(L_4, __this, L_5, /*hidden argument*/NULL);
	}

IL_002b:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnStateDown(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mEFCBE06F5B95B7B22034582867FB7A5F8727E586 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mEFCBE06F5B95B7B22034582867FB7A5F8727E586_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onPressDown != null)
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onPressDown_12();
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		// onPressDown.Invoke(this, fromSource, true);
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_1 = __this->get_onPressDown_12();
		int32_t L_2 = ___fromSource1;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A(L_1, __this, L_2, (bool)1, /*hidden argument*/UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A_RuntimeMethod_var);
	}

IL_0016:
	{
		// if (onPressDownEvent != null)
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_3 = __this->get_onPressDownEvent_13();
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		// onPressDownEvent.Invoke(this, fromSource);
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_4 = __this->get_onPressDownEvent_13();
		int32_t L_5 = ___fromSource1;
		NullCheck(L_4);
		StateDownHandler_Invoke_m9143FE3FB36ABDF2E97E78C1D47E21EE240E953B(L_4, __this, L_5, /*hidden argument*/NULL);
	}

IL_002b:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnState(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m130430A4E29B8DFBC7CDCAE0B231DFD30CF44673 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m130430A4E29B8DFBC7CDCAE0B231DFD30CF44673_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onPress != null)
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onPress_10();
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		// onPress.Invoke(this, fromSource, true);
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_1 = __this->get_onPress_10();
		int32_t L_2 = ___fromSource1;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A(L_1, __this, L_2, (bool)1, /*hidden argument*/UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A_RuntimeMethod_var);
	}

IL_0016:
	{
		// if (onPressEvent != null)
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_3 = __this->get_onPressEvent_11();
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		// onPressEvent.Invoke(this, fromSource);
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_4 = __this->get_onPressEvent_11();
		int32_t L_5 = ___fromSource1;
		NullCheck(L_4);
		StateHandler_Invoke_mC044280A789605C2CA717034981A510E46E94B92(L_4, __this, L_5, /*hidden argument*/NULL);
	}

IL_002b:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnUpdate(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m5CF5771D7FD7C09E534720FD40E3E84BF5D58B2C (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m5CF5771D7FD7C09E534720FD40E3E84BF5D58B2C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onUpdate != null)
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onUpdate_8();
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		// onUpdate.Invoke(this, fromSource, newState);
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_1 = __this->get_onUpdate_8();
		int32_t L_2 = ___fromSource1;
		bool L_3 = ___newState2;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A(L_1, __this, L_2, L_3, /*hidden argument*/UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A_RuntimeMethod_var);
	}

IL_0016:
	{
		// if (onUpdateEvent != null)
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_4 = __this->get_onUpdateEvent_9();
		if (!L_4)
		{
			goto IL_002c;
		}
	}
	{
		// onUpdateEvent.Invoke(this, fromSource, newState);
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_5 = __this->get_onUpdateEvent_9();
		int32_t L_6 = ___fromSource1;
		bool L_7 = ___newState2;
		NullCheck(L_5);
		UpdateHandler_Invoke_mAB0C8158A79B1F5B6B53B06FD58EA18B2BEBCFCB(L_5, __this, L_6, L_7, /*hidden argument*/NULL);
	}

IL_002c:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnChange(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mF21C5814C265EFC4899C82CABD8F8B06AA15471B (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mF21C5814C265EFC4899C82CABD8F8B06AA15471B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onChange != null)
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onChange_6();
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		// onChange.Invoke(this, fromSource, newState);
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_1 = __this->get_onChange_6();
		int32_t L_2 = ___fromSource1;
		bool L_3 = ___newState2;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A(L_1, __this, L_2, L_3, /*hidden argument*/UnityEvent_3_Invoke_m352BC5E6983A8D60B3BEC9CA4A232ADF280D265A_RuntimeMethod_var);
	}

IL_0016:
	{
		// if (onChangeEvent != null)
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_4 = __this->get_onChangeEvent_7();
		if (!L_4)
		{
			goto IL_002c;
		}
	}
	{
		// onChangeEvent.Invoke(this, fromSource, newState);
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_5 = __this->get_onChangeEvent_7();
		int32_t L_6 = ___fromSource1;
		bool L_7 = ___newState2;
		NullCheck(L_5);
		ChangeHandler_Invoke_mCD22516E5D9E57224F5705B66C987FD9E73769AB(L_5, __this, L_6, L_7, /*hidden argument*/NULL);
	}

IL_002c:
	{
		// }
		return;
	}
}
// System.String Valve.VR.SteamVR_Behaviour_Boolean::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Behaviour_Boolean_GetLocalizedName_m228AF527E0E5AE0DFDF4734D078F031E5D7B9176 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_GetLocalizedName_m228AF527E0E5AE0DFDF4734D078F031E5D7B9176_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (booleanAction != null)
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_mFB76099464A8AAA9236C698A42B175537F5EF4FE(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		// return booleanAction.GetLocalizedOriginPart(inputSource, localizedParts);
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_2 = __this->get_booleanAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_4 = ___localizedParts0;
		NullCheck(L_2);
		String_t* L_5 = SteamVR_Action_In_2_GetLocalizedOriginPart_m7946F1E5B03F2BC1C2E8890A4C6288540608CAB7(L_2, L_3, L_4, /*hidden argument*/SteamVR_Action_In_2_GetLocalizedOriginPart_m7946F1E5B03F2BC1C2E8890A4C6288540608CAB7_RuntimeMethod_var);
		return L_5;
	}

IL_0021:
	{
		// return null;
		return (String_t*)NULL;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean__ctor_m821FF1A7F1752705E38576AFCFD868D7607DF251 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	{
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m393DF335EED506BAE62DAC85241A2F0433F85107 (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m4267AD946E34DDE58660AF3D5E0DE2802C219885 (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m13FCEC857F276CCD363B9E0573760C7DC503157C (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m13FCEC857F276CCD363B9E0573760C7DC503157C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mECE0F49F30FFF685E9FC704166DC99B04723FB2F (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m4B960421A806566AF4B3174DE676B9E9C89A605E (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mCD22516E5D9E57224F5705B66C987FD9E73769AB (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_mD9F524B7A68D21351FD5AADC67315DB04D570B71 (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_mD9F524B7A68D21351FD5AADC67315DB04D570B71_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___newState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m4BA107A770BB8C45B69DBC39C6AE31DDE7C40C12 (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler__ctor_m8BB56914AFA3FC31D8FB4FB69132861AB9584469 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_Invoke_m9143FE3FB36ABDF2E97E78C1D47E21EE240E953B (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateDownHandler_BeginInvoke_mC153CDFAF7AC339FAACFDCFA082FF7258E6F134B (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateDownHandler_BeginInvoke_mC153CDFAF7AC339FAACFDCFA082FF7258E6F134B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_EndInvoke_mF9F5E8E59E6B1A44D0F7015E79382C9E7F333DDA (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler__ctor_m2C351B87EC6413EE624AC39907269015FA5A5FA6 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_Invoke_mC044280A789605C2CA717034981A510E46E94B92 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateHandler_BeginInvoke_m1DD3B0F3711284D0A5DD3DE07D064DC78C5336A8 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateHandler_BeginInvoke_m1DD3B0F3711284D0A5DD3DE07D064DC78C5336A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_EndInvoke_m77EE262D7748441721C0BCCB38BBBC265FC25B38 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler__ctor_mE4D38E7CD37C500DE7C7F5F209D067CCBE30F184 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_Invoke_m50FCB23C7A7A474D85188C5AD6C1258AFB6289EF (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateUpHandler_BeginInvoke_m8DF031B0D54DDA6BFBDE321B13DDF591FF2CB5D7 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateUpHandler_BeginInvoke_m8DF031B0D54DDA6BFBDE321B13DDF591FF2CB5D7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_EndInvoke_m4144367B3AEC3B21149CAB9E754C325D51A480E8 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m08B0D6191206893040150DCA9BC25CEF2E953ABE (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mAB0C8158A79B1F5B6B53B06FD58EA18B2BEBCFCB (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m39E0A14616B2409E7BBD0EBDE2C4877D7BDFCD34 (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m39E0A14616B2409E7BBD0EBDE2C4877D7BDFCD34_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___newState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m5D5E715F81027539D2C989CA5D3029BCEB29C171 (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_BooleanEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_BooleanEvent__ctor_m81B45943985C51D82C872146C8F9EEE8D1E726CD (SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_BooleanEvent__ctor_m81B45943985C51D82C872146C8F9EEE8D1E726CD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		UnityEvent_3__ctor_m91B112A0D14C5CA7DDDF2595028DEA1CDF5486E7(__this, /*hidden argument*/UnityEvent_3__ctor_m91B112A0D14C5CA7DDDF2595028DEA1CDF5486E7_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::get_isValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Pose_get_isValid_m5AC0D1CC9DBB794FC630D59EBDFEF7B959B71DE4 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	{
		// public bool isValid { get { return poseAction[inputSource].poseIsValid; } }
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		bool L_3 = SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Pose_get_isActive_m3AE822661630E96EAC58DEC6779AEC90D946462E (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	{
		// public bool isActive { get { return poseAction[inputSource].active; } }
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_2);
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_Start_mA7BDF89185033DF4FAD877A82134FFBDC5DCB83A (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_Start_mA7BDF89185033DF4FAD877A82134FFBDC5DCB83A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (poseAction == null)
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m3F980F171D77E1CF1D953F9E7EE4EDC800E44BF7(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> No pose action set for this component", this);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteralC8D5F6371B2F6BC2DEFFEF5B888A0F62ABB5C4CD, __this, /*hidden argument*/NULL);
		// return;
		return;
	}

IL_001a:
	{
		// CheckDeviceIndex();
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
		// if (origin == null)
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_origin_6();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_3)
		{
			goto IL_003f;
		}
	}
	{
		// origin = this.transform.parent;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_4, /*hidden argument*/NULL);
		__this->set_origin_6(L_5);
	}

IL_003f:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnEnable_m9498FC3A7BE7709B64D7330797E7495BE284F5FA (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnEnable_m9498FC3A7BE7709B64D7330797E7495BE284F5FA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// SteamVR.Initialize();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_Initialize_mACC3A05E160D196A04EF693265E13E9930A1FC02((bool)0, /*hidden argument*/NULL);
		// if (poseAction != null)
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_mFB76099464A8AAA9236C698A42B175537F5EF4FE(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_00a1;
		}
	}
	{
		// poseAction[inputSource].onUpdate += SteamVR_Behaviour_Pose_OnUpdate;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_2 = __this->get_poseAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_4 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_2, L_3);
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_5 = (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)il2cpp_codegen_object_new(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_mB229E4D4E00FE9946266DE5EF6387E240FA96D6D(L_5, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m336C9055314F522350A2E8E5A0CE8C056715627C_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_4);
		SteamVR_Action_Pose_Source_add_onUpdate_mD30D3D18C58E9FD060B58868A4D66478C06FCADD(L_4, L_5, /*hidden argument*/NULL);
		// poseAction[inputSource].onDeviceConnectedChanged += OnDeviceConnectedChanged;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_6 = __this->get_poseAction_4();
		int32_t L_7 = __this->get_inputSource_5();
		NullCheck(L_6);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_8 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_6, L_7);
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_9 = (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)il2cpp_codegen_object_new(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var);
		DeviceConnectedChangeHandler__ctor_mA41805A0B436012CFB19EAB0D88336B275CC206C(L_9, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 8)), /*hidden argument*/NULL);
		NullCheck(L_8);
		SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m26FF6E86E0FC25279D9DF124C3A00DA48AA22C6C(L_8, L_9, /*hidden argument*/NULL);
		// poseAction[inputSource].onTrackingChanged += OnTrackingChanged;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_10 = __this->get_poseAction_4();
		int32_t L_11 = __this->get_inputSource_5();
		NullCheck(L_10);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_12 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_10, L_11);
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_13 = (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)il2cpp_codegen_object_new(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var);
		TrackingChangeHandler__ctor_m349218462C65472313178FCB53D7C385ECF381D8(L_13, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 9)), /*hidden argument*/NULL);
		NullCheck(L_12);
		SteamVR_Action_Pose_Source_add_onTrackingChanged_m916FC64B7E280897083BF516B0A2B10BC4034499(L_12, L_13, /*hidden argument*/NULL);
		// poseAction[inputSource].onChange += SteamVR_Behaviour_Pose_OnChange;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_14 = __this->get_poseAction_4();
		int32_t L_15 = __this->get_inputSource_5();
		NullCheck(L_14);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_16 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_14, L_15);
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_17 = (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)il2cpp_codegen_object_new(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_m282D0F5DA54AA20DC12B31D0AC3F914C3B5382F8(L_17, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_m421F721865D803A4E945E6778BA9A7EFF5E951AF_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_16);
		SteamVR_Action_Pose_Source_add_onChange_m86F9A8C49AAB74EFBED5F82F2BD450687C529567(L_16, L_17, /*hidden argument*/NULL);
	}

IL_00a1:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnDisable_mA1F1266656EC494676707750F7C7D10A66053A23 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnDisable_mA1F1266656EC494676707750F7C7D10A66053A23_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (poseAction != null)
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_mFB76099464A8AAA9236C698A42B175537F5EF4FE(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_009b;
		}
	}
	{
		// poseAction[inputSource].onUpdate -= SteamVR_Behaviour_Pose_OnUpdate;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_2 = __this->get_poseAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_4 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_2, L_3);
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_5 = (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)il2cpp_codegen_object_new(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_mB229E4D4E00FE9946266DE5EF6387E240FA96D6D(L_5, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m336C9055314F522350A2E8E5A0CE8C056715627C_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_4);
		SteamVR_Action_Pose_Source_remove_onUpdate_m600E90F3012E310B2178CB34B8E3C3A35380A579(L_4, L_5, /*hidden argument*/NULL);
		// poseAction[inputSource].onDeviceConnectedChanged -= OnDeviceConnectedChanged;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_6 = __this->get_poseAction_4();
		int32_t L_7 = __this->get_inputSource_5();
		NullCheck(L_6);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_8 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_6, L_7);
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_9 = (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)il2cpp_codegen_object_new(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var);
		DeviceConnectedChangeHandler__ctor_mA41805A0B436012CFB19EAB0D88336B275CC206C(L_9, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 8)), /*hidden argument*/NULL);
		NullCheck(L_8);
		SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mC9B0E9333A8B27427E1197B77C6D287FD2C687F5(L_8, L_9, /*hidden argument*/NULL);
		// poseAction[inputSource].onTrackingChanged -= OnTrackingChanged;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_10 = __this->get_poseAction_4();
		int32_t L_11 = __this->get_inputSource_5();
		NullCheck(L_10);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_12 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_10, L_11);
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_13 = (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)il2cpp_codegen_object_new(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var);
		TrackingChangeHandler__ctor_m349218462C65472313178FCB53D7C385ECF381D8(L_13, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 9)), /*hidden argument*/NULL);
		NullCheck(L_12);
		SteamVR_Action_Pose_Source_remove_onTrackingChanged_m664E1FD884A6B739CF4BCAD82EE1168E234B0AAF(L_12, L_13, /*hidden argument*/NULL);
		// poseAction[inputSource].onChange -= SteamVR_Behaviour_Pose_OnChange;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_14 = __this->get_poseAction_4();
		int32_t L_15 = __this->get_inputSource_5();
		NullCheck(L_14);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_16 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_14, L_15);
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_17 = (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)il2cpp_codegen_object_new(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_m282D0F5DA54AA20DC12B31D0AC3F914C3B5382F8(L_17, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_m421F721865D803A4E945E6778BA9A7EFF5E951AF_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_16);
		SteamVR_Action_Pose_Source_remove_onChange_mB962374F5363148A48D573F22C5E1B385411E27F(L_16, L_17, /*hidden argument*/NULL);
	}

IL_009b:
	{
		// historyBuffer.Clear();
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_18 = __this->get_historyBuffer_19();
		NullCheck(L_18);
		SteamVR_RingBuffer_1_Clear_m2C7D896B3858292039808C7E01DF664897B475FF(L_18, /*hidden argument*/SteamVR_RingBuffer_1_Clear_m2C7D896B3858292039808C7E01DF664897B475FF_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::SteamVR_Behaviour_Pose_OnUpdate(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m336C9055314F522350A2E8E5A0CE8C056715627C (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m336C9055314F522350A2E8E5A0CE8C056715627C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// UpdateHistoryBuffer();
		SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE5965D2F04585896D0B4555AB7379C732AB045B6(__this, /*hidden argument*/NULL);
		// UpdateTransform();
		VirtActionInvoker0::Invoke(7 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateTransform() */, __this);
		// if (onTransformUpdated != null)
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_0 = __this->get_onTransformUpdated_7();
		if (!L_0)
		{
			goto IL_0026;
		}
	}
	{
		// onTransformUpdated.Invoke(this, inputSource);
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_1 = __this->get_onTransformUpdated_7();
		int32_t L_2 = __this->get_inputSource_5();
		NullCheck(L_1);
		UnityEvent_2_Invoke_mDC3ABD7C6EF5EC88E0AE0923288A39DD09F6FA90(L_1, __this, L_2, /*hidden argument*/UnityEvent_2_Invoke_mDC3ABD7C6EF5EC88E0AE0923288A39DD09F6FA90_RuntimeMethod_var);
	}

IL_0026:
	{
		// if (onTransformUpdatedEvent != null)
		UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * L_3 = __this->get_onTransformUpdatedEvent_12();
		if (!L_3)
		{
			goto IL_0040;
		}
	}
	{
		// onTransformUpdatedEvent.Invoke(this, inputSource);
		UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * L_4 = __this->get_onTransformUpdatedEvent_12();
		int32_t L_5 = __this->get_inputSource_5();
		NullCheck(L_4);
		UpdateHandler_Invoke_mDDA906529471A51F856EB671F5A44826ABE33068(L_4, __this, L_5, /*hidden argument*/NULL);
	}

IL_0040:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_UpdateTransform_m81AE92492AD65C97F0718B163D0887C3ED51A73C (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_UpdateTransform_m81AE92492AD65C97F0718B163D0887C3ED51A73C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// CheckDeviceIndex();
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
		// if (origin != null)
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_origin_6();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0077;
		}
	}
	{
		// transform.position = origin.transform.TransformPoint(poseAction[inputSource].localPosition);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = __this->get_origin_6();
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_3, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_5 = __this->get_poseAction_4();
		int32_t L_6 = __this->get_inputSource_5();
		NullCheck(L_5);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_7 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_5, L_6);
		NullCheck(L_7);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_7, /*hidden argument*/NULL);
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_4, L_8, /*hidden argument*/NULL);
		NullCheck(L_2);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_2, L_9, /*hidden argument*/NULL);
		// transform.rotation = origin.rotation * poseAction[inputSource].localRotation;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_origin_6();
		NullCheck(L_11);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_11, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_13 = __this->get_poseAction_4();
		int32_t L_14 = __this->get_inputSource_5();
		NullCheck(L_13);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_15 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_13, L_14);
		NullCheck(L_15);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_16 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_15, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_17 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_12, L_16, /*hidden argument*/NULL);
		NullCheck(L_10);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_10, L_17, /*hidden argument*/NULL);
		// }
		return;
	}

IL_0077:
	{
		// transform.localPosition = poseAction[inputSource].localPosition;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_19 = __this->get_poseAction_4();
		int32_t L_20 = __this->get_inputSource_5();
		NullCheck(L_19);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_21 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_19, L_20);
		NullCheck(L_21);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_21, /*hidden argument*/NULL);
		NullCheck(L_18);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_18, L_22, /*hidden argument*/NULL);
		// transform.localRotation = poseAction[inputSource].localRotation;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_23 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_24 = __this->get_poseAction_4();
		int32_t L_25 = __this->get_inputSource_5();
		NullCheck(L_24);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_26 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_24, L_25);
		NullCheck(L_26);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_27 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_26, /*hidden argument*/NULL);
		NullCheck(L_23);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_23, L_27, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::SteamVR_Behaviour_Pose_OnChange(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_m421F721865D803A4E945E6778BA9A7EFF5E951AF (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_m421F721865D803A4E945E6778BA9A7EFF5E951AF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onTransformChanged != null)
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_0 = __this->get_onTransformChanged_8();
		if (!L_0)
		{
			goto IL_0015;
		}
	}
	{
		// onTransformChanged.Invoke(this, fromSource);
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_1 = __this->get_onTransformChanged_8();
		int32_t L_2 = ___fromSource1;
		NullCheck(L_1);
		UnityEvent_2_Invoke_mDC3ABD7C6EF5EC88E0AE0923288A39DD09F6FA90(L_1, __this, L_2, /*hidden argument*/UnityEvent_2_Invoke_mDC3ABD7C6EF5EC88E0AE0923288A39DD09F6FA90_RuntimeMethod_var);
	}

IL_0015:
	{
		// if (onTransformChangedEvent != null)
		ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * L_3 = __this->get_onTransformChangedEvent_13();
		if (!L_3)
		{
			goto IL_002a;
		}
	}
	{
		// onTransformChangedEvent.Invoke(this, fromSource);
		ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * L_4 = __this->get_onTransformChangedEvent_13();
		int32_t L_5 = ___fromSource1;
		NullCheck(L_4);
		ChangeHandler_Invoke_m08F52092C2F8FD9116F4F4A94A2B9062C9735815(L_4, __this, L_5, /*hidden argument*/NULL);
	}

IL_002a:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_mFE4BFCCB03C93479CEA39FB1768970FF06D19054 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___changedAction0, int32_t ___changedSource1, bool ___connected2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_mFE4BFCCB03C93479CEA39FB1768970FF06D19054_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// CheckDeviceIndex();
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
		// if (onConnectedChanged != null)
		SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * L_0 = __this->get_onConnectedChanged_9();
		if (!L_0)
		{
			goto IL_0021;
		}
	}
	{
		// onConnectedChanged.Invoke(this, inputSource, connected);
		SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * L_1 = __this->get_onConnectedChanged_9();
		int32_t L_2 = __this->get_inputSource_5();
		bool L_3 = ___connected2;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m3A78EF6BF93EE4D499650755D51FDC077326A4F3(L_1, __this, L_2, L_3, /*hidden argument*/UnityEvent_3_Invoke_m3A78EF6BF93EE4D499650755D51FDC077326A4F3_RuntimeMethod_var);
	}

IL_0021:
	{
		// if (onConnectedChangedEvent != null)
		DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * L_4 = __this->get_onConnectedChangedEvent_14();
		if (!L_4)
		{
			goto IL_003c;
		}
	}
	{
		// onConnectedChangedEvent.Invoke(this, inputSource, connected);
		DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * L_5 = __this->get_onConnectedChangedEvent_14();
		int32_t L_6 = __this->get_inputSource_5();
		bool L_7 = ___connected2;
		NullCheck(L_5);
		DeviceConnectedChangeHandler_Invoke_m637148C39A2326D56FC7B774FF3E4EDF6F6355F0(L_5, __this, L_6, L_7, /*hidden argument*/NULL);
	}

IL_003c:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnTrackingChanged(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnTrackingChanged_mD620444D43D0DBAD25D5DBE734518A1D2FC866F0 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___changedAction0, int32_t ___changedSource1, int32_t ___trackingChanged2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnTrackingChanged_mD620444D43D0DBAD25D5DBE734518A1D2FC866F0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onTrackingChanged != null)
		SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * L_0 = __this->get_onTrackingChanged_10();
		if (!L_0)
		{
			goto IL_001b;
		}
	}
	{
		// onTrackingChanged.Invoke(this, inputSource, trackingChanged);
		SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * L_1 = __this->get_onTrackingChanged_10();
		int32_t L_2 = __this->get_inputSource_5();
		int32_t L_3 = ___trackingChanged2;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m85D272CC49BAAEA486833C6EF0950B82842CEF5F(L_1, __this, L_2, L_3, /*hidden argument*/UnityEvent_3_Invoke_m85D272CC49BAAEA486833C6EF0950B82842CEF5F_RuntimeMethod_var);
	}

IL_001b:
	{
		// if (onTrackingChangedEvent != null)
		TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * L_4 = __this->get_onTrackingChangedEvent_15();
		if (!L_4)
		{
			goto IL_0036;
		}
	}
	{
		// onTrackingChangedEvent.Invoke(this, inputSource, trackingChanged);
		TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * L_5 = __this->get_onTrackingChangedEvent_15();
		int32_t L_6 = __this->get_inputSource_5();
		int32_t L_7 = ___trackingChanged2;
		NullCheck(L_5);
		TrackingChangeHandler_Invoke_m8DFF53BE0761028A6D670B44B4A14CCF3D8A848C(L_5, __this, L_6, L_7, /*hidden argument*/NULL);
	}

IL_0036:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_CheckDeviceIndex_m660A5E3A27DA0FB0480B932C8F5DBABD5F049821 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_CheckDeviceIndex_m660A5E3A27DA0FB0480B932C8F5DBABD5F049821_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// if (poseAction[inputSource].active && poseAction[inputSource].deviceIsConnected)
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_2);
		if (!L_3)
		{
			goto IL_00e0;
		}
	}
	{
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_4 = __this->get_poseAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		NullCheck(L_4);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_6 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		NullCheck(L_6);
		bool L_7 = SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB(L_6, /*hidden argument*/NULL);
		if (!L_7)
		{
			goto IL_00e0;
		}
	}
	{
		// int currentDeviceIndex = (int)poseAction[inputSource].trackedDeviceIndex;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_8 = __this->get_poseAction_4();
		int32_t L_9 = __this->get_inputSource_5();
		NullCheck(L_8);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_10 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		NullCheck(L_10);
		uint32_t L_11 = SteamVR_Action_In_Source_get_trackedDeviceIndex_m3AE971D28C54215B8531E9D35CE939CCA3927947(L_10, /*hidden argument*/NULL);
		V_0 = L_11;
		// if (deviceIndex != currentDeviceIndex)
		int32_t L_12 = __this->get_deviceIndex_18();
		int32_t L_13 = V_0;
		if ((((int32_t)L_12) == ((int32_t)L_13)))
		{
			goto IL_00e0;
		}
	}
	{
		// deviceIndex = currentDeviceIndex;
		int32_t L_14 = V_0;
		__this->set_deviceIndex_18(L_14);
		// if (broadcastDeviceChanges)
		bool L_15 = __this->get_broadcastDeviceChanges_17();
		if (!L_15)
		{
			goto IL_00a0;
		}
	}
	{
		// this.gameObject.BroadcastMessage("SetInputSource", inputSource, SendMessageOptions.DontRequireReceiver);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_16 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		int32_t L_17 = __this->get_inputSource_5();
		int32_t L_18 = L_17;
		RuntimeObject * L_19 = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &L_18);
		NullCheck(L_16);
		GameObject_BroadcastMessage_mDF70A40A7E27DF70B4338EBB840500A54060E33D(L_16, _stringLiteralEAC095C8508D4D9F7B01D7D09BDECE985F78C376, L_19, 1, /*hidden argument*/NULL);
		// this.gameObject.BroadcastMessage("SetDeviceIndex", deviceIndex, SendMessageOptions.DontRequireReceiver);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		int32_t L_21 = __this->get_deviceIndex_18();
		int32_t L_22 = L_21;
		RuntimeObject * L_23 = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &L_22);
		NullCheck(L_20);
		GameObject_BroadcastMessage_mDF70A40A7E27DF70B4338EBB840500A54060E33D(L_20, _stringLiteralE4187BF2FD07B599844663814FE58065E3DDA0E8, L_23, 1, /*hidden argument*/NULL);
	}

IL_00a0:
	{
		// if (onDeviceIndexChanged != null)
		SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * L_24 = __this->get_onDeviceIndexChanged_11();
		if (!L_24)
		{
			goto IL_00c0;
		}
	}
	{
		// onDeviceIndexChanged.Invoke(this, inputSource, deviceIndex);
		SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * L_25 = __this->get_onDeviceIndexChanged_11();
		int32_t L_26 = __this->get_inputSource_5();
		int32_t L_27 = __this->get_deviceIndex_18();
		NullCheck(L_25);
		UnityEvent_3_Invoke_mD4A4C2D0CA068E45CD98111CAE832D288E038E98(L_25, __this, L_26, L_27, /*hidden argument*/UnityEvent_3_Invoke_mD4A4C2D0CA068E45CD98111CAE832D288E038E98_RuntimeMethod_var);
	}

IL_00c0:
	{
		// if (onDeviceIndexChangedEvent != null)
		DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * L_28 = __this->get_onDeviceIndexChangedEvent_16();
		if (!L_28)
		{
			goto IL_00e0;
		}
	}
	{
		// onDeviceIndexChangedEvent.Invoke(this, inputSource, deviceIndex);
		DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * L_29 = __this->get_onDeviceIndexChangedEvent_16();
		int32_t L_30 = __this->get_inputSource_5();
		int32_t L_31 = __this->get_deviceIndex_18();
		NullCheck(L_29);
		DeviceIndexChangedHandler_Invoke_mC7F54C10D012458FDE950B3349945FE096798356(L_29, __this, L_30, L_31, /*hidden argument*/NULL);
	}

IL_00e0:
	{
		// }
		return;
	}
}
// System.Int32 Valve.VR.SteamVR_Behaviour_Pose::GetDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Behaviour_Pose_GetDeviceIndex_mCBF8724DEBE7053CFD08BEF1FC7C13FAA8B1AC2E (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	{
		// if (deviceIndex == -1)
		int32_t L_0 = __this->get_deviceIndex_18();
		if ((!(((uint32_t)L_0) == ((uint32_t)(-1)))))
		{
			goto IL_000f;
		}
	}
	{
		// CheckDeviceIndex();
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
	}

IL_000f:
	{
		// return deviceIndex;
		int32_t L_1 = __this->get_deviceIndex_18();
		return L_1;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Behaviour_Pose::GetVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Behaviour_Pose_GetVelocity_mBB18AD40A0D65C96D224253A7B275B512348ADEF (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	{
		// return poseAction[inputSource].velocity;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Behaviour_Pose::GetAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Behaviour_Pose_GetAngularVelocity_mDD92D9D3AB3DEFF686F851056814F2D2C39FE19D (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	{
		// return poseAction[inputSource].angularVelocity;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Pose_GetVelocitiesAtTimeOffset_m82B232D89B253ACA9FE3FE4C26471BB3A75C4D82 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity2, const RuntimeMethod* method)
{
	{
		// return poseAction[inputSource].GetVelocitiesAtTimeOffset(secondsFromNow, out velocity, out angularVelocity);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		float L_3 = ___secondsFromNow0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___velocity1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_5 = ___angularVelocity2;
		NullCheck(L_2);
		bool L_6 = SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m2FB2A8F8F97750A6CAD390348AAE8E9DF94B9B69(L_2, L_3, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_5, /*hidden argument*/NULL);
		return L_6;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::GetEstimatedPeakVelocities(UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_GetEstimatedPeakVelocities_m5D8B74CD7C6F89B832F673D2D82CF1D0A648425B (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity1, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// int top = historyBuffer.GetTopVelocity(10, 1);
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_0 = __this->get_historyBuffer_19();
		NullCheck(L_0);
		int32_t L_1 = SteamVR_HistoryBuffer_GetTopVelocity_m9879A66440CD7741F7032B4EA29EB7807A54663E(L_0, ((int32_t)10), 1, /*hidden argument*/NULL);
		V_0 = L_1;
		// historyBuffer.GetAverageVelocities(out velocity, out angularVelocity, 2, top);
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_2 = __this->get_historyBuffer_19();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = ___velocity0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___angularVelocity1;
		int32_t L_5 = V_0;
		NullCheck(L_2);
		SteamVR_HistoryBuffer_GetAverageVelocities_mA06C8875232AF8B028643E48DF4824828E809ED7(L_2, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_3, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4, 2, L_5, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateHistoryBuffer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE5965D2F04585896D0B4555AB7379C732AB045B6 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// int currentFrame = Time.frameCount;
		int32_t L_0 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		V_0 = L_0;
		// if (lastFrameUpdated != currentFrame)
		int32_t L_1 = __this->get_lastFrameUpdated_20();
		int32_t L_2 = V_0;
		if ((((int32_t)L_1) == ((int32_t)L_2)))
		{
			goto IL_0079;
		}
	}
	{
		// historyBuffer.Update(poseAction[inputSource].localPosition, poseAction[inputSource].localRotation, poseAction[inputSource].velocity, poseAction[inputSource].angularVelocity);
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_3 = __this->get_historyBuffer_19();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_4 = __this->get_poseAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		NullCheck(L_4);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_6 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		NullCheck(L_6);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_6, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_8 = __this->get_poseAction_4();
		int32_t L_9 = __this->get_inputSource_5();
		NullCheck(L_8);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_10 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		NullCheck(L_10);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_11 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_10, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_12 = __this->get_poseAction_4();
		int32_t L_13 = __this->get_inputSource_5();
		NullCheck(L_12);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_14 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_12, L_13);
		NullCheck(L_14);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(L_14, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_16 = __this->get_poseAction_4();
		int32_t L_17 = __this->get_inputSource_5();
		NullCheck(L_16);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_18 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_16, L_17);
		NullCheck(L_18);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(L_18, /*hidden argument*/NULL);
		NullCheck(L_3);
		SteamVR_HistoryBuffer_Update_m1725BFA78088B923B0A9A9EEB4552AE27DE167B0(L_3, L_7, L_11, L_15, L_19, /*hidden argument*/NULL);
		// lastFrameUpdated = currentFrame;
		int32_t L_20 = V_0;
		__this->set_lastFrameUpdated_20(L_20);
	}

IL_0079:
	{
		// }
		return;
	}
}
// System.String Valve.VR.SteamVR_Behaviour_Pose::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Behaviour_Pose_GetLocalizedName_mB8C89CE045222C39A407A2D9D5ED2CDC2CB156A5 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_GetLocalizedName_mB8C89CE045222C39A407A2D9D5ED2CDC2CB156A5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (poseAction != null)
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_mFB76099464A8AAA9236C698A42B175537F5EF4FE(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		// return poseAction.GetLocalizedOriginPart(inputSource, localizedParts);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_2 = __this->get_poseAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_4 = ___localizedParts0;
		NullCheck(L_2);
		String_t* L_5 = SteamVR_Action_In_2_GetLocalizedOriginPart_m6B8853113B1DDDB2FA182A1A68D34C62C7DE0B0D(L_2, L_3, L_4, /*hidden argument*/SteamVR_Action_In_2_GetLocalizedOriginPart_m6B8853113B1DDDB2FA182A1A68D34C62C7DE0B0D_RuntimeMethod_var);
		return L_5;
	}

IL_0021:
	{
		// return null;
		return (String_t*)NULL;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose__ctor_m47E03357B7EFA19BFB80145138A2C41E4E222E06 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose__ctor_m47E03357B7EFA19BFB80145138A2C41E4E222E06_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Pose poseAction = SteamVR_Input.GetAction<SteamVR_Action_Pose>("Pose");
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m023E8D67A6FE7772CBA906DD9D78CF46E68507A6(_stringLiteralD92A04E3CAD38B3C3435F2D66D371A05D88CCDE8, (bool)0, /*hidden argument*/SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m023E8D67A6FE7772CBA906DD9D78CF46E68507A6_RuntimeMethod_var);
		__this->set_poseAction_4(L_0);
		// public bool broadcastDeviceChanges = true;
		__this->set_broadcastDeviceChanges_17((bool)1);
		// protected int deviceIndex = -1;
		__this->set_deviceIndex_18((-1));
		// protected SteamVR_HistoryBuffer historyBuffer = new SteamVR_HistoryBuffer(30);
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_1 = (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 *)il2cpp_codegen_object_new(SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8_il2cpp_TypeInfo_var);
		SteamVR_HistoryBuffer__ctor_mE5FCF2AC8A1DC7776A467E386A5DF05D5B58C543(L_1, ((int32_t)30), /*hidden argument*/NULL);
		__this->set_historyBuffer_19(L_1);
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m122FF26CB2040136AAC738932546470B03C669D8 (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m19D4019E39A3BD61D437FD31C73AE14350979B60 (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_mDAC87011DFBB3A741F9193B72EFFCB727DC51399 (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_mDAC87011DFBB3A741F9193B72EFFCB727DC51399_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m154DEB582FF089E70AA36B0CF9DD9503DA2F1A72 (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m9F75F18D2AE709094993C1B734EE94C8FB52B9E9 (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m08F52092C2F8FD9116F4F4A94A2B9062C9735815 (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m4A37E07F0C7389137045967EC103049B216BACE5 (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_m4A37E07F0C7389137045967EC103049B216BACE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m793C051AD3B9C1260A0ADD0171DE4DBFE0648EAB (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_mAAA01CE5B525C8790E74A154805E47E09CA85964 (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_m637148C39A2326D56FC7B774FF3E4EDF6F6355F0 (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___deviceConnected2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___deviceConnected2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceConnectedChangeHandler_BeginInvoke_m8C9DFDDCC365A23F9107BF992A9905B278F51647 (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceConnectedChangeHandler_BeginInvoke_m8C9DFDDCC365A23F9107BF992A9905B278F51647_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___deviceConnected2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_EndInvoke_m84E2F30A400F96CFED450367A4AE4CDA7F8D51C9 (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler__ctor_m1D7A4747290EA3B9A04A3617D41DB1F7DEDF29BA (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler_Invoke_mC7F54C10D012458FDE950B3349945FE096798356 (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___newDeviceIndex2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						GenericVirtActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						VirtActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newDeviceIndex2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceIndexChangedHandler_BeginInvoke_mB8E7E026CDAB6167F6F3AE598A707D646BE07EC4 (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___newDeviceIndex2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceIndexChangedHandler_BeginInvoke_mB8E7E026CDAB6167F6F3AE598A707D646BE07EC4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___newDeviceIndex2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler_EndInvoke_m83C2F675B7BE9E2A65766996E37CE21451DB32EC (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_mDE532EA75068CEAC2F27F97ED34C3E2A3525815F (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m8DFF53BE0761028A6D670B44B4A14CCF3D8A848C (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						GenericVirtActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___trackingState2);
					else
						VirtActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___trackingState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___trackingState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TrackingChangeHandler_BeginInvoke_m42D9F5FF3E35F0672FE3431BB949155AA4AC80AA (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TrackingChangeHandler_BeginInvoke_m42D9F5FF3E35F0672FE3431BB949155AA4AC80AA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var, &___trackingState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_EndInvoke_m49B06D9F09F8F4162C88B4FA39359F7785E188C5 (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mC093B2BC352832B5BCB532F8099E6C2DE87E0F5E (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mDDA906529471A51F856EB671F5A44826ABE33068 (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m5A11BA90EC77DC6A74A4A3EB330BB4C3999F3DEE (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m5A11BA90EC77DC6A74A4A3EB330BB4C3999F3DEE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m4DD6D54D491E4BF733403560A12B2997F591AA87 (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler__ctor_m846A221888E4CFFCBB422DE19C248DE084575043 (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m75789E0C42CA3B9C97C679304C0962E539DCE7E3 (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___validPose2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___validPose2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___validPose2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___validPose2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___validPose2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___validPose2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ValidPoseChangeHandler_BeginInvoke_mE150825338987C90F88253830B7C4DE4DB11F9A2 (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ValidPoseChangeHandler_BeginInvoke_mE150825338987C90F88253830B7C4DE4DB11F9A2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___validPose2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_EndInvoke_mB65461A715335860AC16A24A19140C607DFCE46F (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_PoseEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_PoseEvent__ctor_m9EB4E76C9187D57B3CCDFE1255455758C8C7467C (SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_PoseEvent__ctor_m9EB4E76C9187D57B3CCDFE1255455758C8C7467C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		UnityEvent_2__ctor_m137357246070AFA3B17FB19910C2A1185E6D8621(__this, /*hidden argument*/UnityEvent_2__ctor_m137357246070AFA3B17FB19910C2A1185E6D8621_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mA5DB93D4F0447DF0D7C3711C37FDCDB97373C914 (SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mA5DB93D4F0447DF0D7C3711C37FDCDB97373C914_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		UnityEvent_3__ctor_mCD47DA05DC1F58F7F16CC19983F3A4496808D370(__this, /*hidden argument*/UnityEvent_3__ctor_mCD47DA05DC1F58F7F16CC19983F3A4496808D370_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m17A931B1220A938634CC8CC09243BA0926887206 (SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m17A931B1220A938634CC8CC09243BA0926887206_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		UnityEvent_3__ctor_m66C9678D0591A0E9192455E02726644C922DA272(__this, /*hidden argument*/UnityEvent_3__ctor_m66C9678D0591A0E9192455E02726644C922DA272_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mA27FBEBE9B24BB447618E00852546BE261419869 (SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mA27FBEBE9B24BB447618E00852546BE261419869_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		UnityEvent_3__ctor_m10F71AE70BD85BB8601FBA6614DDB9C0F985F2EE(__this, /*hidden argument*/UnityEvent_3__ctor_m10F71AE70BD85BB8601FBA6614DDB9C0F985F2EE_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Behaviour_Single::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Single_get_isActive_m42351A7065A2C04D27DC30A5EFB454C1F402E07C (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	{
		// public bool isActive { get { return singleAction.GetActive(inputSource); } }
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		bool L_2 = VirtFuncInvoker1< bool, int32_t >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action::GetActive(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_OnEnable_m71A92CB17B71C081D810774EA5A478510DA646F4 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_OnEnable_m71A92CB17B71C081D810774EA5A478510DA646F4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (singleAction == null)
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m3F980F171D77E1CF1D953F9E7EE4EDC800E44BF7(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// Debug.LogError("[SteamVR] Single action not set.", this);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteralB54CB9DBF86B2FBF3225C977A4074AA174D5411E, __this, /*hidden argument*/NULL);
		// return;
		return;
	}

IL_001a:
	{
		// AddHandlers();
		SteamVR_Behaviour_Single_AddHandlers_m33DFA219D2F2AD321D3959EF6F374EB90DE9A545(__this, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_OnDisable_m077C12616B7C80FBC492F0E5BA3E612BFB0835DA (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	{
		// RemoveHandlers();
		SteamVR_Behaviour_Single_RemoveHandlers_m823BF0CB040DDBD5205EDF83C240384A0155A928(__this, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_AddHandlers_m33DFA219D2F2AD321D3959EF6F374EB90DE9A545 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_AddHandlers_m33DFA219D2F2AD321D3959EF6F374EB90DE9A545_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// singleAction[inputSource].onUpdate += SteamVR_Behaviour_Single_OnUpdate;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)il2cpp_codegen_object_new(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_m6B04127973436C135BDB28626E480F28EF3FD6F5(L_3, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m44FF8FEB2FF5FC6CE899988F2FD8123B0F0D207F_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onUpdate_m5598F5E0ABEB41135E942BD9590CA88A5E89A167(L_2, L_3, /*hidden argument*/NULL);
		// singleAction[inputSource].onChange += SteamVR_Behaviour_Single_OnChange;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_4 = __this->get_singleAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		NullCheck(L_4);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_6 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_7 = (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)il2cpp_codegen_object_new(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mCF2663657392E7296C21F3A6E3F8DB6A77A94CAD(L_7, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_m6076628455AFF0E8E5D1881ECC1DA1AEECB853AF_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_6);
		SteamVR_Action_Single_Source_add_onChange_m293210E1B8395F5C75302844AF1B4AE74DD2F3A8(L_6, L_7, /*hidden argument*/NULL);
		// singleAction[inputSource].onAxis += SteamVR_Behaviour_Single_OnAxis;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_8 = __this->get_singleAction_4();
		int32_t L_9 = __this->get_inputSource_5();
		NullCheck(L_8);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_10 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_11 = (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)il2cpp_codegen_object_new(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var);
		AxisHandler__ctor_m13D20337BE85E01A8B0DA46EC96C10B767B0D1F7(L_11, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7FF9841FC2827462D25AB20E82A4E047FF261DCD_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_10);
		SteamVR_Action_Single_Source_add_onAxis_m61631AE5B07E5BA034D52ED44590597E6A13AC24(L_10, L_11, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_RemoveHandlers_m823BF0CB040DDBD5205EDF83C240384A0155A928 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_RemoveHandlers_m823BF0CB040DDBD5205EDF83C240384A0155A928_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (singleAction != null)
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_mFB76099464A8AAA9236C698A42B175537F5EF4FE(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0074;
		}
	}
	{
		// singleAction[inputSource].onUpdate -= SteamVR_Behaviour_Single_OnUpdate;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_2 = __this->get_singleAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		NullCheck(L_2);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_4 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_2, L_3);
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_5 = (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)il2cpp_codegen_object_new(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_m6B04127973436C135BDB28626E480F28EF3FD6F5(L_5, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m44FF8FEB2FF5FC6CE899988F2FD8123B0F0D207F_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_4);
		SteamVR_Action_Single_Source_remove_onUpdate_mB6B6416FED4DA773EFB6D97EE7E6C9ED8F4CA16C(L_4, L_5, /*hidden argument*/NULL);
		// singleAction[inputSource].onChange -= SteamVR_Behaviour_Single_OnChange;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_6 = __this->get_singleAction_4();
		int32_t L_7 = __this->get_inputSource_5();
		NullCheck(L_6);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_8 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_6, L_7);
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_9 = (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)il2cpp_codegen_object_new(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mCF2663657392E7296C21F3A6E3F8DB6A77A94CAD(L_9, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_m6076628455AFF0E8E5D1881ECC1DA1AEECB853AF_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_8);
		SteamVR_Action_Single_Source_remove_onChange_m416E274F58D3F80F3E2AC77BC933E1D1F8BBDECD(L_8, L_9, /*hidden argument*/NULL);
		// singleAction[inputSource].onAxis -= SteamVR_Behaviour_Single_OnAxis;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_10 = __this->get_singleAction_4();
		int32_t L_11 = __this->get_inputSource_5();
		NullCheck(L_10);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_12 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_10, L_11);
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_13 = (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)il2cpp_codegen_object_new(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var);
		AxisHandler__ctor_m13D20337BE85E01A8B0DA46EC96C10B767B0D1F7(L_13, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7FF9841FC2827462D25AB20E82A4E047FF261DCD_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_12);
		SteamVR_Action_Single_Source_remove_onAxis_m75F1ECD8DFD59FAFE831C580F22F1E2A0039D742(L_12, L_13, /*hidden argument*/NULL);
	}

IL_0074:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::SteamVR_Behaviour_Single_OnUpdate(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m44FF8FEB2FF5FC6CE899988F2FD8123B0F0D207F (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m44FF8FEB2FF5FC6CE899988F2FD8123B0F0D207F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onUpdate != null)
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_0 = __this->get_onUpdate_7();
		if (!L_0)
		{
			goto IL_0018;
		}
	}
	{
		// onUpdate.Invoke(this, fromSource, newAxis, newDelta);
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_1 = __this->get_onUpdate_7();
		int32_t L_2 = ___fromSource1;
		float L_3 = ___newAxis2;
		float L_4 = ___newDelta3;
		NullCheck(L_1);
		UnityEvent_4_Invoke_m0BEEA262F9A9CB9B641A2FD8F786D8E254B63030(L_1, __this, L_2, L_3, L_4, /*hidden argument*/UnityEvent_4_Invoke_m0BEEA262F9A9CB9B641A2FD8F786D8E254B63030_RuntimeMethod_var);
	}

IL_0018:
	{
		// if (onUpdateEvent != null)
		UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * L_5 = __this->get_onUpdateEvent_10();
		if (!L_5)
		{
			goto IL_0030;
		}
	}
	{
		// onUpdateEvent.Invoke(this, fromSource, newAxis, newDelta);
		UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * L_6 = __this->get_onUpdateEvent_10();
		int32_t L_7 = ___fromSource1;
		float L_8 = ___newAxis2;
		float L_9 = ___newDelta3;
		NullCheck(L_6);
		UpdateHandler_Invoke_m50B155030C06D9169010AFE5AFDB2CCF06B98907(L_6, __this, L_7, L_8, L_9, /*hidden argument*/NULL);
	}

IL_0030:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::SteamVR_Behaviour_Single_OnChange(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_m6076628455AFF0E8E5D1881ECC1DA1AEECB853AF (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_m6076628455AFF0E8E5D1881ECC1DA1AEECB853AF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onChange != null)
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_0 = __this->get_onChange_6();
		if (!L_0)
		{
			goto IL_0018;
		}
	}
	{
		// onChange.Invoke(this, fromSource, newAxis, newDelta);
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_1 = __this->get_onChange_6();
		int32_t L_2 = ___fromSource1;
		float L_3 = ___newAxis2;
		float L_4 = ___newDelta3;
		NullCheck(L_1);
		UnityEvent_4_Invoke_m0BEEA262F9A9CB9B641A2FD8F786D8E254B63030(L_1, __this, L_2, L_3, L_4, /*hidden argument*/UnityEvent_4_Invoke_m0BEEA262F9A9CB9B641A2FD8F786D8E254B63030_RuntimeMethod_var);
	}

IL_0018:
	{
		// if (onChangeEvent != null)
		ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * L_5 = __this->get_onChangeEvent_9();
		if (!L_5)
		{
			goto IL_0030;
		}
	}
	{
		// onChangeEvent.Invoke(this, fromSource, newAxis, newDelta);
		ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * L_6 = __this->get_onChangeEvent_9();
		int32_t L_7 = ___fromSource1;
		float L_8 = ___newAxis2;
		float L_9 = ___newDelta3;
		NullCheck(L_6);
		ChangeHandler_Invoke_mD29E394EC0C784FB63674CE10FA7A33CA8B6446E(L_6, __this, L_7, L_8, L_9, /*hidden argument*/NULL);
	}

IL_0030:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::SteamVR_Behaviour_Single_OnAxis(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7FF9841FC2827462D25AB20E82A4E047FF261DCD (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7FF9841FC2827462D25AB20E82A4E047FF261DCD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onAxis != null)
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_0 = __this->get_onAxis_8();
		if (!L_0)
		{
			goto IL_0018;
		}
	}
	{
		// onAxis.Invoke(this, fromSource, newAxis, newDelta);
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_1 = __this->get_onAxis_8();
		int32_t L_2 = ___fromSource1;
		float L_3 = ___newAxis2;
		float L_4 = ___newDelta3;
		NullCheck(L_1);
		UnityEvent_4_Invoke_m0BEEA262F9A9CB9B641A2FD8F786D8E254B63030(L_1, __this, L_2, L_3, L_4, /*hidden argument*/UnityEvent_4_Invoke_m0BEEA262F9A9CB9B641A2FD8F786D8E254B63030_RuntimeMethod_var);
	}

IL_0018:
	{
		// if (onAxisEvent != null)
		AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * L_5 = __this->get_onAxisEvent_11();
		if (!L_5)
		{
			goto IL_0030;
		}
	}
	{
		// onAxisEvent.Invoke(this, fromSource, newAxis, newDelta);
		AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * L_6 = __this->get_onAxisEvent_11();
		int32_t L_7 = ___fromSource1;
		float L_8 = ___newAxis2;
		float L_9 = ___newDelta3;
		NullCheck(L_6);
		AxisHandler_Invoke_m4B47C4900401208173B5B125531557B156F37DD6(L_6, __this, L_7, L_8, L_9, /*hidden argument*/NULL);
	}

IL_0030:
	{
		// }
		return;
	}
}
// System.String Valve.VR.SteamVR_Behaviour_Single::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Behaviour_Single_GetLocalizedName_mB9D12572F9BADB69FE39312B206F226679830AC9 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_GetLocalizedName_mB9D12572F9BADB69FE39312B206F226679830AC9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (singleAction != null)
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_mFB76099464A8AAA9236C698A42B175537F5EF4FE(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		// return singleAction.GetLocalizedOriginPart(inputSource, localizedParts);
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_2 = __this->get_singleAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_4 = ___localizedParts0;
		NullCheck(L_2);
		String_t* L_5 = SteamVR_Action_In_2_GetLocalizedOriginPart_m529B61D802BBCF28F2C092C5346383AEA75A3668(L_2, L_3, L_4, /*hidden argument*/SteamVR_Action_In_2_GetLocalizedOriginPart_m529B61D802BBCF28F2C092C5346383AEA75A3668_RuntimeMethod_var);
		return L_5;
	}

IL_0021:
	{
		// return null;
		return (String_t*)NULL;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single__ctor_mF838498ECD7BE18A2122B7AB2F71FB19B38205FD (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	{
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3CbonePositionsU3Ek__BackingField_44();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3CboneRotationsU3Ek__BackingField_45();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3ClastBonePositionsU3Ek__BackingField_46();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3ClastBoneRotationsU3Ek__BackingField_47();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_rangeOfMotion_mCEFC5B01B736A3B6218C5C91A0AEF272FFD88B47_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = __this->get_U3CrangeOfMotionU3Ek__BackingField_48();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_rangeOfMotion_mD5E750C97DF02D77264C6215272D1982987A1483_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CrangeOfMotionU3Ek__BackingField_48(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m0D9D61CC1BC50CC7FA1F9AD5192FBC418009F3F3_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = __this->get_U3CskeletalTransformSpaceU3Ek__BackingField_49();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_mF6B1E1B08AE63F49B66DDCFA097DA28DB8378783_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CskeletalTransformSpaceU3Ek__BackingField_49(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = __this->get_U3CsummaryDataTypeU3Ek__BackingField_50();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_summaryDataType_mC513A7AACFFC7DC686764E9A982DFAC02EC5B2F5_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CsummaryDataTypeU3Ek__BackingField_50(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerCurlsU3Ek__BackingField_51();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerSplaysU3Ek__BackingField_52();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerCurlsU3Ek__BackingField_53();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerSplaysU3Ek__BackingField_54();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_poseChanged_mBBFFCD8FF3AB5998C3B5053499A253E137EB6B01_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = __this->get_U3CposeChangedU3Ek__BackingField_55();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = __this->get_U3ConlyUpdateSummaryDataU3Ek__BackingField_56();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m02A775C0CAB57C16D4A673019586873F7C0B3CFB_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = ___value0;
		__this->set_U3ConlyUpdateSummaryDataU3Ek__BackingField_56(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 localPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClocalPositionU3Ek__BackingField_23();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion localRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClocalRotationU3Ek__BackingField_24();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 velocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CvelocityU3Ek__BackingField_27();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 angularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CangularVelocityU3Ek__BackingField_29();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastLocalPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastLocalPositionU3Ek__BackingField_25();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion lastLocalRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClastLocalRotationU3Ek__BackingField_26();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastVelocityU3Ek__BackingField_28();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAngularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastAngularVelocityU3Ek__BackingField_30();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_bonePositions_m96408532FED1D966DE56612099B679DA8FBBF8D9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3CbonePositionsU3Ek__BackingField_44(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBonePositions_m8E63D828A81C99EEA6A4C55BA74D48F7C7F19CBF_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3ClastBonePositionsU3Ek__BackingField_46(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_boneRotations_m2B92E87BC6C9E456075204D69BD82CAE759F46E2_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3CboneRotationsU3Ek__BackingField_45(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mF1526AAAFE4506F1F70D22BED03D04083E75E3F8_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3ClastBoneRotationsU3Ek__BackingField_47(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerCurls_m2A1933C7FE83EB6B654B248354B4438B1B15C0BD_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerCurlsU3Ek__BackingField_51(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerSplays_mB8BA373C6A1A65E39FD6D8AF1566A31F18BA7055_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerSplaysU3Ek__BackingField_52(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerCurls_mA6CF9BCD46F49F1A95627142A70D9FA3C4F490E5_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerCurlsU3Ek__BackingField_53(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerSplays_m1E2D198E4627EA80F69A67AB26943144BD45DC70_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerSplaysU3Ek__BackingField_54(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_poseChanged_m359037EAC8B53761892E89E13D0A1FCC31A222EC_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CposeChangedU3Ek__BackingField_55(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float changedTime { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CchangedTimeU3Ek__BackingField_6(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = __this->get_U3CinputSourceU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_set_inputSource_m9871BD4130FD7649FAF628248DCAEAE32B19236E_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CinputSourceU3Ek__BackingField_0(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_fullPath_m7532C77C62FC0CE955B4CF3581815398179B33EF_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = ___value0;
		__this->set_U3CfullPathU3Ek__BackingField_0(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_actionSet_mB40E957F963E0E3755C77F78B2094A06834B366F_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get; protected set; }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = ___value0;
		__this->set_U3CactionSetU3Ek__BackingField_2(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_direction_m952BA1C44972F3D692FB1E5A53B275A397B86F02_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CdirectionU3Ek__BackingField_3(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = __this->get_U3CfullPathU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_handle_mD2434905F9AA79607DC207C7C7855E0DCDFAF417_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, uint64_t ___value0, const RuntimeMethod* method)
{
	{
		// public ulong handle { get; protected set; }
		uint64_t L_0 = ___value0;
		__this->set_U3ChandleU3Ek__BackingField_1(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CaxisU3Ek__BackingField_17();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastAxisU3Ek__BackingField_18();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CdeltaU3Ek__BackingField_19();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastDeltaU3Ek__BackingField_20();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastAxis_m28E7093728C01D3ABBF9871752E734D022101498_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastAxisU3Ek__BackingField_18(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastDelta_m1140772DB3236B7C53E1B0723623DC3F564FC5BE_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastDeltaU3Ek__BackingField_20(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float updateTime { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CupdateTimeU3Ek__BackingField_5(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_axis_m5714B37391AC92E5DB0BB3E1D600280B054A063D_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CaxisU3Ek__BackingField_17(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_delta_mE23EC73FCF0BFAAE785BFED2A3E3DF99A7A0A824_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CdeltaU3Ek__BackingField_19(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 axis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CaxisU3Ek__BackingField_17();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastAxis_mB5307EA9C41A76639B02A5FB7C775E14C7E8BE8E_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAxis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastAxisU3Ek__BackingField_18();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 delta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CdeltaU3Ek__BackingField_19();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastDelta_mBCB31D8D0D5F3B64784F01EAFFC7311F1E07B467_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastDelta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastDeltaU3Ek__BackingField_20();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastAxis_m28F3924C1B15B865D8AEFAF67281F05757648473_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAxis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastAxisU3Ek__BackingField_18(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastDelta_m7BEEB33B48E2BE301807AA1D6A754858D4BB1FFA_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastDelta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastDeltaU3Ek__BackingField_20(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_axis_mB9D09CB96B3545F03A433FBFF015D9112D4D9ED1_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 axis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CaxisU3Ek__BackingField_17(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_delta_m264245821BC9CC75826758D185828BE590B6A1B6_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 delta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CdeltaU3Ek__BackingField_19(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_Source_get_timeLastExecuted_m0813BD23177FE42617BF97C01D592865C6464465_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public float timeLastExecuted { get; protected set; }
		float L_0 = __this->get_U3CtimeLastExecutedU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_timeLastExecuted_m1C13828DAEAC810794E69F6D684765E023131834_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float timeLastExecuted { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CtimeLastExecutedU3Ek__BackingField_7(L_0);
		return;
	}
}
